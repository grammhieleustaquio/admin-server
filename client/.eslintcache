[{"C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\index.js":"1","C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\reportWebVitals.js":"2","C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\GlobalContext\\AuthContext.js":"3","C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\App.js":"4","C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\views\\Login.js":"5","C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\views\\Register.js":"6","C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\views\\AdminDashboard.js":"7","C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\views\\DriversTableListContent.js":"8","C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\views\\UsersTableListContent.js":"9","C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\views\\AssignJeepneyDriverDashboard.js":"10","C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\views\\JeepneysTableListContent.js":"11","C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\views\\BarangaysTableListContent.js":"12","C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\ProtectedRoutes\\AdminProtectedRoutes.js":"13","C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\views\\FunFactsTableListContents.js":"14","C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\GlobalReducer\\AuthReducer.js":"15","C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\ProtectedRoutes\\LoginProtectedRoutes.js":"16","C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\ProtectedRoutes\\MainProtectedRoutes.js":"17","C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\views\\RouteListContent.js":"18","C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\views\\JeepneyRouteContent.js":"19","C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\Layout\\AdminLayout.js":"20","C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\views\\index.js":"21","C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\views\\Imaged.js":"22","C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\views\\Admin.js":"23","C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\Dashboard\\index.js":"24","C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\DriversTableList\\index.js":"25","C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\UsersTableList\\index.js":"26","C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\AssignJeepneyDriver\\index.js":"27","C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\JeepneysTableList\\index.js":"28","C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\BarangaysTableList\\index.js":"29","C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\FunFactsTableList\\index.js":"30","C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\JeepneyRoute\\index.js":"31","C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\UsersTableList\\UsersTableList.js":"32","C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\AssignJeepneyDriver\\AssignJeepneyDriver.js":"33","C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\JeepneysTableList\\JeepneysTableList.js":"34","C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\FunFactsTableList\\FunFactsTableList.js":"35","C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\BarangaysTableList\\BarangaysTableList.js":"36","C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\Dashboard\\Dashboard.js":"37","C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\DriversTableList\\DriversTableList.js":"38","C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\JeepneyRoute\\RouteList.js":"39","C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\JeepneyRoute\\JeepneyRoute.js":"40","C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\JeepneysTableList\\AddJeepneyImageModal.js":"41","C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\UsersTableList\\UsersInfoModal.js":"42","C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\JeepneysTableList\\EditJeepneyModal.js":"43","C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\JeepneysTableList\\AddJeepneyModal.js":"44","C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\JeepneysTableList\\JeepneysInfoModal.js":"45","C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\DriversTableList\\EditDriverModal.js":"46","C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\BarangaysTableList\\AddBarangayImageModal.js":"47","C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\FunFactsTableList\\AddFunfactsModal.js":"48","C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\DriversTableList\\AddDriverImageModal.js":"49","C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\DriversTableList\\AddDriverModal.js":"50","C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\DriversTableList\\DriversInfoModal.js":"51","C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\BarangaysTableList\\AddBarangayModal.js":"52","C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\BarangaysTableList\\BarangaysInfoModal.js":"53","C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\BarangaysTableList\\EditBarangayModal.js":"54","C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\JeepneyRoute\\AddRoute.js":"55","C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\JeepneyRoute\\EditRoute.js":"56"},{"size":653,"mtime":1611921176403,"results":"57","hashOfConfig":"58"},{"size":375,"mtime":1611921176403,"results":"59","hashOfConfig":"58"},{"size":1906,"mtime":1612674517057,"results":"60","hashOfConfig":"58"},{"size":4014,"mtime":1619853952776,"results":"61","hashOfConfig":"58"},{"size":2816,"mtime":1616921721160,"results":"62","hashOfConfig":"58"},{"size":4104,"mtime":1616921782388,"results":"63","hashOfConfig":"58"},{"size":380,"mtime":1612675300891,"results":"64","hashOfConfig":"58"},{"size":417,"mtime":1611987532843,"results":"65","hashOfConfig":"58"},{"size":409,"mtime":1612700021679,"results":"66","hashOfConfig":"58"},{"size":504,"mtime":1613308439020,"results":"67","hashOfConfig":"58"},{"size":442,"mtime":1612699767345,"results":"68","hashOfConfig":"58"},{"size":427,"mtime":1611987195571,"results":"69","hashOfConfig":"58"},{"size":636,"mtime":1611921176380,"results":"70","hashOfConfig":"58"},{"size":492,"mtime":1614176951843,"results":"71","hashOfConfig":"58"},{"size":447,"mtime":1612442736640,"results":"72","hashOfConfig":"58"},{"size":609,"mtime":1611921176380,"results":"73","hashOfConfig":"58"},{"size":688,"mtime":1612674517135,"results":"74","hashOfConfig":"58"},{"size":453,"mtime":1619853952780,"results":"75","hashOfConfig":"58"},{"size":465,"mtime":1619853952779,"results":"76","hashOfConfig":"58"},{"size":3492,"mtime":1619854935468,"results":"77","hashOfConfig":"58"},{"size":48,"mtime":1611921176418,"results":"78","hashOfConfig":"58"},{"size":286,"mtime":1616922470974,"results":"79","hashOfConfig":"58"},{"size":1093,"mtime":1613308439020,"results":"80","hashOfConfig":"58"},{"size":157,"mtime":1612674517026,"results":"81","hashOfConfig":"58"},{"size":192,"mtime":1611921176370,"results":"82","hashOfConfig":"58"},{"size":132,"mtime":1612700044610,"results":"83","hashOfConfig":"58"},{"size":207,"mtime":1613308438861,"results":"84","hashOfConfig":"58"},{"size":135,"mtime":1612444419879,"results":"85","hashOfConfig":"58"},{"size":202,"mtime":1611921176360,"results":"86","hashOfConfig":"58"},{"size":197,"mtime":1614176951832,"results":"87","hashOfConfig":"58"},{"size":248,"mtime":1619853952778,"results":"88","hashOfConfig":"58"},{"size":3128,"mtime":1614337280150,"results":"89","hashOfConfig":"58"},{"size":10064,"mtime":1616924120400,"results":"90","hashOfConfig":"58"},{"size":4240,"mtime":1614176951842,"results":"91","hashOfConfig":"58"},{"size":3402,"mtime":1616925095429,"results":"92","hashOfConfig":"58"},{"size":3655,"mtime":1613723692480,"results":"93","hashOfConfig":"58"},{"size":2707,"mtime":1619853952776,"results":"94","hashOfConfig":"58"},{"size":3911,"mtime":1619853952776,"results":"95","hashOfConfig":"58"},{"size":4442,"mtime":1619860364282,"results":"96","hashOfConfig":"58"},{"size":2318,"mtime":1619855594772,"results":"97","hashOfConfig":"58"},{"size":6213,"mtime":1613723279819,"results":"98","hashOfConfig":"58"},{"size":4012,"mtime":1616925178042,"results":"99","hashOfConfig":"58"},{"size":5486,"mtime":1616924333838,"results":"100","hashOfConfig":"58"},{"size":5607,"mtime":1616923992194,"results":"101","hashOfConfig":"58"},{"size":5839,"mtime":1616924352148,"results":"102","hashOfConfig":"58"},{"size":5651,"mtime":1616924191144,"results":"103","hashOfConfig":"58"},{"size":6404,"mtime":1616924990325,"results":"104","hashOfConfig":"58"},{"size":6348,"mtime":1614176951831,"results":"105","hashOfConfig":"58"},{"size":6370,"mtime":1613723117679,"results":"106","hashOfConfig":"58"},{"size":6051,"mtime":1616923874374,"results":"107","hashOfConfig":"58"},{"size":5623,"mtime":1616924247683,"results":"108","hashOfConfig":"58"},{"size":4600,"mtime":1616925004211,"results":"109","hashOfConfig":"58"},{"size":5406,"mtime":1616925028760,"results":"110","hashOfConfig":"58"},{"size":4921,"mtime":1616925054752,"results":"111","hashOfConfig":"58"},{"size":3990,"mtime":1619859767395,"results":"112","hashOfConfig":"58"},{"size":4704,"mtime":1619860482109,"results":"113","hashOfConfig":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},"14ipd2m",{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"116"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"116"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"116"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"116"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"116"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"116"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"116"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"116"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"116"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"116"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"116"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"116"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"116"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"116"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"116"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"116"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"116"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"116"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"116"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"116"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"116"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"116"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"240"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"116"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"116"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"116"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"116"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"116"},"C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\index.js",[],["256","257"],"C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\reportWebVitals.js",[],"C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\GlobalContext\\AuthContext.js",[],"C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\App.js",["258","259","260","261","262","263","264","265"],"import React, { useState, useEffect, useContext, Component } from \"react\";\r\nimport logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  ProtectedRoute,\r\n  Link,\r\n} from \"react-router-dom\";\r\n\r\nimport LoginProtectedRoutes from \"./components/ProtectedRoutes/LoginProtectedRoutes\";\r\nimport AdminProtectedRoutes from \"./components/ProtectedRoutes/AdminProtectedRoutes\";\r\nimport MainProtectedRoutes from \"./components/ProtectedRoutes/MainProtectedRoutes\";\r\n\r\nimport { AuthContext } from \"./components/GlobalContext/AuthContext\";\r\n\r\nimport { Admin } from \"./views\";\r\nimport Login from \"./views/Login\";\r\nimport Register from \"./views/Register\";\r\nimport AdminLayout from \"./components/Layout/AdminLayout\";\r\nimport AdminDashboard from \"./views/AdminDashboard\";\r\nimport BarangaysTableListContent from \"./views/BarangaysTableListContent\";\r\nimport DriversTableListContent from \"./views/DriversTableListContent\";\r\nimport JeepneysTableListContent from \"./views/JeepneysTableListContent\";\r\nimport UsersTableListContent from \"./views/UsersTableListContent\";\r\nimport AssignJeepneyDriverDashboard from \"./views/AssignJeepneyDriverDashboard\";\r\nimport FunFactsTableListContents from \"./views/FunFactsTableListContents\";\r\nimport JeepneyRouteContent from \"./views/JeepneyRouteContent\";\r\nimport RouteListContent from \"./views/RouteListContent\";\r\n\r\nfunction App() {\r\n  let Auth = useContext(AuthContext);\r\n  return (\r\n    <React.Fragment>\r\n      {!Auth.state.isLoading && (\r\n        <Router>\r\n          <Switch>\r\n            <LoginProtectedRoutes\r\n              Auth={Auth}\r\n              path=\"/login\"\r\n              component={Login}\r\n              exact\r\n            />\r\n            <MainProtectedRoutes\r\n              Auth={Auth}\r\n              path=\"/\"\r\n              layout={AdminLayout}\r\n              component={AdminDashboard}\r\n              exact\r\n            />\r\n            <MainProtectedRoutes\r\n              Auth={Auth}\r\n              layout={AdminLayout}\r\n              path=\"/barangay-list\"\r\n              component={BarangaysTableListContent}\r\n              exact\r\n            />\r\n            <MainProtectedRoutes\r\n              Auth={Auth}\r\n              layout={AdminLayout}\r\n              path=\"/driver-list\"\r\n              component={DriversTableListContent}\r\n              exact\r\n            />\r\n            <MainProtectedRoutes\r\n              Auth={Auth}\r\n              layout={AdminLayout}\r\n              path=\"/jeepney-list\"\r\n              component={JeepneysTableListContent}\r\n              exact\r\n            />\r\n            <MainProtectedRoutes\r\n              Auth={Auth}\r\n              layout={AdminLayout}\r\n              path=\"/assigned-driver\"\r\n              component={AssignJeepneyDriverDashboard}\r\n              exact\r\n            />\r\n            <MainProtectedRoutes\r\n              Auth={Auth}\r\n              layout={AdminLayout}\r\n              path=\"/users-list\"\r\n              component={UsersTableListContent}\r\n              exact\r\n            />\r\n            <MainProtectedRoutes\r\n              Auth={Auth}\r\n              layout={AdminLayout}\r\n              path=\"/funfacts-list\"\r\n              component={FunFactsTableListContents}\r\n              exact\r\n            />\r\n            <MainProtectedRoutes\r\n              Auth={Auth}\r\n              layout={AdminLayout}\r\n              path=\"/jeepney-routes\"\r\n              component={JeepneyRouteContent}\r\n              exact\r\n            />\r\n            <MainProtectedRoutes\r\n              Auth={Auth}\r\n              layout={AdminLayout}\r\n              path=\"/jeepney-routes/:id\"\r\n              component={RouteListContent}\r\n              exact\r\n            />\r\n            <LoginProtectedRoutes\r\n              Auth={Auth}\r\n              path=\"/register\"\r\n              component={Register}\r\n              exact\r\n            />\r\n            <Route component={() => <h1>URL NOT FOUND</h1>} />\r\n          </Switch>\r\n        </Router>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\views\\Login.js",["266","267"],"import React, { useContext } from \"react\";\r\nimport { Form, Input, Button, Card, Row, Col, Typography, Modal } from \"antd\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { AuthContext } from \".././components/GlobalContext/AuthContext\";\r\nimport Imaged from \"./Imaged\";\r\nconst { Title } = Typography;\r\n\r\nfunction Login({ history }) {\r\n  let Auth = useContext(AuthContext);\r\n\r\n  const onFinish = async (values) => {\r\n    let { success, errorMessage } = await Auth.authenticate(values);\r\n    {\r\n      success\r\n        ? Modal.success({\r\n            content: \"Successfully Log in!\",\r\n          })\r\n        : Modal.error({\r\n            content: \"Email or Password is incorrect!\",\r\n          });\r\n    }\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  return (\r\n    <div className=\"loginCard\">\r\n      <Row\r\n        type=\"flex\"\r\n        justify=\"center\"\r\n        align=\"middle\"\r\n        style={{ minHeight: \"80vh\" }}\r\n      >\r\n        <Col>\r\n          <Card\r\n            title={<Title level={2}>Retrack ADMIN</Title>}\r\n            className=\"loginCardStyle\"\r\n          >\r\n            <cardBody>\r\n              <Imaged />\r\n              <Form\r\n                layout=\"vertical\"\r\n                name=\"basic\"\r\n                initialValues={{ remember: true }}\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n              >\r\n                <Form.Item\r\n                  label=\"Email:\"\r\n                  name=\"email\"\r\n                  rules={[\r\n                    {\r\n                      type: \"email\",\r\n                      message: \"The input is not valid E-mail!\",\r\n                    },\r\n                    { required: true, message: \"Please input your Email!\" },\r\n                  ]}\r\n                >\r\n                  <Input placeholder=\"Email\"/>\r\n                </Form.Item>\r\n                <Form.Item\r\n                  label=\"Password:\"\r\n                  name=\"password\"\r\n                  rules={[\r\n                    { required: true, message: \"Please input your password!\" },\r\n                  ]}\r\n                >\r\n                  <Input.Password placeholder=\"Password\" />\r\n                </Form.Item>\r\n                <Form.Item>\r\n                  <a style={{ float: \"right\" }} href=\"/register\">\r\n                    Create an Account?\r\n                  </a>\r\n                </Form.Item>\r\n                <Button\r\n                  type=\"primary\"\r\n                  htmlType=\"submit\"\r\n                  shape=\"round\"\r\n                  className=\"form-button\"\r\n                >\r\n                  LOGIN\r\n                </Button>\r\n              </Form>\r\n            </cardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Login);\r\n","C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\views\\Register.js",[],"C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\views\\AdminDashboard.js",[],"C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\views\\DriversTableListContent.js",[],"C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\views\\UsersTableListContent.js",[],"C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\views\\AssignJeepneyDriverDashboard.js",[],"C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\views\\JeepneysTableListContent.js",[],"C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\views\\BarangaysTableListContent.js",[],"C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\ProtectedRoutes\\AdminProtectedRoutes.js",["268"],"import React from \"react\";\r\nimport { Route, Redirect, withRouter } from \"react-router-dom\";\r\n\r\nfunction AdminProtectedRoute({ component: Component, Auth, history, res }) {\r\n  console.log(Auth);\r\n  return (\r\n    <Route\r\n      {...res}\r\n      render={(props) =>\r\n        Auth.state.isAuthenticated && Auth.state.userData.myStatus == \"home\" ? (\r\n          <Component Auth={Auth} />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/login\",\r\n              state: { from: props.location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default withRouter(AdminProtectedRoute);\r\n","C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\views\\FunFactsTableListContents.js",[],"C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\GlobalReducer\\AuthReducer.js",["269"],"export default (state, action) => {\r\n  switch (action.type) {\r\n    case \"LOAD_TOKEN\":\r\n      return {\r\n        ...state,\r\n        secureToken: action.secureToken,\r\n        userData: action.userData,\r\n        isAuthenticated: true,\r\n        isLoading: false,\r\n      };\r\n\r\n    case \"LOADING\":\r\n      return { ...state, isLoading: false };\r\n\r\n    case \"LOAD_USER_DATA\":\r\n      return { ...state };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n","C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\ProtectedRoutes\\LoginProtectedRoutes.js",["270"],"import React from \"react\";\r\nimport { Route, Redirect, withRouter } from \"react-router-dom\";\r\n\r\nfunction LoginProtectedRoutes({ component: Component, Auth, history, res }) {\r\n  return (\r\n    <Route\r\n      {...res}\r\n      render={(props) =>\r\n        Auth.state.isAuthenticated &&\r\n        Auth.state.userData.myStatus == \"admin\" ? (\r\n          <Redirect\r\n            to={{\r\n              pathname: `/`,\r\n              state: { from: props.location },\r\n            }}\r\n          />\r\n        ) : (\r\n          <Component />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default withRouter(LoginProtectedRoutes);\r\n","C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\ProtectedRoutes\\MainProtectedRoutes.js",["271"],"import React from \"react\";\r\nimport { Route, Redirect, withRouter } from \"react-router-dom\";\r\n\r\nfunction MainProtectedRoutes({\r\n  layout: Layout,\r\n  component: Component,\r\n  Auth,\r\n  history,\r\n  res,\r\n}) {\r\n  return (\r\n    <Route\r\n      {...res}\r\n      render={(props) =>\r\n        Auth.state.isAuthenticated &&\r\n        Auth.state.userData.myStatus == \"admin\" ? (\r\n          <Layout>\r\n            <Component />\r\n          </Layout>\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/login\",\r\n              state: { from: props.location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default withRouter(MainProtectedRoutes);\r\n","C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\views\\RouteListContent.js",[],"C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\views\\JeepneyRouteContent.js",[],"C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\Layout\\AdminLayout.js",[],"C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\views\\index.js",[],"C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\views\\Imaged.js",[],"C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\views\\Admin.js",["272","273","274"],"import React, { Suspense, useState } from \"react\";\r\nimport \"../App.css\";\r\n// import Dashboard from \"./Dashboard\"\r\n// import JeepneyDasboard from \"./JeepneyDasboard\"\r\n// import BarangayDashboard from \"./BarangayDashboard\"\r\n// import UploadDashboard from \"./UploadDashboard\"\r\n// import DriversTableListContent from \"./DriversTableListContent\"\r\n// import BarangaysTableListContent from \"./BarangaysTableListContent\"\r\n\r\n// import { Layout, Menu } from \"antd\"\r\n// import {\r\n//   UploadOutlined,\r\n//   UserOutlined,\r\n//   VideoCameraOutlined,\r\n// } from \"@ant-design/icons\"\r\n// import Imaged from \"./Imaged\"\r\n\r\n// const { Header, Content, Footer, Sider } = Layout\r\n\r\nfunction Admin() {\r\n  const [selected, setSelected] = useState(\"\");\r\n  const clickSideBar = (selectedMenuItem) => {\r\n    //console.log(selectedMenuItem);\r\n    setSelected(selectedMenuItem);\r\n  };\r\n\r\n  function getContent(selected) {\r\n    return <div></div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Suspense fallback={<h1>LOADING</h1>}>\r\n        <h1>this is admin</h1>\r\n      </Suspense>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Admin;\r\n","C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\Dashboard\\index.js",[],"C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\DriversTableList\\index.js",[],"C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\UsersTableList\\index.js",[],"C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\AssignJeepneyDriver\\index.js",[],"C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\JeepneysTableList\\index.js",[],"C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\BarangaysTableList\\index.js",[],"C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\FunFactsTableList\\index.js",[],"C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\JeepneyRoute\\index.js",[],"C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\UsersTableList\\UsersTableList.js",[],"C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\AssignJeepneyDriver\\AssignJeepneyDriver.js",["275","276","277","278","279","280","281","282","283","284","285","286"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Table,\r\n  Space,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Divider,\r\n  Card,\r\n  Typography,\r\n  Button,\r\n  Modal,\r\n  Tag,\r\n  Radio,\r\n} from \"antd\";\r\nimport { CloseOutlined, CheckOutlined } from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\nimport { triggerFocus } from \"antd/lib/input/Input\";\r\n\r\nfunction AssignJeepneyDriver() {\r\n  const [jeepneys, setJeepneys] = useState([]);\r\n  const [info, setInfo] = useState([]);\r\n  const [counter, setCounter] = useState(0);\r\n  const [jeepId, setJeepId] = useState([]);\r\n  const [assignedJeepId, setAssignedJeepId] = useState([]);\r\n  const [drivers, setDrivers] = useState([]);\r\n  const [jeepneyDrivers, setJeepneyDrivers] = useState([]);\r\n  const [selectedKey, setSelectedKey] = useState();\r\n  const [ifSelected, setIfSelected] = useState();\r\n  const { Search } = Input;\r\n  const { Text, Title } = Typography;\r\n\r\n  useEffect(() => {\r\n    axios.get(\"/api/v1/jeepneys/\").then((res) => {\r\n      let data = res.data;\r\n      data = data.map((d) => {\r\n        if (d.barangay === null) {\r\n          return { ...d, barangayName: \"None Assigned\" };\r\n        } else {\r\n          return { ...d, barangayName: d.barangay.barangayName };\r\n        }\r\n      });\r\n\r\n      setJeepneys(data);\r\n    });\r\n\r\n    axios\r\n      .get(\"/api/v1/drivers/\")\r\n      .then((res) => {\r\n        let data = res.data;\r\n\r\n        data = data.map((d) => {\r\n          return {\r\n            ...d,\r\n            jeepId: d.jeepneydrivers.map((jeepneyId) => {\r\n              return jeepneyId.jeepneyId;\r\n            }),\r\n          };\r\n        });\r\n        data = data.map((d) => {\r\n          return {\r\n            ...d,\r\n            plateNumber: d.jeepneydrivers.map((jeep) => {\r\n              //console.log(\"first\", jeep.jeepney.plateNumber);\r\n              return jeep.jeepney.plateNumber;\r\n            }),\r\n          };\r\n        });\r\n\r\n        setDrivers(data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }, []);\r\n\r\n  const plateColumns = [\r\n    {\r\n      title: \"Plate Number\",\r\n      dataIndex: \"plateNumber\",\r\n    },\r\n    {\r\n      title: \"Barangay\",\r\n      dataIndex: \"barangayName\",\r\n    },\r\n    {\r\n      title: \"Jeep Capacity\",\r\n      dataIndex: \"jeepCapacity\",\r\n    },\r\n    {\r\n      title: \"Status\",\r\n      render: (record, tag) => (\r\n        <>\r\n          {record.jeepneyDriver.length !== 0 ? (\r\n            <Tag color={\"volcano\"}>Unavailable</Tag>\r\n          ) : (\r\n            <Tag color={\"blue\"}>Available</Tag>\r\n          )}\r\n        </>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const driverColumns = [\r\n    {\r\n      title: \"Firstname\",\r\n      dataIndex: \"firstName\",\r\n    },\r\n\r\n    {\r\n      title: \"Middlename\",\r\n      dataIndex: \"middleName\",\r\n    },\r\n    { title: \"Lastname\", dataIndex: \"lastName\" },\r\n    {\r\n      title: \"Jeep\",\r\n      dataIndex: \"plateNumber\",\r\n    },\r\n    {\r\n      title: \"Actions\",\r\n      key: \"action\",\r\n      render: (text, record) => (\r\n        <Space size=\"middle\">\r\n          {record.jeepId.length === 0 ? (\r\n            <Button\r\n              onClick={() => assignDriver(jeepId, record.id)}\r\n              type=\"primary\"\r\n              className=\"modal-button-view\"\r\n            >\r\n              <span className=\"desktop-view\">\r\n                <CheckOutlined /> Assign Driver\r\n              </span>\r\n              <span className=\"mobile-view\">\r\n                <CheckOutlined />\r\n              </span>\r\n            </Button>\r\n          ) : (\r\n            <Button\r\n              onClick={() => removeDriver(record.id)}\r\n              type=\"danger\"\r\n              className=\"modal-button\"\r\n            >\r\n              <span className=\"desktop-view\">\r\n                <CloseOutlined /> Remove Driver\r\n              </span>\r\n              <span className=\"mobile-view\">\r\n                <CloseOutlined />\r\n              </span>\r\n            </Button>\r\n          )}\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n  const jeepData = jeepneys.map((jeepney, index) => {\r\n    return {\r\n      key: index,\r\n      id: jeepney.id,\r\n      plateNumber: jeepney.plateNumber,\r\n      jeepCapacity: jeepney.jeepCapacity,\r\n      jeepneyDriver: jeepney.jeepneydrivers,\r\n      barangayName: jeepney.barangayName,\r\n    };\r\n  });\r\n  const driverData = drivers.map((driver, index) => {\r\n    return {\r\n      key: index,\r\n      id: driver.id,\r\n      jeepId: driver.jeepId,\r\n      firstName: driver.firstName,\r\n      middleName: driver.middleName,\r\n      lastName: driver.lastName,\r\n      email: driver.email,\r\n      address: driver.address,\r\n      contactNumber: driver.contactNumber,\r\n      plateNumber: driver.plateNumber,\r\n    };\r\n  });\r\n\r\n  const assignDriver = (jeepId, id) => {\r\n    if (ifSelected === true) {\r\n      axios\r\n        .post(\"/api/v1/jeepneydrivers/add_jeepney_driver\", {\r\n          driverId: id,\r\n          jeepneyId: jeepId,\r\n        })\r\n        .then((res) => {\r\n          axios.get(\"/api/v1/drivers/\").then((res) => {\r\n            let data = res.data;\r\n            data = data.map((d) => {\r\n              return {\r\n                ...d,\r\n                jeepId: d.jeepneydrivers.map((jeepneyId) => {\r\n                  return jeepneyId.jeepneyId;\r\n                }),\r\n              };\r\n            });\r\n            data = data.map((d) => {\r\n              return {\r\n                ...d,\r\n                plateNumber: d.jeepneydrivers.map((jeep) => {\r\n                  //console.log(\"first\", jeep.jeepney.plateNumber);\r\n                  return jeep.jeepney.plateNumber;\r\n                }),\r\n              };\r\n            });\r\n            setIfSelected(false);\r\n            setDrivers(data);\r\n            Modal.success({\r\n              content: \"Successfully Assigned Driver\",\r\n              okButtonProps: {\r\n                style: {borderRadius: '50px'}\r\n              }, \r\n            });\r\n          });\r\n          axios.get(\"/api/v1/jeepneys/\").then((res) => {\r\n            let data = res.data;\r\n            data = data.map((d) => {\r\n              return { ...d, barangayName: d.barangay.barangayName };\r\n            });\r\n\r\n            setJeepneys(data);\r\n          });\r\n        })\r\n        .catch((error) => console.log(error));\r\n    } else {\r\n      Modal.error({\r\n        content: \"Select from available jeepneys\",\r\n        okButtonProps: {\r\n          style: {borderRadius: '50px'}\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const removeDriver = (id) => {\r\n    axios\r\n      .delete(\"/api/v1/jeepneydrivers/delete_jeepney_driver\", {\r\n        params: {\r\n          driverId: id,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        axios.get(\"/api/v1/drivers/\").then((res) => {\r\n          let data = res.data;\r\n          data = data.map((d) => {\r\n            return {\r\n              ...d,\r\n              jeepId: d.jeepneydrivers.map((jeepneyId) => {\r\n                return jeepneyId.jeepneyId;\r\n              }),\r\n            };\r\n          });\r\n          data = data.map((d) => {\r\n            return {\r\n              ...d,\r\n              plateNumber: d.jeepneydrivers.map((jeep) => {\r\n                //console.log(\"first\", jeep.jeepney.plateNumber);\r\n                return jeep.jeepney.plateNumber;\r\n              }),\r\n            };\r\n          });\r\n          setIfSelected(true);\r\n          setDrivers(data);\r\n          Modal.success({\r\n            content: \"Successfully Removed Driver from Assigned Jeepney\",\r\n            okButtonProps: {\r\n              style: {borderRadius: '50px'}\r\n            },\r\n          });\r\n        });\r\n        axios.get(\"/api/v1/jeepneys/\").then((res) => {\r\n          let data = res.data;\r\n          data = data.map((d) => {\r\n            return { ...d, barangayName: d.barangay.barangayName };\r\n          });\r\n\r\n          setJeepneys(data);\r\n        });\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const rowSelection = {\r\n    onChange: (selectedRowKeys, selectedRows) => {\r\n      // console.log(\r\n      //   `selectedRowKeys: ${selectedRowKeys}`,\r\n      //   \"selectedRows: \",\r\n      //   selectedRows\r\n      // );\r\n    },\r\n\r\n    hideSelectAll: true,\r\n\r\n    onSelect: (record, selected, selectedRows) => {\r\n      // console.log(\"selectedRows: \", record.id);\r\n      setSelectedKey(record.key);\r\n      setIfSelected(selected);\r\n      setJeepId(record.id);\r\n      setInfo(record);\r\n    },\r\n    getCheckboxProps: (record) => ({\r\n      disabled:\r\n        //(record.key !== selectedKey && ifSelected === true) ||\r\n        record.jeepneyDriver.length !== 0, // Column configuration not to be checked\r\n    }),\r\n  };\r\n  return (\r\n    <div>\r\n      <Row align=\"top\" gutter={32}>\r\n        <Divider>\r\n          <Title level={4}>Assign Drivers</Title>\r\n        </Divider>\r\n        <Col flex=\"auto\">\r\n          <Card bordered={false}>\r\n            <Title level={5}>Availabe Jeepneys</Title>\r\n            <Table\r\n              bordered={true}\r\n              rowSelection={{\r\n                type: \"radio\",\r\n                ...rowSelection,\r\n              }}\r\n              columns={plateColumns}\r\n              dataSource={jeepData}\r\n              scroll={{ x: 300, y: 500 }}\r\n            />\r\n          </Card>\r\n        </Col>\r\n        {/* <Col flex=\"auto\">\r\n          <Card>\r\n            <Title level={5}>Jeepney Info</Title>\r\n            <Divider></Divider>\r\n            <Form layout=\"vertical\">\r\n              <Text strong>ID:</Text>\r\n              <p>{info.id}</p>\r\n              <Text strong>Barangay:</Text>\r\n              <p>{info.barangayName}</p>\r\n              <Text strong>Plate Number:</Text>\r\n              <p>{info.plateNumber}</p>\r\n              <Text strong>Jeep Capacity:</Text>\r\n              <p>{info.jeepCapacity}</p>\r\n            </Form>\r\n          </Card>\r\n        </Col> */}\r\n      </Row>\r\n      <Title level={5}>Drivers</Title>\r\n      <Row gutter={16}>\r\n        <Col>\r\n          <Card bordered={false}>\r\n            <Table\r\n              bordered={true}\r\n              columns={driverColumns}\r\n              dataSource={driverData}\r\n              scroll={{ y: 500 }}\r\n            ></Table>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AssignJeepneyDriver;\r\n","C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\JeepneysTableList\\JeepneysTableList.js",[],"C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\FunFactsTableList\\FunFactsTableList.js",["287","288"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  Carousel,\r\n  Divider,\r\n  Row,\r\n  Col,\r\n  Typography,\r\n  Image,\r\n  Card,\r\n  Modal,\r\n  Space,\r\n} from \"antd\";\r\nimport axios from \"axios\";\r\nimport AddFunfactsModal from \"./AddFunfactsModal\";\r\nimport { RightOutlined, LeftOutlined, DeleteOutlined } from \"@ant-design/icons\";\r\n\r\nfunction FunFactsTableList() {\r\n  const { Title } = Typography;\r\n\r\n  const [images, setImages] = useState([]);\r\n  const sliderRef = useRef();\r\n\r\n  const handlePrev = () => sliderRef.current.prev();\r\n  const handleNext = () => sliderRef.current.next();\r\n\r\n  const contentStyle = {\r\n    maxWidth: \"350px\",\r\n  };\r\n\r\n  const imageStyle = {\r\n    height: \"400px\",\r\n    lineHeight: \"160px\",\r\n    width: \"500px\",\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/api/v1/funfacts/\")\r\n      .then((res) => {\r\n        let data = res.data;\r\n        setImages(data);\r\n        console.log(data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }, []);\r\n\r\n  const handleDeleteImage = (id, imagePath) => {\r\n    axios\r\n      .delete(\"/api/v1/funfacts/delete_funfacts\", {\r\n        params: {\r\n          fileName: imagePath,\r\n          fileId: id,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        let imagesCopy = [...images];\r\n        imagesCopy = imagesCopy.filter((image) => image.id !== id);\r\n        setImages(imagesCopy);\r\n        Modal.success({\r\n          content: \"Fun fact image has been removed\",\r\n          okButtonProps: {\r\n            style: {borderRadius: '50px'}\r\n          },\r\n        });\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const modalClosed = () => {\r\n    axios.get(\"/api/v1/funfacts/\").then((res) => {\r\n      //console.log(res);\r\n      let data = res.data;\r\n      setImages(data);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <Col span={20}>\r\n        </Col>\r\n        <Col span={4}>\r\n        <AddFunfactsModal afterClosing={modalClosed} />\r\n        </Col>\r\n      </Row>\r\n      <Divider>\r\n        <Title level={4}>Fun Facts</Title>\r\n      </Divider>\r\n      <Row>\r\n    \r\n        <Col span={24} align=\"center\">\r\n          <Carousel\r\n            ref={sliderRef}\r\n            style={contentStyle}\r\n            swipeToSlide={true}\r\n            dots={false}\r\n            draggable\r\n          >\r\n            {images.map((image, index) => (\r\n              <Row>\r\n                <Col key={index} span={24}>\r\n                    <Card\r\n                        style={{ width: 350 }}\r\n                        cover={\r\n                          <Image\r\n                            src={`/api/v1/funfacts/${\r\n                              image.lgImagePath ? image.lgImagePath : \"logo.png\"\r\n                            }`}\r\n                          />\r\n                        }\r\n                        actions={[\r\n                          <LeftOutlined onClick={handlePrev} />,\r\n                          <DeleteOutlined\r\n                          onClick={() => handleDeleteImage(image.id, image.lgImagePath)}\r\n                          danger\r\n                        />,\r\n                        <RightOutlined onClick={handleNext} />\r\n                        ]}\r\n                      >\r\n                    </Card>\r\n                  </Col>\r\n              </Row>\r\n            ))}\r\n          </Carousel>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FunFactsTableList;\r\n","C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\BarangaysTableList\\BarangaysTableList.js",[],"C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\Dashboard\\Dashboard.js",["289","290","291","292"],"import React, { useEffect, useState } from \"react\";\r\nimport { Divider, Row, Typography, Col, Card, Space } from \"antd\";\r\nimport {\r\n  SnippetsOutlined,\r\n  UserOutlined,\r\n  CarOutlined,\r\n  LogoutOutlined,\r\n  HomeOutlined,\r\n  FundViewOutlined,\r\n} from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\n\r\nfunction Dashboard() {\r\n  const { Title } = Typography;\r\n  const [barangays, setBarangays] = useState([]);\r\n  const [drivers, setDrivers] = useState([]);\r\n  const [jeepneys, setJeepneys] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.get(\"/api/v1/barangays/search_all_barangays\").then((res) => {\r\n      // console.log(res);\r\n\r\n      let data = res.data;\r\n      setBarangays(data);\r\n    });\r\n\r\n    axios.get(\"/api/v1/drivers/\").then((res) => {\r\n      // console.log(res);\r\n      let data = res.data;\r\n      setDrivers(data);\r\n    });\r\n\r\n    axios.get(\"/api/v1/jeepneys/\").then((res) => {\r\n      let data = res.data;\r\n      data = data.map((d) => {\r\n        if (d.barangay === null) {\r\n          return { ...d, barangayName: \"None Assigned\" };\r\n        } else {\r\n          return { ...d, barangayName: d.barangay.barangayName };\r\n        }\r\n      });\r\n\r\n      setJeepneys(data);\r\n    });\r\n\r\n    axios\r\n      .get(\"/api/v1/users/\")\r\n      .then((res) => {\r\n        // console.log(res);\r\n\r\n        let data = res.data;\r\n        setUsers(data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <Divider>\r\n        <Title level={4}>Dashboard</Title>\r\n      </Divider>\r\n      <Row>\r\n        <Col span={6}>\r\n          <Card\r\n            style={{ width: \"auto\" }}\r\n            cover={<SnippetsOutlined style={{ fontSize: \"80px\" }} />}\r\n          >\r\n            <Title level={5}>No. of Barangays: {barangays.length} </Title>\r\n          </Card>\r\n        </Col>\r\n        <Col span={6}>\r\n          <Card\r\n            style={{ width: \"auto\" }}\r\n            cover={<UserOutlined style={{ fontSize: \"80px\" }} />}\r\n          >\r\n            <Title level={5}>No. of Drivers: {drivers.length} </Title>\r\n          </Card>\r\n        </Col>\r\n        <Col span={6}>\r\n          <Card\r\n            style={{ width: \"auto\" }}\r\n            cover={<CarOutlined style={{ fontSize: \"80px\" }} />}\r\n          >\r\n            <Title level={5}>No. of Jeepneys: {jeepneys.length} </Title>\r\n          </Card>\r\n        </Col>\r\n        <Col span={6}>\r\n          <Card\r\n            style={{ width: \"auto\" }}\r\n            cover={<UserOutlined style={{ fontSize: \"80px\" }} />}\r\n          >\r\n            <Title level={5}>No. of Users: {users.length} </Title>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\DriversTableList\\DriversTableList.js",[],"C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\JeepneyRoute\\RouteList.js",["293","294","295","296","297"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Table,\r\n  Space,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Divider,\r\n  Typography,\r\n  Button,\r\n  Modal,\r\n} from \"antd\";\r\nimport {\r\n  EditOutlined,\r\n  DeleteOutlined,\r\n  ArrowLeftOutlined,\r\n  PlusOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nimport AddRoute from \"./AddRoute\";\r\nimport EditRoute from \"./EditRoute\";\r\nimport axios from \"axios\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nfunction RouteList() {\r\n  const { Search } = Input;\r\n  const { Title } = Typography;\r\n  let dataHistory = useHistory();\r\n  const [routeList, setRouteList] = useState([]);\r\n  const [barangayData, setBarangayData] = useState([]);\r\n  let [value, setValue] = useState();\r\n  const [dataFromModal, setDataFromModal] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    value = dataHistory.location.pathname.split(\"/jeepney-routes/\");\r\n    axios\r\n      .post(\"/api/v1/barangays/search_barangay_id\", { value: value[1] })\r\n      .then((res) => {\r\n        // console.log(res);\r\n        let data = res.data;\r\n        setBarangayData(data);\r\n        //console.log(data);\r\n      });\r\n    axios\r\n      .post(\"/api/v1/jeeproutes/get_route\", { value: value[1] })\r\n      .then((res) => {\r\n        // console.log(res);\r\n        let data = res.data;\r\n        setRouteList(data);\r\n        // console.log(data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }, []);\r\n\r\n  const deleteRoute = (routeId) => {\r\n    console.log(\"delete\", routeId);\r\n    axios\r\n      .delete(\"/api/v1/jeeproutes/delete_route\", {\r\n        params: {\r\n          id: routeId,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        let routeListCopy = [...routeList];\r\n        routeListCopy = routeListCopy.filter((route) => route.id !== routeId);\r\n        setRouteList(routeListCopy);\r\n        Modal.success({\r\n          content: \"Route has been removed\",\r\n          okButtonProps: {\r\n            style: { borderRadius: \"50px\" },\r\n          },\r\n        });\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const modalClosed = () => {\r\n    console.log(\"Passed data from modal\", dataFromModal);\r\n    axios.get(\"/api/v1/jeeproutes/\").then((res) => {\r\n      //console.log(res);\r\n\r\n      let data = res.data;\r\n      setRouteList(data);\r\n    });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Point Number\",\r\n      dataIndex: \"pointNumber\",\r\n      key: \"pointnumber\",\r\n    },\r\n    {\r\n      title: \"Description\",\r\n      dataIndex: \"routeDescription\",\r\n      key: \"routedescription\",\r\n    },\r\n    {\r\n      title: \"Actions\",\r\n      key: \"action\",\r\n\r\n      render: (record) => (\r\n        <Space size=\"middle\">\r\n          <EditRoute\r\n                  info={value}\r\n                  passedData={setDataFromModal}\r\n                  afterClosing={modalClosed}\r\n                />\r\n          <Button\r\n            type=\"danger\"\r\n            className=\"modal-button\"\r\n            onClick={() => {\r\n              deleteRoute(record.id);\r\n            }}\r\n          >\r\n            <span className=\"desktop-view\">\r\n              <DeleteOutlined/> Delete\r\n            </span>\r\n            <span className=\"mobile-view\">\r\n            <DeleteOutlined />\r\n            </span>\r\n          </Button>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <Row justify=\"space-between\">\r\n        <Col span={4}>\r\n          <Space direction=\"vertical\">\r\n            <Link to={\"/jeepney-routes\"}>\r\n              <Button type=\"primary\" className=\"modal-button-view\">\r\n                <span className=\"desktop-view\">\r\n                  <ArrowLeftOutlined /> Back to List\r\n                </span>\r\n                <span className=\"mobile-view\">\r\n                  <ArrowLeftOutlined />\r\n                </span>\r\n              </Button>\r\n            </Link>\r\n          </Space>\r\n        </Col>\r\n        <Col span={4}>\r\n          <AddRoute\r\n            info={value}\r\n            passedData={setDataFromModal}\r\n            afterClosing={modalClosed}\r\n          />\r\n\r\n        </Col>\r\n      </Row>\r\n      <Divider>\r\n        <Title level={4}>\r\n          {/* Barangay{\" \"} */}\r\n          {barangayData[0] == null ? \" \" : barangayData[0].barangayName} Route\r\n          Points\r\n        </Title>\r\n      </Divider>\r\n\r\n      <Row>\r\n        <Table\r\n          dataSource={routeList}\r\n          columns={columns}\r\n          scroll={{ x: 500 }}\r\n          sticky\r\n        ></Table>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RouteList;\r\n","C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\JeepneyRoute\\JeepneyRoute.js",["298"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Table,\r\n  Space,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Divider,\r\n  Typography,\r\n  Button,\r\n} from \"antd\";\r\nimport { UnorderedListOutlined } from \"@ant-design/icons\";\r\n\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction JeepneyRoute() {\r\n  const { Search } = Input;\r\n  const { Title } = Typography;\r\n  const [barangays, setBarangays] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/api/v1/barangays/\")\r\n      .then((res) => {\r\n        // console.log(res);\r\n        let data = res.data;\r\n        setBarangays(data);\r\n        // console.log(data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }, []);\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Barangay\",\r\n      dataIndex: \"barangayName\",\r\n      key: \"barangayname\",\r\n    },\r\n    {\r\n      title: \"Actions\",\r\n      key: \"action\",\r\n\r\n      render: (record) => (\r\n        <Space size=\"middle\">\r\n          <Link to={`/jeepney-routes/${record.id}`}>\r\n            <Button type=\"primary\" className=\"modal-button-view\">\r\n              <span className=\"desktop-view\">\r\n                <UnorderedListOutlined /> View Route\r\n              </span>\r\n              <span className=\"mobile-view\">\r\n                <UnorderedListOutlined />\r\n              </span>\r\n            </Button>\r\n          </Link>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const onSearch = (value) => {\r\n    // axios\r\n    //   .post(\"/api/v1/drivers/search_drivers\", { value: value })\r\n    //   .then((_res) => {\r\n    //     console.log(_res);\r\n    //     let data = _res.data;\r\n    //     setDrivers(data);\r\n    //     //console.log(\"success\");\r\n    //   });\r\n    // //console.log(value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <Space direction=\"vertical\">\r\n          <Search\r\n            placeholder=\"Search Barangay\"\r\n            onSearch={onSearch}\r\n            allowClear={true}\r\n            enterButton\r\n          />\r\n        </Space>\r\n      </Row>\r\n      <Divider>\r\n        <Title level={4}>Barangay Route List</Title>\r\n      </Divider>\r\n\r\n      <Row>\r\n        <Table\r\n          dataSource={barangays}\r\n          columns={columns}\r\n          scroll={{ x: 500 }}\r\n          sticky\r\n        ></Table>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default JeepneyRoute;\r\n","C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\JeepneysTableList\\AddJeepneyImageModal.js",["299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","320"],"import React, { useState } from \"react\";\r\nimport {\r\n  Modal,\r\n  Upload,\r\n  Button,\r\n  Space,\r\n  Row,\r\n  Col,\r\n  List,\r\n  Form,\r\n  Radio,\r\n  Input,\r\n  message,\r\n} from \"antd\";\r\nimport { UploadOutlined } from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\nimport { Content } from \"antd/lib/layout/layout\";\r\n\r\nfunction AddJeepneyImageModal(props) {\r\n  const [file, setFile] = useState({});\r\n  const [imageStatus, setImageStatus] = useState(false);\r\n  const [filename, setFilename] = useState(\"Choose file\");\r\n  const [uploadedImagePath, setUploadedImagePath] = useState(\"\");\r\n  const [uploadImageStatus, setUploadImageStatus] = useState(\"none\");\r\n  const [fetchImage, setFetchImage] = useState(\"\");\r\n  const [images, setImages] = useState([]);\r\n  const [info, setInfo] = useState([]);\r\n  const [ifCanceled, setIfCanceled] = useState(false);\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [form] = Form.useForm();\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n\r\n  const showModal = () => {\r\n    form.setFieldsValue({\r\n      imageOwnerId: props.info.id,\r\n      imageReferenceId: 3,\r\n    });\r\n    setUploadedImagePath();\r\n    setUploadImageStatus(\"removed\");\r\n    setFilename(\"Choose file\");\r\n    setIsModalVisible(true);\r\n    console.log(props.info);\r\n  };\r\n\r\n  const checking = (file) => {\r\n    setFilename(file);\r\n  };\r\n  const viewFile = () => {\r\n    {\r\n      (() => {\r\n        switch (uploadImageStatus) {\r\n          case \"done\":\r\n            return (\r\n              setUploadedImagePath(filename.file.response.filePath),\r\n              console.log(\"done\")\r\n            );\r\n\r\n          case \"removed\":\r\n            return console.log(\"removed\");\r\n\r\n          case \"\":\r\n            return console.log(\"none\");\r\n        }\r\n      })();\r\n    }\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIfCanceled(true);\r\n\r\n    setTimeout(() => {\r\n      setIsModalVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 500);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n  };\r\n\r\n  const onFinish = (values) => {\r\n    if (uploadImageStatus == \"done\") {\r\n      axios\r\n        .post(\"/api/v1/images/save_image\", {\r\n          imageOwnerId: props.info.id,\r\n          imageReferenceId: 3,\r\n          imagePath: uploadedImagePath,\r\n        })\r\n        .then((res) => {\r\n          message.success(\"Successfully Saved\");\r\n          setTimeout(() => {\r\n            setIsModalVisible(false);\r\n            setConfirmLoading(false);\r\n          }, 500);\r\n          setUploadedImagePath(\"\");\r\n        })\r\n        .catch((error) => console.log(error));\r\n    } else {\r\n      message.error(\"Image Saving Error\");\r\n      // console.log(\"Uploaded image is removed\");\r\n    }\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"fail\");\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  const removeImage = (val) => {\r\n    //console.log(\"Removed image\", val.response.filePath);\r\n    axios\r\n      .delete(\"/api/v1/images/delete_folder_image\", {\r\n        params: {\r\n          fileName: val.response.imagePath,\r\n          fileId: val.response.id,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        setUploadImageStatus(\"removed\");\r\n        // console.log(res.data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n    setUploadedImagePath();\r\n    message.error(`File removed Successfully.`);\r\n  };\r\n\r\n  const uploadFile = {\r\n    name: \"file\",\r\n    action: \"/api/v1/images/add_image\",\r\n    headers: {\r\n      authorization: \"authorization-text\",\r\n    },\r\n    data: { imageOwnerId: props.info.id, imageReferenceId: 3 },\r\n    onChange(info) {\r\n      if (info.file.status !== \"uploading\") {\r\n        console.log(\"uploading\", info.file, info.fileList);\r\n      }\r\n      if (info.file.status === \"done\") {\r\n        message.success(`${info.file.name} file uploaded Successfully.`);\r\n      } else if (info.file.status === \"error\") {\r\n        message.error(`${info.file.name} file upload Failed.`);\r\n      }\r\n      setUploadImageStatus(info.file.status);\r\n      setFilename(info);\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button type=\"primary\" className=\"modal-button-upload\" onClick={showModal}>\r\n        <span className=\"desktop-view\"><UploadOutlined /> Upload</span>\r\n        <span className=\"mobile-view\"><UploadOutlined /></span>\r\n      </Button>\r\n      <Modal\r\n        title=\"Jeepney Image Upload\"\r\n        confirmLoading={confirmLoading}\r\n        visible={isModalVisible}\r\n        onOk={onFinish}\r\n        onCancel={handleCancel}\r\n        afterClose={handleClose}\r\n        destroyOnClose={true}\r\n        footer={[\r\n          <Button key=\"back\" className=\"modal-button\"  type=\"danger\" onClick={handleCancel}>\r\n            Close\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <List itemLayout=\"vertical\">\r\n          <List.Item>\r\n          <h4>Plate Number: </h4>\r\n          {props.info.plateNumber}\r\n          </List.Item>\r\n          <List.Item>\r\n          <h4>Image Reference Name: </h4>\r\n          Jeepney\r\n          </List.Item>\r\n        </List>\r\n        <Row>\r\n          <Space style={{ width: \"100%\" }} size=\"large\">\r\n            <Upload\r\n              {...uploadFile}\r\n              onRemove={removeImage}\r\n              listType=\"picture-card\"\r\n              showUploadList={{showPreviewIcon:false}}\r\n              maxCount={5}\r\n            >\r\n                <Space>\r\n                  <UploadOutlined/>\r\n               Upload\r\n               </Space>\r\n            </Upload>\r\n          </Space>\r\n        </Row>\r\n        {/* <Row>\r\n          <Form\r\n            name=\"basic\"\r\n            form={form}\r\n            layout={\"horizontal\"}\r\n            initialValues={{ remember: true }}\r\n            onFinish={onFinish}\r\n            onFinishFailed={onFinishFailed}\r\n          >\r\n            <Form.Item label=\"Image Owner ID: \" name=\"imageOwnerId\">\r\n               {props.info.id}\r\n            </Form.Item>\r\n            <Form.Item label=\"Image Reference: \" name=\"imageReferenceId\">\r\n               Barangay\r\n            </Form.Item>\r\n          </Form>\r\n        </Row> */}\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddJeepneyImageModal;\r\n","C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\UsersTableList\\UsersInfoModal.js",["321","322","323","324","325","326"],"import React, { useState } from \"react\";\r\nimport { Modal, Button, Image, Card, Col, Row } from \"antd\";\r\nimport { UnorderedListOutlined } from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\n\r\nfunction UsersInfoModal(props) {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [modalValue, setModalValue] = useState(\"\");\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n  const [ifCanceled, setIfCanceled] = useState(false);\r\n  const [drivers, setDrivers] = useState([]);\r\n  const [images, setImages] = useState([]);\r\n  const [imagePath, setImagePath] = useState([]);\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n    axios\r\n      .post(\"/api/v1/images/search_images\", {\r\n        imageOwnerId: props.info.id,\r\n        imageReferenceId: 4,\r\n      })\r\n      .then((res) => {\r\n        let data = res.data;\r\n        setImages(data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const handleOk = () => {\r\n    props.passedData(props.info);\r\n\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n    setTimeout(() => {\r\n      setIsModalVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n    setTimeout(() => {\r\n      setIsModalVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n    Modal.success({\r\n      content: \"Still in development\",\r\n      okButtonProps: {\r\n        style: {borderRadius: '50px'}\r\n      },\r\n    });\r\n\r\n    //console.log(id);\r\n    // axios\r\n    //   .delete(\"/api/v1/users/delete_user\", {\r\n    //     params: {\r\n    //       id,\r\n    //     },\r\n    //   })\r\n    //   .then((res) => {\r\n\r\n    //     //console.log(driversCopy);\r\n\r\n    //     Modal.success({\r\n    //       content: \"User has been Removed\",\r\n    //     });\r\n    //   })\r\n    //   .catch((error) => console.log(error));\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIfCanceled(true);\r\n    setIsModalVisible(false);\r\n  };\r\n  const handleClose = () => {\r\n    if (ifCanceled) {\r\n    } else {\r\n      props.afterClosing();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button type=\"primary\" className=\"modal-button-view\" onClick={showModal}>\r\n        <span className=\"desktop-view\">\r\n          <UnorderedListOutlined /> View\r\n        </span>\r\n        <span className=\"mobile-view\">\r\n          <UnorderedListOutlined />\r\n        </span>\r\n      </Button>\r\n      <Modal\r\n        title=\"User Information\"\r\n        visible={isModalVisible}\r\n        confirmLoading={confirmLoading}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        afterClose={handleClose}\r\n        footer={[\r\n          <Button\r\n            className=\"modal-button\"\r\n            loading={confirmLoading}\r\n            onClick={() => handleDelete(props.info.id)}\r\n            danger\r\n          >\r\n            Remove\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <p>\r\n          <h4>ID:</h4>\r\n          {props.info.id}\r\n        </p>\r\n        <p>\r\n          <h4>Name:</h4>\r\n          {props.info.firstName} {props.info.lastName}\r\n        </p>\r\n        <p>\r\n          <h4>Email Address: </h4>\r\n          {props.info.email}\r\n        </p>\r\n        <h4>User Images: </h4>\r\n        <Card className=\"shadow-sm\">\r\n          <Row>\r\n            {images.map((image, index) => (\r\n              <Col key={index} md={{ span: 6 }}>\r\n                <br></br>\r\n                <Image\r\n                  height={100}\r\n                  width={100}\r\n                  src={`/api/v1/images/${\r\n                    image.imagePath ? image.imagePath : \"logo.png\"\r\n                  }`}\r\n                />\r\n                <Row>\r\n                  <br></br>\r\n                  {/* <Button onClick={() => handleDeleteImage(image.id)} danger>\r\n                    Delete\r\n                  </Button> */}\r\n                </Row>\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n        </Card>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UsersInfoModal;\r\n","C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\JeepneysTableList\\EditJeepneyModal.js",["327","328"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, Button, Form, Input, Select } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { EditOutlined  } from \"@ant-design/icons\";\r\n\r\nfunction EditJeepneyModal(props) {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [form] = Form.useForm();\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n  const [ifCanceled, setIfCanceled] = useState(false);\r\n  const [ifChanged, setIfChanged] = useState();\r\n  const [barangays, setBarangays] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/api/v1/barangays/search_all_barangays\")\r\n      .then((res) => {\r\n\r\n        let data = res.data;\r\n        setBarangays(data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }, []);\r\n  const { Option } = Select;\r\n\r\n  const handleChange = (value) => {\r\n    console.log(`selected ${value}`);\r\n  };\r\n\r\n\r\n  const showModal = () => {\r\n    form.setFieldsValue({\r\n      id: props.info.id,\r\n      barangayId: props.info.barangayId,\r\n      plateNumber: props.info.plateNumber,\r\n      jeepCapacity: props.info.jeepCapacity,\r\n    });\r\n    setIsModalVisible(true);\r\n    setIfChanged(false);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIfCanceled(true);\r\n    setIsModalVisible(false);\r\n  };\r\n  const handleClose = () => {\r\n    if (ifCanceled) {\r\n    } else {\r\n      props.afterClosing();\r\n    }\r\n  };\r\n\r\n  const onFinish = (values) => {\r\n    //console.log(ifChanged);\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n    props.passedData(props.info);\r\n     axios\r\n      .post(\"/api/v1/jeepneys/update_jeepney\", {\r\n        id: props.info.id,\r\n        barangayId: values.barangayId,\r\n        plateNumber: values.plateNumber,\r\n        jeepCapacity: values.jeepCapacity,\r\n      })\r\n      .then((res) => {\r\n        setTimeout(() => {\r\n          setIsModalVisible(false);\r\n          setConfirmLoading(false);\r\n          \r\n        }, 2000);\r\n        {\r\n          ifChanged\r\n            ? Modal.success({\r\n                content: \"Successfully Updated Jeepney\",\r\n                okButtonProps: {\r\n                  style: {borderRadius: '50px'}\r\n                },\r\n              })\r\n            : Modal.success({\r\n                content: \"Jeepney Info is up to date\",\r\n                okButtonProps: {\r\n                  style: {borderRadius: '50px'}\r\n                },\r\n              });\r\n        }\r\n      })\r\n      .catch((error) => console.log(error));\r\n\r\n    //console.log(ifChanged);\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    Modal.error({\r\n      content: \"Failure to Update Jeepney Info\",\r\n      okButtonProps: {\r\n        style: {borderRadius: '50px'}\r\n      },\r\n    });\r\n    setTimeout(() => {\r\n      setIsModalVisible(true);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n    // console.log(\"Failed:\", errorInfo);\r\n  };\r\n  const onValuesChange = (changedValues, allValues) => {\r\n  console.log(\"Changed\", allValues, changedValues);\r\n    setIfChanged(true);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button type=\"primary\" className=\"modal-button-edit\" onClick={showModal}>\r\n        <span className=\"desktop-view\"><EditOutlined /> Edit</span>\r\n        <span className=\"mobile-view\"><EditOutlined /></span>\r\n      </Button>\r\n      <Modal\r\n        title=\"Update Jeepney Info\"\r\n        confirmLoading={confirmLoading}\r\n        visible={isModalVisible}\r\n        onOk={onFinish}\r\n        onCancel={handleCancel}\r\n        afterClose={handleClose}\r\n        destroyOnClose={true}\r\n        footer={[\r\n          <Button key=\"back\" className=\"modal-button\" onClick={handleCancel}>\r\n            Cancel\r\n          </Button>,\r\n          <Button form=\"myForm\" className=\"modal-button\" htmlType=\"submit\" type=\"primary\">\r\n            Update\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <Form\r\n          layout=\"vertical\"\r\n          name=\"basic\"\r\n          form={form}\r\n          initialValues={{ remember: true }}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n          onValuesChange={onValuesChange}\r\n          id=\"myForm\"\r\n        >\r\n          {/* <Form.Item label=\"Barangay ID:\" name=\"barangayId\">\r\n            <Input disabled={true} bordered={false} />\r\n          </Form.Item> */}\r\n          <Form.Item\r\n            label=\"Barangay:\"\r\n            name=\"barangayId\"\r\n            rules={[\r\n              { required: true, message: \"Please input the Barangay's ID!\" },\r\n            ]}\r\n          >\r\n            <Select\r\n              placeholder=\"Select Barangay\"\r\n              style={{ width: '100%' }}\r\n              onChange={handleChange}\r\n            >\r\n              {barangays.map((barangay, index) => (\r\n                <Option value={barangay.id}>{barangay.barangayName}</Option>\r\n              ))}\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Plate Number:\"\r\n            name=\"plateNumber\"\r\n            rules={[\r\n              { required: true, message: \"Please input the Plate Number!\" },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Jeep Capacity:\"\r\n            name=\"jeepCapacity\"\r\n            rules={[\r\n              { required: true, message: \"Please input Jeep Capacity!\" },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditJeepneyModal;\r\n","C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\JeepneysTableList\\AddJeepneyModal.js",["329","330","331","332","333","334","335"],"import React, { useState, useEffect } from \"react\";\r\nimport { Form, Input, Modal, Button, Upload, Select } from \"antd\";\r\nimport { UploadOutlined, PlusOutlined } from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\n\r\nfunction AddJeepneyModal(props) {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n  const [ifCanceled, setIfCanceled] = useState(false);\r\n  const [jeepneys, setJeepneys] = useState([]);\r\n  const [file, setFile] = useState({});\r\n  const [filename, setFilename] = useState(\"Choose file\");\r\n  const [uploadedImagePath, setUploadedImagePath] = useState();\r\n  const [barangays, setBarangays] = useState([]);\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n    console.log(props.info);\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/api/v1/barangays/search_all_barangays\")\r\n      .then((res) => {\r\n        let data = res.data;\r\n        setBarangays(data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }, []);\r\n  const { Option } = Select;\r\n\r\n  const checking = (file) => {\r\n    setFilename(file);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIfCanceled(true);\r\n    setIsModalVisible(false);\r\n  };\r\n  const handleClose = () => {\r\n    if (ifCanceled) {\r\n    } else {\r\n      props.afterClosing();\r\n    }\r\n  };\r\n\r\n  const onFinish = (values) => {\r\n    console.log(values);\r\n    props.passedData(props.info);\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n    setTimeout(() => {\r\n      setIsModalVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n    // setUploadedImagePath(filename.file.response.filePath);\r\n    axios\r\n      .post(\"/api/v1/jeepneys/add_jeep\", values)\r\n      .then((res) => {\r\n        let jeepneysCopy = [...jeepneys];\r\n        jeepneysCopy = [...jeepneysCopy, res.data];\r\n        console.log(jeepneysCopy);\r\n        setJeepneys(jeepneysCopy);\r\n        // console.log(filename.file.response);\r\n        Modal.success({\r\n          content: \"Successfully Added New Jeepney\",\r\n          okButtonProps: {\r\n            style: {borderRadius: '50px'}\r\n          },\r\n        });\r\n\r\n        axios.post(\"/api/v1/images/save_image\", {\r\n          imageOwnerId: res.data.id,\r\n          imageReferenceId: 3,\r\n          imagePath: uploadedImagePath,\r\n        });\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    Modal.error({\r\n      content: \"Failure to Add New Jeepney\",\r\n      okButtonProps: {\r\n        style: {borderRadius: '50px'}\r\n      },\r\n    });\r\n    setTimeout(() => {\r\n      setIsModalVisible(true);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n    console.log(\"fail\");\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  const handleChange = (value) => {\r\n    console.log(`selected ${value}`);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button type=\"primary\" className=\"modal-button-add\" onClick={showModal}>\r\n        <span className=\"desktop-view\">\r\n          <PlusOutlined /> Add Jeepney\r\n        </span>\r\n        <span className=\"mobile-view\">\r\n          <PlusOutlined />\r\n        </span>\r\n      </Button>\r\n\r\n      <Modal\r\n        title=\"Add Jeepney:\"\r\n        visible={isModalVisible}\r\n        confirmLoading={confirmLoading}\r\n        onOk={onFinish}\r\n        onCancel={handleCancel}\r\n        afterClose={handleClose}\r\n        destroyOnClose={true}\r\n        footer={[\r\n          <Button key=\"back\" className=\"modal-button\" onClick={handleCancel}>\r\n            Cancel\r\n          </Button>,\r\n          <Button\r\n            form=\"myForm\"\r\n            className=\"modal-button\"\r\n            key=\"submit\"\r\n            htmlType=\"submit\"\r\n            type=\"primary\"\r\n            loading={confirmLoading}\r\n            onClick={onFinish}\r\n          >\r\n            Add\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <Form\r\n          layout=\"vertical\"\r\n          name=\"basic\"\r\n          initialValues={{ remember: true }}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n          id=\"myForm\"\r\n        >\r\n          <Form.Item\r\n            label=\"Barangay:\"\r\n            name=\"barangayId\"\r\n            rules={[\r\n              { required: true, message: \"Please input the Barangay's ID!\" },\r\n            ]}\r\n          >\r\n            <Select\r\n              placeholder=\"Select Barangay\"\r\n              style={{ width: \"100%\" }}\r\n              onChange={handleChange}\r\n            >\r\n              {barangays.map((barangay, index) => (\r\n                <Option value={barangay.id}>{barangay.barangayName}</Option>\r\n              ))}\r\n            </Select>\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Plate Number:\"\r\n            name=\"plateNumber\"\r\n            rules={[\r\n              { required: true, message: \"Please input the Plate Number!\" },\r\n            ]}\r\n          >\r\n            <Input placeholder=\"Plate Number\"/>\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Jeep Capacity:\"\r\n            name=\"jeepCapacity\"\r\n            rules={[\r\n              { required: true, message: \"Please input the Jeep Capacity!\" },\r\n            ]}\r\n          >\r\n            <Input placeholder=\"Jeep Capacity\"/>\r\n          </Form.Item>\r\n          {/* <Upload\r\n            action=\"/api/v1/images/add_image\"\r\n            listType=\"picture\"\r\n            maxCount={1}\r\n            file={file}\r\n            onChange={checking}\r\n          >\r\n            <Button icon={<UploadOutlined />}>Upload Image (Max: 1)</Button>\r\n          </Upload> */}\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddJeepneyModal;\r\n","C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\JeepneysTableList\\JeepneysInfoModal.js",["336","337","338","339","340","341"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, Button, Card, Image, Space, Col, Row, Typography } from \"antd\";\r\nimport { UnorderedListOutlined } from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\n\r\nfunction JeepneysInfoModal(props) {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n  const [ifCanceled, setIfCanceled] = useState(false);\r\n  const [jeepneys, setJeepneys] = useState([]);\r\n  const [images, setImages] = useState([]);\r\n  const [imagePath, setImagePath] = useState([]);\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n    axios\r\n      .post(\"/api/v1/images/search_images\", {\r\n        imageOwnerId: props.info.id,\r\n        imageReferenceId: 3,\r\n      })\r\n      .then((res) => {\r\n        let data = res.data;\r\n        setImages(data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const handleOk = () => {\r\n    props.passedData(props.info);\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n    setTimeout(() => {\r\n      setIsModalVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n    setTimeout(() => {\r\n      setIsModalVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n    Modal.success({\r\n      content: \"Still in development\",\r\n      okButtonProps: {\r\n        style: {borderRadius: '50px'}\r\n      },\r\n    });\r\n    // axios\r\n    //   .delete(\"/api/v1/images/delete_image\", {\r\n    //     params: {\r\n    //       id,\r\n    //       referenceId: 3,\r\n    //     },\r\n    //   })\r\n    //   .then((res) => {\r\n    //     let imagesCopy = [...images];\r\n    //     imagesCopy = imagesCopy.filter(\r\n    //       (imagesCopy) =>\r\n    //         imagesCopy.imageOwnerId !== id && imagesCopy.imageReferenceId === 3\r\n    //     );\r\n    //     setImages(imagesCopy);\r\n    //     console.log(imagesCopy);\r\n    //   })\r\n    //   .catch((error) => console.log(error));\r\n\r\n    // axios\r\n    //   .delete(\"/api/v1/jeepneys/delete_jeep\", {\r\n    //     params: {\r\n    //       id,\r\n    //     },\r\n    //   })\r\n    //   .then((res) => {\r\n    //     let jeepneysCopy = [...jeepneys];\r\n\r\n    //     jeepneysCopy = jeepneysCopy.filter((jeepney) => jeepney.id !== id);\r\n    //     setJeepneys(jeepneysCopy);\r\n\r\n    //     console.log(jeepneysCopy);\r\n    //     Modal.success({\r\n    //       content: \"Jeepney has been Removed\",\r\n    //     });\r\n    //   })\r\n    //   .catch((error) => console.log(error));\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIfCanceled(true);\r\n    setIsModalVisible(false);\r\n  };\r\n  const handleClose = () => {\r\n    if (ifCanceled) {\r\n    } else {\r\n      props.afterClosing();\r\n    }\r\n  };\r\n\r\n  const handleDeleteImage = (id, imagePath) => {\r\n    axios\r\n      .delete(\"/api/v1/images/delete_folder_image\", {\r\n        params: {\r\n          fileName: imagePath,\r\n          fileId: id,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        let imagesCopy = [...images];\r\n        imagesCopy = imagesCopy.filter((image) => image.id !== id);\r\n        setImages(imagesCopy);\r\n        Modal.success({\r\n          content: \"Jeepney image has been removed\",\r\n          okButtonProps: {\r\n            style: {borderRadius: '50px'}\r\n          },\r\n        });\r\n      })\r\n      .catch((error) => console.log(error));\r\n\r\n    // axios\r\n    //   .delete(\"/api/v1/images/delete_image\", {\r\n    //     params: {\r\n    //       id,\r\n    //       referenceId: 1,\r\n    //     },\r\n    //   })\r\n    //   .then((res) => {\r\n    //\r\n    //   })\r\n    //   .catch((error) => console.log(error));\r\n  };\r\n  return (\r\n    <div>\r\n      <Space>\r\n        <Button\r\n          type=\"primary\"\r\n          className=\"modal-button-view\"\r\n          onClick={showModal}\r\n        >\r\n          <span className=\"desktop-view\">\r\n            <UnorderedListOutlined /> View\r\n          </span>\r\n          <span className=\"mobile-view\">\r\n            <UnorderedListOutlined />\r\n          </span>\r\n        </Button>\r\n\r\n        {/* <Button type=\"default\" onClick={showModal}>\r\n        Assign Driver\r\n      </Button> */}\r\n      </Space>\r\n      <Modal\r\n        title=\"Jeepney Information\"\r\n        visible={isModalVisible}\r\n        confirmLoading={confirmLoading}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        afterClose={handleClose}\r\n        footer={[\r\n          <Button\r\n            className=\"modal-button\"\r\n            loading={confirmLoading}\r\n            onClick={() => handleDelete(props.info.id)}\r\n            danger\r\n          >\r\n            Remove\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <p>\r\n          <h4>Barangay Id:</h4>\r\n          {props.info.barangayId}\r\n        </p>\r\n        <p>\r\n          <h4>Plate Number:</h4>\r\n          {props.info.plateNumber}\r\n        </p>\r\n        <p>\r\n          <h4>Jeep Capacity:</h4>\r\n          {props.info.jeepCapacity}\r\n        </p>\r\n        <h4>Uploaded Images: </h4>\r\n        <Card className=\"shadow-sm\">\r\n          <Row>\r\n            {images.map((image, index) => (\r\n              <Col key={index} md={{ span: 6 }}>\r\n                <br></br>\r\n                <Image\r\n                  height={100}\r\n                  width={100}\r\n                  src={`/api/v1/images/${\r\n                    image.imagePath ? image.imagePath : \"logo.png\"\r\n                  }`}\r\n                />\r\n                <Row>\r\n                  <br></br>\r\n                  <Button\r\n                    onClick={() => handleDeleteImage(image.id, image.imagePath)}\r\n                    danger\r\n                  >\r\n                    Delete\r\n                  </Button>\r\n                </Row>\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n        </Card>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default JeepneysInfoModal;\r\n","C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\DriversTableList\\EditDriverModal.js",["342","343","344"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, Button, Form, Input } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { EditOutlined  } from \"@ant-design/icons\";\r\n\r\nfunction EditDriverModal(props) {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [form] = Form.useForm();\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n  const [ifCanceled, setIfCanceled] = useState(false);\r\n  const [ifChanged, setIfChanged] = useState();\r\n\r\n  const showModal = () => {\r\n    form.setFieldsValue({\r\n      id: props.info.id,\r\n      firstName: props.info.firstName,\r\n      middleName: props.info.middleName,\r\n      lastName: props.info.lastName,\r\n      address: props.info.address,\r\n      contactNumber: props.info.contactNumber,\r\n      email: props.info.email,\r\n    });\r\n    setIsModalVisible(true);\r\n    setIfChanged(false);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIfCanceled(true);\r\n    setIsModalVisible(false);\r\n  };\r\n  const handleClose = () => {\r\n    if (ifCanceled) {\r\n    } else {\r\n      props.afterClosing();\r\n    }\r\n  };\r\n\r\n  const onFinish = (values) => {\r\n    //console.log(ifChanged);\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n    props.passedData(props.info);\r\n\r\n    axios\r\n      .post(\"/api/v1/drivers/update_driver\", {\r\n        id: values.id,\r\n        firstName: values.firstName,\r\n        middleName: values.middleName,\r\n        lastName: values.lastName,\r\n        address: values.address,\r\n        contactNumber: values.contactNumber,\r\n        email: values.email,\r\n      })\r\n      .then((res) => {\r\n        setTimeout(() => {\r\n          setIsModalVisible(false);\r\n          setConfirmLoading(false);\r\n        }, 2000);\r\n        {\r\n          ifChanged\r\n            ? Modal.success({\r\n                content: \"Successfully Updated Driver Info\",\r\n                okButtonProps: {\r\n                  style: {borderRadius: '50px'}\r\n                },\r\n              })\r\n            : Modal.success({\r\n                content: \"Driver Info is up to date\",\r\n                okButtonProps: {\r\n                  style: {borderRadius: '50px'}\r\n                },\r\n              });\r\n        }\r\n      })\r\n      .catch((error) => console.log(error));\r\n\r\n    //console.log(ifChanged);\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    Modal.error({\r\n      content: \"Failure to Update Driver Info\",\r\n      okButtonProps: {\r\n        style: {borderRadius: '50px'}\r\n      },\r\n    });\r\n    setTimeout(() => {\r\n      setIsModalVisible(true);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n    // console.log(\"Failed:\", errorInfo);\r\n  };\r\n  const onValuesChange = (changedValues, allValues) => {\r\n    //console.log(\"Changed\", allValues, changedValues);\r\n    setIfChanged(true);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button type=\"primary\" className=\"modal-button-edit\" onClick={showModal}>\r\n        <span className=\"desktop-view\"><EditOutlined /> Edit</span>\r\n        <span className=\"mobile-view\"><EditOutlined /></span>\r\n      </Button>\r\n      <Modal\r\n        title=\"Update Driver Info\"\r\n        confirmLoading={confirmLoading}\r\n        visible={isModalVisible}\r\n        onOk={onFinish}\r\n        onCancel={handleCancel}\r\n        afterClose={handleClose}\r\n        destroyOnClose={true}\r\n        footer={[\r\n          <Button key=\"back\" className=\"modal-button\" onClick={handleCancel}>\r\n            Cancel\r\n          </Button>,\r\n          <Button form=\"myForm\" className=\"modal-button\" htmlType=\"submit\" type=\"primary\">\r\n            Update\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <Form\r\n          layout=\"vertical\"\r\n          name=\"basic\"\r\n          form={form}\r\n          initialValues={{ remember: true }}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n          onValuesChange={onValuesChange}\r\n          id=\"myForm\"\r\n        >\r\n          <Form.Item label=\"Driver ID:\" name=\"id\">\r\n            <Input disabled={true} bordered={false} />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Firstname:\"\r\n            name=\"firstName\"\r\n            rules={[\r\n              { required: true, message: \"Please input Firstname!\" },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Middlename:\"\r\n            name=\"middleName\"\r\n            rules={[\r\n              { required: true, message: \"Please input Middlename!\" },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Lastname:\"\r\n            name=\"lastName\"\r\n            rules={[\r\n              { required: true, message: \"Please input Lastname!\" },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Contact:\"\r\n            name=\"contactNumber\"\r\n            rules={[\r\n              { required: true, message: \"Please input Contact Number!\" },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Address:\"\r\n            name=\"address\"\r\n            rules={[\r\n              { required: true, message: \"Please input the Address!\" },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Email:\"\r\n            name=\"email\"\r\n            rules={[\r\n              { required: true, message: \"Please input Email!\" },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditDriverModal;\r\n","C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\BarangaysTableList\\AddBarangayImageModal.js",["345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361","362","363"],"import React, { useState } from \"react\";\r\nimport { Modal, Upload, Button, Space, Row, List, Form, message } from \"antd\";\r\nimport { UploadOutlined } from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\nimport { Content } from \"antd/lib/layout/layout\";\r\n\r\nfunction AddBarangayImageModal(props) {\r\n  const [file, setFile] = useState({});\r\n  const [imageStatus, setImageStatus] = useState(false);\r\n  const [filename, setFilename] = useState(\"Choose file\");\r\n  const [uploadedImagePath, setUploadedImagePath] = useState(\"\");\r\n  const [uploadImageStatus, setUploadImageStatus] = useState(\"none\");\r\n  const [fetchImage, setFetchImage] = useState(\"\");\r\n  const [images, setImages] = useState([]);\r\n  const [info, setInfo] = useState([]);\r\n  const [ifCanceled, setIfCanceled] = useState(false);\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [form] = Form.useForm();\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n\r\n  const showModal = () => {\r\n    form.setFieldsValue({\r\n      imageOwnerId: props.info.id,\r\n      imageReferenceId: 1,\r\n    });\r\n    setUploadedImagePath();\r\n    setUploadImageStatus(\"removed\");\r\n    setFilename(\"Choose file\");\r\n    setIsModalVisible(true);\r\n    console.log(props.info);\r\n  };\r\n\r\n  const checking = (file) => {\r\n    setFilename(file);\r\n  };\r\n  const viewFile = () => {\r\n    {\r\n      (() => {\r\n        switch (uploadImageStatus) {\r\n          case \"done\":\r\n            return (\r\n              setUploadedImagePath(filename.file.response.filePath),\r\n              console.log(\"done\")\r\n            );\r\n\r\n          case \"removed\":\r\n            return console.log(\"removed\");\r\n\r\n          case \"\":\r\n            return console.log(\"none\");\r\n        }\r\n      })();\r\n    }\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIfCanceled(true);\r\n\r\n    setTimeout(() => {\r\n      setIsModalVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 500);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n  };\r\n\r\n  const onFinish = (values) => {\r\n    if (uploadImageStatus == \"done\") {\r\n      axios\r\n        .post(\"/api/v1/images/save_image\", {\r\n          imageOwnerId: props.info.id,\r\n          imageReferenceId: 1,\r\n          imagePath: uploadedImagePath,\r\n        })\r\n        .then((res) => {\r\n          message.success(\"Successfully Saved\");\r\n          setTimeout(() => {\r\n            setIsModalVisible(false);\r\n            setConfirmLoading(false);\r\n          }, 500);\r\n          setUploadedImagePath(\"\");\r\n        })\r\n        .catch((error) => console.log(error));\r\n    } else {\r\n      message.error(\"Image Saving Error\");\r\n      // console.log(\"Uploaded image is removed\");\r\n    }\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"fail\");\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  const removeImage = (val) => {\r\n    //console.log(\"Removed image\", val.response.filePath);\r\n    axios\r\n      .delete(\"/api/v1/images/delete_folder_image\", {\r\n        params: {\r\n          fileName: val.response.imagePath,\r\n          fileId: val.response.id,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        setUploadImageStatus(\"removed\");\r\n        // console.log(res.data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n    setUploadedImagePath();\r\n    message.error(`File removed Successfully.`);\r\n  };\r\n\r\n  const uploadFile = {\r\n    name: \"file\",\r\n    action: \"/api/v1/images/add_image\",\r\n    headers: {\r\n      authorization: \"authorization-text\",\r\n    },\r\n    data: { imageOwnerId: props.info.id, imageReferenceId: 1 },\r\n    onChange(info) {\r\n      if (info.file.status !== \"uploading\") {\r\n        console.log(\"uploading\", info.file, info.fileList);\r\n      }\r\n      if (info.file.status === \"done\") {\r\n        message.success(`${info.file.name} file uploaded Successfully.`);\r\n      } else if (info.file.status === \"error\") {\r\n        message.error(`${info.file.name} file upload Failed.`);\r\n      }\r\n      setUploadImageStatus(info.file.status);\r\n      setFilename(info);\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button type=\"primary\" className=\"modal-button-upload\" onClick={showModal}>\r\n        <span className=\"desktop-view\">\r\n          <UploadOutlined /> Upload\r\n        </span>\r\n        <span className=\"mobile-view\">\r\n          <UploadOutlined />\r\n        </span>\r\n      </Button>\r\n      <Modal\r\n        title=\"Barangay Image Upload\"\r\n        confirmLoading={confirmLoading}\r\n        visible={isModalVisible}\r\n        onOk={onFinish}\r\n        onCancel={handleCancel}\r\n        afterClose={handleClose}\r\n        destroyOnClose={true}\r\n        footer={[\r\n          <Button\r\n            key=\"back\"\r\n            className=\"modal-button\"\r\n            type=\"danger\"\r\n            onClick={handleCancel}\r\n          >\r\n            Close\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <List itemLayout=\"vertical\">\r\n          <List.Item>\r\n            <h4>Image Barangay ID: </h4>\r\n            {props.info.id}\r\n          </List.Item>\r\n          <List.Item>\r\n            <h4>Image Barangay Name: </h4>\r\n            {props.info.barangayName}\r\n          </List.Item>\r\n          <List.Item>\r\n            <h4>Image Reference Name: </h4>\r\n            Barangay\r\n          </List.Item>\r\n        </List>\r\n        <Row>\r\n          <Space style={{ width: \"100%\" }} size=\"large\">\r\n            <Upload\r\n              {...uploadFile}\r\n              onRemove={removeImage}\r\n              listType=\"picture-card\"\r\n              showUploadList={{ showPreviewIcon: false }}\r\n              maxCount={5}\r\n            >\r\n              <Space>\r\n                <UploadOutlined />\r\n                Upload\r\n              </Space>\r\n            </Upload>\r\n          </Space>\r\n        </Row>\r\n        {/* <Row>\r\n          <Form\r\n            name=\"basic\"\r\n            form={form}\r\n            layout={\"horizontal\"}\r\n            initialValues={{ remember: true }}\r\n            onFinish={onFinish}\r\n            onFinishFailed={onFinishFailed}\r\n          >\r\n            <Form.Item label=\"Image Owner ID: \" name=\"imageOwnerId\">\r\n               {props.info.id}\r\n            </Form.Item>\r\n            <Form.Item label=\"Image Reference: \" name=\"imageReferenceId\">\r\n               Barangay\r\n            </Form.Item>\r\n          </Form>\r\n        </Row> */}\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddBarangayImageModal;\r\n","C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\FunFactsTableList\\AddFunfactsModal.js",["364","365","366","367","368","369","370","371","372","373","374","375","376","377","378","379","380","381","382","383"],"import React, { useState } from \"react\";\r\nimport { Modal, Upload, Button, Space, Row, List, Form, message } from \"antd\";\r\nimport { UploadOutlined } from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\n\r\nfunction AddFunfactsModal(props) {\r\n  const [file, setFile] = useState({});\r\n  const [imageStatus, setImageStatus] = useState(false);\r\n  const [filename, setFilename] = useState(\"Choose file\");\r\n  const [uploadedImagePath, setUploadedImagePath] = useState(\"\");\r\n  const [uploadImageStatus, setUploadImageStatus] = useState(\"none\");\r\n  const [fetchImage, setFetchImage] = useState(\"\");\r\n  const [images, setImages] = useState([]);\r\n  const [info, setInfo] = useState([]);\r\n  const [ifCanceled, setIfCanceled] = useState(false);\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [form] = Form.useForm();\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n\r\n  const showModal = () => {\r\n    setUploadedImagePath();\r\n    setUploadImageStatus(\"removed\");\r\n    setFilename(\"Choose file\");\r\n    setIsModalVisible(true);\r\n    console.log(props.info);\r\n  };\r\n\r\n  const checking = (file) => {\r\n    setFilename(file);\r\n  };\r\n  const viewFile = () => {\r\n    {\r\n      (() => {\r\n        switch (uploadImageStatus) {\r\n          case \"done\":\r\n            return (\r\n              setUploadedImagePath(filename.file.response.filePath),\r\n              console.log(\"done\")\r\n            );\r\n\r\n          case \"removed\":\r\n            return console.log(\"removed\");\r\n\r\n          case \"\":\r\n            return console.log(\"none\");\r\n        }\r\n      })();\r\n    }\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIfCanceled(true);\r\n    props.afterClosing();\r\n\r\n    setTimeout(() => {\r\n      setIsModalVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 500);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n    props.afterClosing();\r\n  };\r\n\r\n  const onFinish = (values) => {\r\n    if (uploadImageStatus == \"done\") {\r\n      axios\r\n        .post(\"/api/v1/images/save_image\", {\r\n          imageOwnerId: props.info.id,\r\n          imageReferenceId: 1,\r\n          imagePath: uploadedImagePath,\r\n        })\r\n        .then((res) => {\r\n          message.success(\"Successfully Saved\");\r\n          setTimeout(() => {\r\n            setIsModalVisible(false);\r\n            setConfirmLoading(false);\r\n          }, 500);\r\n          setUploadedImagePath(\"\");\r\n        })\r\n        .catch((error) => console.log(error));\r\n    } else {\r\n      message.error(\"Image Saving Error\");\r\n      // console.log(\"Uploaded image is removed\");\r\n    }\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"fail\");\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  const removeImage = (val) => {\r\n    //console.log(\"Removed image\", val.response.filePath);\r\n    axios\r\n      .delete(\"/api/v1/funfacts/delete_funfacts\", {\r\n        params: {\r\n          fileName: val.response.lgImagePath,\r\n          fileId: val.response.id,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        setUploadImageStatus(\"removed\");\r\n        // console.log(res.data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n    setUploadedImagePath();\r\n    message.error(`File removed Successfully.`);\r\n  };\r\n\r\n  const uploadFile = {\r\n    name: \"file\",\r\n    action: \"/api/v1/funfacts/add_funfacts\",\r\n    headers: {\r\n      authorization: \"authorization-text\",\r\n    },\r\n    //data: { imageOwnerId: props.info.id, imageReferenceId: 1 },\r\n    onChange(info) {\r\n      if (info.file.status !== \"uploading\") {\r\n        console.log(\"uploading\", info.file, info.fileList);\r\n      }\r\n      if (info.file.status === \"done\") {\r\n        message.success(`${info.file.name} file uploaded Successfully.`);\r\n      } else if (info.file.status === \"error\") {\r\n        message.error(`${info.file.name} file upload Failed.`);\r\n      }\r\n      setUploadImageStatus(info.file.status);\r\n      setFilename(info);\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        type=\"primary\"\r\n        className=\"modal-button-upload\"\r\n        onClick={showModal}\r\n      >\r\n        <span className=\"desktop-view\">\r\n          <UploadOutlined /> Add Funfacts\r\n        </span>\r\n        <span className=\"mobile-view\">\r\n          <UploadOutlined />\r\n        </span>\r\n      </Button>\r\n      <Modal\r\n        title=\"Fun Facts Upload\"\r\n        confirmLoading={confirmLoading}\r\n        visible={isModalVisible}\r\n        onOk={onFinish}\r\n        onCancel={handleCancel}\r\n        afterClose={handleClose}\r\n        destroyOnClose={true}\r\n        footer={[\r\n          <Button\r\n            key=\"back\"\r\n            className=\"modal-button\"\r\n            type=\"danger\"\r\n            onClick={handleCancel}\r\n          >\r\n            Close\r\n          </Button>,\r\n        ]}\r\n      >\r\n        {/* <List itemLayout=\"vertical\">\r\n          <List.Item>\r\n            <h4>Image Barangay ID: </h4>\r\n            {props.info.id}\r\n          </List.Item>\r\n          <List.Item>\r\n            <h4>Image Barangay Name: </h4>\r\n            {props.info.barangayName}\r\n          </List.Item>\r\n          <List.Item>\r\n            <h4>Image Reference Name: </h4>\r\n            Barangay\r\n          </List.Item>\r\n        </List> */}\r\n        <Row>\r\n          <Space style={{ width: \"100%\" }} size=\"large\">\r\n            <Upload\r\n              {...uploadFile}\r\n              onRemove={removeImage}\r\n              listType=\"picture-card\"\r\n              showUploadList={{ showPreviewIcon: false }}\r\n              maxCount={5}\r\n            >\r\n              <Space>\r\n                <UploadOutlined />\r\n                Upload\r\n              </Space>\r\n            </Upload>\r\n          </Space>\r\n        </Row>\r\n        {/* <Row>\r\n          <Form\r\n            name=\"basic\"\r\n            form={form}\r\n            layout={\"horizontal\"}\r\n            initialValues={{ remember: true }}\r\n            onFinish={onFinish}\r\n            onFinishFailed={onFinishFailed}\r\n          >\r\n            <Form.Item label=\"Image Owner ID: \" name=\"imageOwnerId\">\r\n               {props.info.id}\r\n            </Form.Item>\r\n            <Form.Item label=\"Image Reference: \" name=\"imageReferenceId\">\r\n               Barangay\r\n            </Form.Item>\r\n          </Form>\r\n        </Row> */}\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddFunfactsModal;\r\n","C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\DriversTableList\\AddDriverImageModal.js",["384","385","386","387","388","389","390","391","392","393","394","395","396","397","398","399","400","401","402","403","404","405"],"import React, { useState } from \"react\";\r\nimport {\r\n  Modal,\r\n  Upload,\r\n  Button,\r\n  Space,\r\n  Row,\r\n  Col,\r\n  List,\r\n  Form,\r\n  Radio,\r\n  Input,\r\n  message,\r\n} from \"antd\";\r\nimport { UploadOutlined } from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\nimport { Content } from \"antd/lib/layout/layout\";\r\n\r\nfunction AddDriverImageModal(props) {\r\n  const [file, setFile] = useState({});\r\n  const [imageStatus, setImageStatus] = useState(false);\r\n  const [filename, setFilename] = useState(\"Choose file\");\r\n  const [uploadedImagePath, setUploadedImagePath] = useState(\"\");\r\n  const [uploadImageStatus, setUploadImageStatus] = useState(\"none\");\r\n  const [fetchImage, setFetchImage] = useState(\"\");\r\n  const [images, setImages] = useState([]);\r\n  const [info, setInfo] = useState([]);\r\n  const [ifCanceled, setIfCanceled] = useState(false);\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [form] = Form.useForm();\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n\r\n  const showModal = () => {\r\n    form.setFieldsValue({\r\n      imageOwnerId: props.info.id,\r\n      imageReferenceId: 2,\r\n    });\r\n    setUploadedImagePath();\r\n    setUploadImageStatus(\"removed\");\r\n    setFilename(\"Choose file\");\r\n    setIsModalVisible(true);\r\n    console.log(props.info);\r\n  };\r\n\r\n  const checking = (file) => {\r\n    setFilename(file);\r\n  };\r\n  const viewFile = () => {\r\n    {\r\n      (() => {\r\n        switch (uploadImageStatus) {\r\n          case \"done\":\r\n            return (\r\n              setUploadedImagePath(filename.file.response.filePath),\r\n              console.log(\"done\")\r\n            );\r\n\r\n          case \"removed\":\r\n            return console.log(\"removed\");\r\n\r\n          case \"\":\r\n            return console.log(\"none\");\r\n        }\r\n      })();\r\n    }\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIfCanceled(true);\r\n\r\n    setTimeout(() => {\r\n      setIsModalVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 500);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n  };\r\n\r\n  const onFinish = (values) => {\r\n    if (uploadImageStatus == \"done\") {\r\n      axios\r\n        .post(\"/api/v1/images/save_image\", {\r\n          imageOwnerId: props.info.id,\r\n          imageReferenceId: 2,\r\n          imagePath: uploadedImagePath,\r\n        })\r\n        .then((res) => {\r\n          message.success(\"Successfully Saved\");\r\n          setTimeout(() => {\r\n            setIsModalVisible(false);\r\n            setConfirmLoading(false);\r\n          }, 500);\r\n          setUploadedImagePath(\"\");\r\n        })\r\n        .catch((error) => console.log(error));\r\n    } else {\r\n      message.error(\"Image Saving Error\");\r\n      // console.log(\"Uploaded image is removed\");\r\n    }\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"fail\");\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  const removeImage = (val) => {\r\n    //console.log(\"Removed image\", val.response.filePath);\r\n    axios\r\n      .delete(\"/api/v1/images/delete_folder_image\", {\r\n        params: {\r\n          fileName: val.response.imagePath,\r\n          fileId: val.response.id,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        setUploadImageStatus(\"removed\");\r\n        // console.log(res.data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n    setUploadedImagePath();\r\n    message.error(`File removed Successfully.`);\r\n  };\r\n\r\n  const uploadFile = {\r\n    name: \"file\",\r\n    action: \"/api/v1/images/add_image\",\r\n    headers: {\r\n      authorization: \"authorization-text\",\r\n    },\r\n    data: { imageOwnerId: props.info.id, imageReferenceId: 2 },\r\n    onChange(info) {\r\n      if (info.file.status !== \"uploading\") {\r\n        console.log(\"uploading\", info.file, info.fileList);\r\n      }\r\n      if (info.file.status === \"done\") {\r\n        message.success(`${info.file.name} file uploaded Successfully.`);\r\n      } else if (info.file.status === \"error\") {\r\n        message.error(`${info.file.name} file upload Failed.`);\r\n      }\r\n      setUploadImageStatus(info.file.status);\r\n      setFilename(info);\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button type=\"primary\" className=\"modal-button-upload\" onClick={showModal}>\r\n        <span className=\"desktop-view\"><UploadOutlined /> Upload</span>\r\n        <span className=\"mobile-view\"><UploadOutlined /></span>\r\n      </Button>\r\n      <Modal\r\n        title=\"Driver Image Upload\"\r\n        confirmLoading={confirmLoading}\r\n        visible={isModalVisible}\r\n        onOk={onFinish}\r\n        onCancel={handleCancel}\r\n        afterClose={handleClose}\r\n        destroyOnClose={true}\r\n        footer={[\r\n          <Button key=\"back\" className=\"modal-button\"  type=\"danger\" onClick={handleCancel}>\r\n            Close\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <List itemLayout=\"vertical\">\r\n          <List.Item>\r\n          <h4>Image Driver ID: </h4>\r\n          {props.info.id}\r\n          </List.Item>\r\n          <List.Item>\r\n          <h4>Image Driver Name: </h4>\r\n          {props.info.firstName} {props.info.firstName} {props.info.firstName}\r\n          </List.Item>\r\n          <List.Item>\r\n          <h4>Image Reference Name: </h4>\r\n          Driver\r\n          </List.Item>\r\n        </List>\r\n        <Row>\r\n          <Space style={{ width: \"100%\" }} size=\"large\">\r\n            <Upload\r\n              {...uploadFile}\r\n              onRemove={removeImage}\r\n              listType=\"picture-card\"\r\n              showUploadList={{showPreviewIcon:false}}\r\n              maxCount={5}\r\n            >\r\n                <Space>\r\n                  <UploadOutlined/>\r\n               Upload\r\n               </Space>\r\n            </Upload>\r\n          </Space>\r\n        </Row>\r\n        {/* <Row>\r\n          <Form\r\n            name=\"basic\"\r\n            form={form}\r\n            layout={\"horizontal\"}\r\n            initialValues={{ remember: true }}\r\n            onFinish={onFinish}\r\n            onFinishFailed={onFinishFailed}\r\n          >\r\n            <Form.Item label=\"Image Owner ID: \" name=\"imageOwnerId\">\r\n               {props.info.id}\r\n            </Form.Item>\r\n            <Form.Item label=\"Image Reference: \" name=\"imageReferenceId\">\r\n               Barangay\r\n            </Form.Item>\r\n          </Form>\r\n        </Row> */}\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddDriverImageModal;\r\n","C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\DriversTableList\\AddDriverModal.js",["406","407","408","409","410","411","412","413","414","415","416"],"import React, { useState } from \"react\";\r\nimport { Form, Input, Modal, Button, Upload, Space } from \"antd\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\n\r\nfunction AddDriverModal(props) {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n  const [ifCanceled, setIfCanceled] = useState(false);\r\n  const [drivers, setDrivers] = useState([]);\r\n  const [file, setFile] = useState({});\r\n  const [filename, setFilename] = useState(\"Choose file\");\r\n  const [uploadedImagePath, setUploadedImagePath] = useState();\r\n\r\n  const checking = (file) => {\r\n    setFilename(file);\r\n    //console.log(filename);\r\n  };\r\n  const unchecking = () => {\r\n    setFilename(\"Choose file\");\r\n    //console.log(filename);\r\n  };\r\n  const viewFile = () => {\r\n    if (filename == \"Choose file\") {\r\n      //console.log(\"No image selected\");\r\n    } else {\r\n      setUploadedImagePath(filename.file.response.filePath);\r\n      //console.log(filename.file.response);\r\n    }\r\n  };\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n    //console.log(props.info);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIfCanceled(true);\r\n    setIsModalVisible(false);\r\n  };\r\n  const handleClose = () => {\r\n    if (ifCanceled) {\r\n    } else {\r\n      props.afterClosing();\r\n    }\r\n  };\r\n\r\n  const onFinish = (values) => {\r\n    console.log(values);\r\n    props.passedData(props.info);\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n    setTimeout(() => {\r\n      setIsModalVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n\r\n    axios\r\n      .post(\"/api/v1/drivers/add_driver\", values)\r\n      .then((res) => {\r\n        // let driversCopy = [...drivers];\r\n        // driversCopy = [...driversCopy, res.data];\r\n        // //console.log(driversCopy);\r\n        // setDrivers(driversCopy);\r\n        // setFilename(file);\r\n        Modal.success({\r\n          content: \"Successfully Added New Driver\",\r\n          okButtonProps: {\r\n            style: {borderRadius: '50px'}\r\n          },\r\n        });\r\n        // setUploadedImagePath(filename.file.response.filePath);\r\n        // //console.log(uploadedImagePath);\r\n        // axios.post(\"/api/v1/images/save_image\", {\r\n        //   imageOwnerId: res.data.id,\r\n        //   imageReferenceId: 1,\r\n        //   imagePath: uploadedImagePath,\r\n        // });\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    Modal.error({\r\n      content: \"Failure to Add New Driver\",\r\n      okButtonProps: {\r\n        style: {borderRadius: '50px'}\r\n      },\r\n    });\r\n    setTimeout(() => {\r\n      setIsModalVisible(true);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n    //console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button type=\"primary\" className=\"modal-button-add\" onClick={showModal}>\r\n        <span className=\"desktop-view\"><PlusOutlined /> Add Driver</span>\r\n        <span className=\"mobile-view\"><PlusOutlined /></span>\r\n      </Button>\r\n\r\n      <Modal\r\n        title=\"Add Driver:\"\r\n        visible={isModalVisible}\r\n        confirmLoading={confirmLoading}\r\n        onOk={onFinish}\r\n        onCancel={handleCancel}\r\n        afterClose={handleClose}\r\n        destroyOnClose={true}\r\n        footer={[\r\n          <Button key=\"back\" className=\"modal-button\"  onClick={handleCancel}>\r\n            Cancel\r\n          </Button>,\r\n          <Button\r\n            form=\"myForm\"\r\n            key=\"submit\"\r\n            htmlType=\"submit\"\r\n            type=\"primary\"\r\n            className=\"modal-button\" \r\n            loading={confirmLoading}\r\n            onClick={onFinish}\r\n          >\r\n            Add\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <Form\r\n          layout=\"vertical\"\r\n          name=\"basic\"\r\n          initialValues={{ remember: true }}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n          id=\"myForm\"\r\n        >\r\n          <Form.Item\r\n            label=\"First Name\"\r\n            name=\"firstName\"\r\n            rules={[\r\n              { required: true, message: \"Please input your Firstname!\" },\r\n            ]}\r\n          >\r\n            <Input placeholder=\"Firstname\"/>\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Middle Name\"\r\n            name=\"middleName\"\r\n            rules={[\r\n              { required: true, message: \"Please input your Middlename!\" },\r\n            ]}\r\n          >\r\n            <Input placeholder=\"Middlename\"/>\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Last Name\"\r\n            name=\"lastName\"\r\n            rules={[{ required: true, message: \"Please input your Lastname!\" }]}\r\n          >\r\n            <Input placeholder=\"Lastname\"/>\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Address\"\r\n            name=\"address\"\r\n            rules={[{ required: true, message: \"Please input your Address!\" }]}\r\n          >\r\n            <Input placeholder=\"Address\"/>\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Contact Number\"\r\n            name=\"contactNumber\"\r\n            rules={[\r\n              { required: true, message: \"Please input your Contact Number!\" },\r\n            ]}\r\n          >\r\n            <Input placeholder=\"Contact No.\"/>\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Generate Password\"\r\n            name=\"generatePassword\"\r\n            rules={[{ required: true, message: \"Please input your password!\" }]}\r\n          >\r\n            <Input type=\"password\" placeholder=\"Password\"/>\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Email\"\r\n            name=\"email\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                type: \"email\",\r\n                message: \"Please input your Email!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input placeholder=\"Email\"/>\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddDriverModal;\r\n","C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\DriversTableList\\DriversInfoModal.js",["417","418","419","420","421","422"],"import React, { useState } from \"react\";\r\nimport { Modal, Button, Image, Card, Col, Row } from \"antd\";\r\nimport { UnorderedListOutlined } from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\n\r\nfunction DriversInfoModal(props) {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [modalValue, setModalValue] = useState(\"\");\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n  const [ifCanceled, setIfCanceled] = useState(false);\r\n  const [drivers, setDrivers] = useState([]);\r\n  const [images, setImages] = useState([]);\r\n  const [imagePath, setImagePath] = useState([]);\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n    axios\r\n      .post(\"/api/v1/images/search_images\", {\r\n        imageOwnerId: props.info.id,\r\n        imageReferenceId: 2,\r\n      })\r\n      .then((res) => {\r\n        let data = res.data;\r\n        setImages(data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const handleOk = () => {\r\n    props.passedData(props.info);\r\n\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n    setTimeout(() => {\r\n      setIsModalVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n    setTimeout(() => {\r\n      setIsModalVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n    Modal.success({\r\n      content: \"Still in development\",\r\n      okButtonProps: {\r\n        style: {borderRadius: '50px'}\r\n      },\r\n    });\r\n    //console.log(id);\r\n    // axios\r\n    //   .delete(\"/api/v1/images/delete_image\", {\r\n    //     params: {\r\n    //       id,\r\n    //       referenceId: 1,\r\n    //     },\r\n    //   })\r\n    //   .then((res) => {\r\n    //     let imagesCopy = [...images];\r\n    //     imagesCopy = imagesCopy.filter(\r\n    //       (imagesCopy) =>\r\n    //         imagesCopy.imageOwnerId !== id && imagesCopy.imageReferenceId === 2\r\n    //     );\r\n    //     setImages(imagesCopy);\r\n    //     //console.log(imagesCopy);\r\n    //   })\r\n    //   .catch((error) => console.log(error));\r\n\r\n    // axios\r\n    //   .delete(\"/api/v1/drivers/delete_driver\", {\r\n    //     params: {\r\n    //       id,\r\n    //     },\r\n    //   })\r\n    //   .then((res) => {\r\n    //     let driversCopy = [...drivers];\r\n    //     driversCopy = driversCopy.filter((driver) => driver.id !== id);\r\n    //     setDrivers(driversCopy);\r\n    //     //console.log(driversCopy);\r\n\r\n    //     Modal.success({\r\n    //       content: \"Driver has been Removed\",\r\n    //     });\r\n    //   })\r\n    //   .catch((error) => console.log(error));\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIfCanceled(true);\r\n    setIsModalVisible(false);\r\n  };\r\n  const handleClose = () => {\r\n    if (ifCanceled) {\r\n    } else {\r\n      props.afterClosing();\r\n    }\r\n  };\r\n\r\n  const handleDeleteImage = (id, imagePath) => {\r\n    axios\r\n      .delete(\"/api/v1/images/delete_folder_image\", {\r\n        params: {\r\n          fileName: imagePath,\r\n          fileId: id,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        let imagesCopy = [...images];\r\n        imagesCopy = imagesCopy.filter((image) => image.id !== id);\r\n        setImages(imagesCopy);\r\n        Modal.success({\r\n          content: \"Driver image has been removed\",\r\n          okButtonProps: {\r\n            style: {borderRadius: '50px'}\r\n          },\r\n        });\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n  return (\r\n    <div>\r\n      <Button type=\"primary\" className=\"modal-button-view\" onClick={showModal}>\r\n        <span className=\"desktop-view\">\r\n          <UnorderedListOutlined /> View\r\n        </span>\r\n        <span className=\"mobile-view\">\r\n          <UnorderedListOutlined />\r\n        </span>\r\n      </Button>\r\n      <Modal\r\n        title=\"Driver Information\"\r\n        visible={isModalVisible}\r\n        confirmLoading={confirmLoading}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        afterClose={handleClose}\r\n        footer={[\r\n          <Button\r\n            className=\"modal-button\"\r\n            loading={confirmLoading}\r\n            onClick={() => handleDelete(props.info.id)}\r\n            danger\r\n          >\r\n            Remove\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <p>\r\n          <h4>ID:</h4>\r\n          {props.info.id}\r\n        </p>\r\n        <p>\r\n          <h4>Name:</h4>\r\n          {props.info.firstName} {props.info.middleName} {props.info.lastName}\r\n        </p>\r\n        <p>\r\n          <h4>Contact Number:</h4>\r\n          {props.info.contactNumber}\r\n        </p>\r\n        <p>\r\n          <h4>Address: </h4>\r\n          {props.info.address}\r\n        </p>\r\n        <p>\r\n          <h4>Email Address: </h4>\r\n          {props.info.email}\r\n        </p>\r\n        <h4>Uploaded Images: </h4>\r\n        <Card className=\"shadow-sm\">\r\n          <Row>\r\n            {images.map((image, index) => (\r\n              <Col key={index} md={{ span: 6 }}>\r\n                <br></br>\r\n                <Image\r\n                  height={100}\r\n                  width={100}\r\n                  src={`/api/v1/images/${\r\n                    image.imagePath ? image.imagePath : \"logo.png\"\r\n                  }`}\r\n                />\r\n                <Row>\r\n                  <br></br>\r\n                  <Button\r\n                    onClick={() => handleDeleteImage(image.id, image.imagePath)}\r\n                    danger\r\n                  >\r\n                    Delete\r\n                  </Button>\r\n                </Row>\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n        </Card>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DriversInfoModal;\r\n",["423","424"],"C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\BarangaysTableList\\AddBarangayModal.js",["425","426","427","428","429","430","431","432","433","434","435"],"import React, { useState } from \"react\";\r\nimport { Form, Input, Modal, Button, Upload } from \"antd\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\n\r\nfunction AddBarangayModal(props) {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [modalValue, setModalValue] = useState(\"\");\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n  const [ifCanceled, setIfCanceled] = useState(false);\r\n  const [barangays, setBarangays] = useState([]);\r\n  const [file, setFile] = useState({});\r\n  const [filename, setFilename] = useState(\"Choose file\");\r\n  const [uploadedImagePath, setUploadedImagePath] = useState();\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n    console.log(props.info);\r\n  };\r\n\r\n  const checking = (file) => {\r\n    setFilename(file);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIfCanceled(true);\r\n    setIsModalVisible(false);\r\n  };\r\n  const handleClose = () => {\r\n    if (ifCanceled) {\r\n    } else {\r\n      props.afterClosing();\r\n    }\r\n  };\r\n\r\n  const onFinish = (values) => {\r\n    console.log(values);\r\n    props.passedData(props.info);\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n    setTimeout(() => {\r\n      setIsModalVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n    // setUploadedImagePath(filename.file.response.filePath);\r\n    axios\r\n      .post(\"/api/v1/barangays/add_barangay\", values)\r\n      .then((res) => {\r\n        // let barangaysCopy = [...barangays];\r\n        // barangaysCopy = [...barangaysCopy, res.data];\r\n        // //console.log(barangaysCopy);\r\n        // setBarangays(barangaysCopy);\r\n        Modal.success({\r\n          content: \"Successfully Added New Barangay\",\r\n          okButtonProps: {\r\n            style: {borderRadius: '50px'}\r\n          },\r\n        });\r\n\r\n        // axios.post(\"/api/v1/images/save_image\", {\r\n        //   imageOwnerId: res.data.id,\r\n        //   imageReferenceId: 2,\r\n        //   imagePath: uploadedImagePath,\r\n        // });\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    Modal.error({\r\n      content: \"Failure to Add New Barangay\",\r\n      okButtonProps: {\r\n        style: {borderRadius: '50px'}\r\n      },\r\n    });\r\n    setTimeout(() => {\r\n      setIsModalVisible(true);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n    //console.log(\"fail\");\r\n    //console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button type=\"primary\" className=\"modal-button-add\" onClick={showModal}>\r\n        <span className=\"desktop-view\"><PlusOutlined /> Add Barangay</span>\r\n        <span className=\"mobile-view\"><PlusOutlined /></span>\r\n      </Button>\r\n\r\n      <Modal\r\n        title=\"Add Barangay:\"\r\n        visible={isModalVisible}\r\n        confirmLoading={confirmLoading}\r\n        onOk={onFinish}\r\n        onCancel={handleCancel}\r\n        afterClose={handleClose}\r\n        destroyOnClose={true}\r\n        footer={[\r\n          <Button key=\"back\" className=\"modal-button\" onClick={handleCancel}>\r\n            Cancel\r\n          </Button>,\r\n          <Button\r\n            form=\"myForm\"\r\n            key=\"submit\"\r\n            htmlType=\"submit\"\r\n            type=\"primary\"\r\n            loading={confirmLoading}\r\n            onClick={onFinish}\r\n            className=\"modal-button\"\r\n          >\r\n            Add\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <Form\r\n          layout=\"vertical\"\r\n          name=\"basic\"\r\n          initialValues={{ remember: true }}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n          id=\"myForm\"\r\n        >\r\n          <Form.Item\r\n            label=\"Barangay Name\"\r\n            name=\"barangayName\"\r\n            rules={[\r\n              { required: true, message: \"Please input the Barangay's Name!\" },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Location\"\r\n            name=\"location\"\r\n            rules={[\r\n              { required: true, message: \"Please input Barangay's Location!\" },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Barangay Description\"\r\n            name=\"barangayDescription\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please input the Barangay's Description!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input.TextArea />\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddBarangayModal;\r\n","C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\BarangaysTableList\\BarangaysInfoModal.js",["436","437","438","439","440","441"],"import React, { useState } from \"react\";\r\nimport { Modal, Button, Card, Image, Col, Row } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { UnorderedListOutlined } from \"@ant-design/icons\";\r\n\r\nfunction BarangaysInfoModal(props) {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [modalValue, setModalValue] = useState(\"\");\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n  const [ifCanceled, setIfCanceled] = useState(false);\r\n  const [barangays, setBarangays] = useState([]);\r\n  const [images, setImages] = useState([]);\r\n  const [imagePath, setImagePath] = useState([]);\r\n\r\n  // useEffect(() => {\r\n  //   axios\r\n  //     .get(\"/api/v1/images/\")\r\n  //     .then((res) => {\r\n  //       let data = res.data;\r\n  //       setImages(data);\r\n  //     })\r\n  //     .catch((error) => console.log(error));\r\n  // }, []);\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n    axios\r\n      .post(\"/api/v1/images/search_images\", {\r\n        imageOwnerId: props.info.id,\r\n        imageReferenceId: 1,\r\n      })\r\n      .then((res) => {\r\n        let data = res.data;\r\n        setImages(data);\r\n        //console.log(\"images\", images);\r\n        // let imagesCopy = [...images];\r\n        // imagesCopy = imagesCopy.find(\r\n        //   (imagesCopy) =>\r\n        //     imagesCopy.imageOwnerId === props.info.id &&\r\n        //     imagesCopy.imageReferenceId === 1\r\n        // );\r\n        //setImagePath(imagesCopy.imagePath);\r\n      })\r\n      .catch((error) => console.log(error));\r\n    //console.log(images);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    props.passedData(props.info);\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n    setTimeout(() => {\r\n      setIsModalVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n  };\r\n\r\n  const handleDeleteImage = (id, imagePath) => {\r\n    axios\r\n      .delete(\"/api/v1/images/delete_folder_image\", {\r\n        params: {\r\n          fileName: imagePath,\r\n          fileId: id,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        let imagesCopy = [...images];\r\n        imagesCopy = imagesCopy.filter((image) => image.id !== id);\r\n        setImages(imagesCopy);\r\n        Modal.success({\r\n          content: \"Barangay image has been removed\",\r\n          okButtonProps: {\r\n            style: {borderRadius: '50px'}\r\n          },\r\n        });\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n  const handleDelete = (id) => {\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n    setTimeout(() => {\r\n      setIsModalVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n    Modal.success({\r\n      content: \"Still in development\",\r\n      okButtonProps: {\r\n        style: {borderRadius: '50px'}\r\n      },\r\n    });\r\n\r\n    // axios\r\n    //   .delete(\"/api/v1/barangays/delete_barangay\", {\r\n    //     params: {\r\n    //       id,\r\n    //     },\r\n    //   })\r\n    //   .then((res) => {\r\n    //     Modal.success({\r\n    //       content: \"Barangay has been Removed\",\r\n    //     });\r\n    //   })\r\n    //   .catch((error) => console.log(error));\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIfCanceled(true);\r\n    setIsModalVisible(false);\r\n  };\r\n  const handleClose = () => {\r\n    if (ifCanceled) {\r\n    } else {\r\n      props.afterClosing();\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <Button type=\"primary\" className=\"modal-button-view\" onClick={showModal}>\r\n        <span className=\"desktop-view\">\r\n          <UnorderedListOutlined /> View\r\n        </span>\r\n        <span className=\"mobile-view\">\r\n          <UnorderedListOutlined />\r\n        </span>\r\n      </Button>\r\n      <Modal\r\n        title=\"Barangay Information\"\r\n        visible={isModalVisible}\r\n        confirmLoading={confirmLoading}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        afterClose={handleClose}\r\n        destroyOnClose={true}\r\n        footer={[\r\n          <Button\r\n            loading={confirmLoading}\r\n            onClick={() => handleDelete(props.info.id)}\r\n            danger\r\n            className=\"modal-button\"\r\n          >\r\n            Remove Barangay\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <p>\r\n          <h4>Bargangay ID:</h4>\r\n          {props.info.id}\r\n        </p>\r\n        <p>\r\n          <h4>Barangay Name:</h4>\r\n          {props.info.barangayName}\r\n        </p>\r\n        <p>\r\n          <h4>Location:</h4>\r\n          {props.info.location}\r\n        </p>\r\n        <p>\r\n          <h4>Barangay Description: </h4>\r\n          {props.info.barangayDescription}\r\n        </p>\r\n        <h4>Uploaded Images: </h4>\r\n        <Card className=\"shadow-sm\">\r\n          <Row>\r\n            {images.map((image, index) => (\r\n              <Col key={index} md={{ span: 6 }}>\r\n                <br></br>\r\n                <Image\r\n                  height={100}\r\n                  width={100}\r\n                  src={`/api/v1/images/${\r\n                    image.imagePath ? image.imagePath : \"logo.png\"\r\n                  }`}\r\n                />\r\n                <Row>\r\n                  <br></br>\r\n                  <Button\r\n                    onClick={() => handleDeleteImage(image.id, image.imagePath)}\r\n                    danger\r\n                  >\r\n                    Delete\r\n                  </Button>\r\n                </Row>\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n        </Card>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BarangaysInfoModal;\r\n","C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\BarangaysTableList\\EditBarangayModal.js",["442","443","444","445","446"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, Button, Form, Input } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { EditOutlined  } from \"@ant-design/icons\";\r\n\r\nfunction EditBarangayModal(props) {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [form] = Form.useForm();\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n  const [ifCanceled, setIfCanceled] = useState(false);\r\n  const [ifChanged, setIfChanged] = useState();\r\n  const [barangays, setBarangays] = useState([]);\r\n\r\n  const showModal = () => {\r\n    form.setFieldsValue({\r\n      id: props.info.id,\r\n      barangayName: props.info.barangayName,\r\n      location: props.info.location,\r\n      barangayDescription: props.info.barangayDescription,\r\n    });\r\n    setIsModalVisible(true);\r\n    setIfChanged(false);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIfCanceled(true);\r\n    setIsModalVisible(false);\r\n  };\r\n  const handleClose = () => {\r\n    if (ifCanceled) {\r\n    } else {\r\n      props.afterClosing();\r\n    }\r\n  };\r\n\r\n  const onFinish = (values) => {\r\n    //console.log(ifChanged);\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n    props.passedData(props.info);\r\n\r\n    axios\r\n      .post(\"/api/v1/barangays/update_barangay\", {\r\n        id: values.id,\r\n        barangayName: values.barangayName,\r\n        location: values.location,\r\n        barangayDescription: values.barangayDescription,\r\n      })\r\n      .then((res) => {\r\n        setTimeout(() => {\r\n          setIsModalVisible(false);\r\n          setConfirmLoading(false);\r\n        }, 2000);\r\n        {\r\n          ifChanged\r\n            ? Modal.success({\r\n                content: \"Successfully Updated Barangay\",\r\n                okButtonProps: {\r\n                  style: {borderRadius: '50px'}\r\n                },\r\n              })\r\n            : Modal.success({\r\n                content: \"Barangay Info is up to date\",\r\n                okButtonProps: {\r\n                  style: {borderRadius: '50px'}\r\n                },\r\n              });\r\n        }\r\n      })\r\n      .catch((error) => console.log(error));\r\n\r\n    //console.log(ifChanged);\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    Modal.error({\r\n      content: \"Failure to Update Barangay Info\",\r\n      okButtonProps: {\r\n        style: {borderRadius: '50px'}\r\n      },\r\n    });\r\n    setTimeout(() => {\r\n      setIsModalVisible(true);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n    // console.log(\"Failed:\", errorInfo);\r\n  };\r\n  const onValuesChange = (changedValues, allValues) => {\r\n    //console.log(\"Changed\", allValues, changedValues);\r\n    setIfChanged(true);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button type=\"primary\" className=\"modal-button-edit\" onClick={showModal}>\r\n        <span className=\"desktop-view\"><EditOutlined /> Edit</span>\r\n        <span className=\"mobile-view\"><EditOutlined /></span>\r\n      </Button>\r\n      <Modal\r\n        title=\"Update Barangay Info\"\r\n        confirmLoading={confirmLoading}\r\n        visible={isModalVisible}\r\n        onOk={onFinish}\r\n        onCancel={handleCancel}\r\n        afterClose={handleClose}\r\n        destroyOnClose={true}\r\n        footer={[\r\n          <Button key=\"back\" className=\"modal-button\" onClick={handleCancel}>\r\n            Cancel\r\n          </Button>,\r\n          <Button form=\"myForm\" className=\"modal-button\" htmlType=\"submit\" type=\"primary\">\r\n            Update\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <Form\r\n          layout=\"vertical\"\r\n          name=\"basic\"\r\n          form={form}\r\n          initialValues={{ remember: true }}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n          onValuesChange={onValuesChange}\r\n          id=\"myForm\"\r\n        >\r\n          <Form.Item label=\"Barangay ID:\" name=\"id\">\r\n            <Input disabled={true} bordered={false} />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Barangay Name:\"\r\n            name=\"barangayName\"\r\n            rules={[\r\n              { required: true, message: \"Please input the Barangay's Name!\" },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Location:\"\r\n            name=\"location\"\r\n            rules={[\r\n              { required: true, message: \"Please input Barangay's Location!\" },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Barangay Description:\"\r\n            name=\"barangayDescription\"\r\n            \r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please input the Barangay's Description!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input.TextArea />\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditBarangayModal;\r\n","C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\JeepneyRoute\\AddRoute.js",["447","448","449","450","451"],"import React, { useState } from \"react\";\r\nimport { Form, Input, Modal, Button, Upload, Space } from \"antd\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\n\r\nfunction AddRoute(props) {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n  const [ifCanceled, setIfCanceled] = useState(false);\r\n  const [routeList, setRouteList] = useState([]);\r\n  const [form] = Form.useForm();\r\n\r\n  // const checking = (file) => {\r\n  //   setFilename(file);\r\n  //   //console.log(filename);\r\n  // };\r\n  // const unchecking = () => {\r\n  //   setFilename(\"Choose file\");\r\n  //   //console.log(filename);\r\n  // };\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n    //console.log(props.info);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIfCanceled(true);\r\n    setIsModalVisible(false);\r\n  };\r\n  const handleClose = () => {\r\n    if (ifCanceled) {\r\n    } else {\r\n      props.afterClosing();\r\n    }\r\n  };\r\n\r\n  const onFinish = (values) => {\r\n    console.log(values);\r\n    props.passedData(props.info);\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n    setTimeout(() => {\r\n      setIsModalVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n\r\n    axios\r\n      .post(\"/api/v1/jeeproutes/add_route\", values)\r\n      .then((res) => {\r\n        Modal.success({\r\n          content: \"Route Added\",\r\n          okButtonProps: {\r\n            style: {borderRadius: '50px'}\r\n          },\r\n        });\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    Modal.error({\r\n      content: \"Failure to Add Route\",\r\n      okButtonProps: {\r\n        style: {borderRadius: '50px'}\r\n      },\r\n    });\r\n    setTimeout(() => {\r\n      setIsModalVisible(true);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n    //console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button type=\"primary\" className=\"modal-button-add\" onClick={showModal}>\r\n        <span className=\"desktop-view\"><PlusOutlined /> Add Route</span>\r\n        <span className=\"mobile-view\"><PlusOutlined /></span>\r\n      </Button>\r\n\r\n      <Modal\r\n        title=\"Add Route:\"\r\n        visible={isModalVisible}\r\n        confirmLoading={confirmLoading}\r\n        onOk={onFinish}\r\n        onCancel={handleCancel}\r\n        afterClose={handleClose}\r\n        destroyOnClose={true}\r\n        footer={[\r\n          <Button key=\"back\" className=\"modal-button\"  onClick={handleCancel}>\r\n            Cancel\r\n          </Button>,\r\n          <Button\r\n            form=\"myForm\"\r\n            key=\"submit\"\r\n            htmlType=\"submit\"\r\n            type=\"primary\"\r\n            className=\"modal-button\" \r\n            loading={confirmLoading}\r\n            onClick={onFinish}\r\n          >\r\n            Add\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <Form\r\n          layout=\"vertical\"\r\n          name=\"basic\"\r\n          initialValues={{ remember: true }}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n          id=\"myForm\"\r\n        >\r\n          <Form.Item\r\n            label=\"Barangay ID\"\r\n            name=\"barangayId\"\r\n            rules={[\r\n              { required: true, message: \"Please input Route!\" },\r\n            ]}\r\n          >\r\n            <Input placeholder=\"Route\"/>\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Route\"\r\n            name=\"routeDescription\"\r\n            rules={[\r\n              { required: true, message: \"Please input Route!\" },\r\n            ]}\r\n          >\r\n            <Input placeholder=\"Route\"/>\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Point Number\"\r\n            name=\"pointNumber\"\r\n            rules={[\r\n              { required: true, message: \"Please input Route!\" },\r\n            ]}\r\n          >\r\n            <Input placeholder=\"Route\"/>\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddRoute;\r\n","C:\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\JeepneyRoute\\EditRoute.js",["452","453","454"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, Button, Form, Input } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { EditOutlined  } from \"@ant-design/icons\";\r\n\r\nfunction EditRoute(props) {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [form] = Form.useForm();\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n  const [ifCanceled, setIfCanceled] = useState(false);\r\n  const [ifChanged, setIfChanged] = useState();\r\n\r\n  const showModal = () => {\r\n    form.setFieldsValue({\r\n      id: props.info.id,\r\n      barangayId: props.info.barangayId,\r\n      pointNumber: props.info.pointNumber,\r\n      routeDescription: props.info.routeDescription\r\n    });\r\n    setIsModalVisible(true);\r\n    setIfChanged(false);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIfCanceled(true);\r\n    setIsModalVisible(false);\r\n  };\r\n  const handleClose = () => {\r\n    if (ifCanceled) {\r\n    } else {\r\n      props.afterClosing();\r\n    }\r\n  };\r\n\r\n  const onFinish = (values) => {\r\n    //console.log(ifChanged);\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n    props.passedData(props.info);\r\n\r\n    axios\r\n      .post(\"/api/v1/jeeproute/update_route\", {\r\n      id: values.id,\r\n      barangayId: values.barangayId,\r\n      pointNumber: values.pointNumber,\r\n      routeDescription: values.routeDescription\r\n      })\r\n      .then((res) => {\r\n        setTimeout(() => {\r\n          setIsModalVisible(false);\r\n          setConfirmLoading(false);\r\n        }, 2000);\r\n        {\r\n          ifChanged\r\n            ? Modal.success({\r\n                content: \"Successfully Updated Route\",\r\n                okButtonProps: {\r\n                  style: {borderRadius: '50px'}\r\n                },\r\n              })\r\n            : Modal.success({\r\n                content: \"Route is up to date\",\r\n                okButtonProps: {\r\n                  style: {borderRadius: '50px'}\r\n                },\r\n              });\r\n        }\r\n      })\r\n      .catch((error) => console.log(error));\r\n\r\n    //console.log(ifChanged);\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    Modal.error({\r\n      content: \"Failure to Update Route\",\r\n      okButtonProps: {\r\n        style: {borderRadius: '50px'}\r\n      },\r\n    });\r\n    setTimeout(() => {\r\n      setIsModalVisible(true);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n    // console.log(\"Failed:\", errorInfo);\r\n  };\r\n  const onValuesChange = (changedValues, allValues) => {\r\n    //console.log(\"Changed\", allValues, changedValues);\r\n    setIfChanged(true);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button type=\"primary\" className=\"modal-button-edit\" onClick={showModal}>\r\n        <span className=\"desktop-view\"><EditOutlined /> Edit</span>\r\n        <span className=\"mobile-view\"><EditOutlined /></span>\r\n      </Button>\r\n      <Modal\r\n        title=\"Update Route\"\r\n        confirmLoading={confirmLoading}\r\n        visible={isModalVisible}\r\n        onOk={onFinish}\r\n        onCancel={handleCancel}\r\n        afterClose={handleClose}\r\n        destroyOnClose={true}\r\n        footer={[\r\n          <Button key=\"back\" className=\"modal-button\" onClick={handleCancel}>\r\n            Cancel\r\n          </Button>,\r\n          <Button form=\"myForm\" className=\"modal-button\" htmlType=\"submit\" type=\"primary\">\r\n            Update\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <Form\r\n          layout=\"vertical\"\r\n          name=\"basic\"\r\n          form={form}\r\n          initialValues={{ remember: true }}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n          onValuesChange={onValuesChange}\r\n          id=\"myForm\"\r\n        >\r\n          <Form.Item label=\"Route ID:\" name=\"id\">\r\n            <Input disabled={true} bordered={false} />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Barangay Id:\"\r\n            name=\"barangayId\"\r\n            rules={[\r\n              { required: true, message: \"Please input Barangay Id!\" },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Point Number:\"\r\n            name=\"pointNumber\"\r\n            rules={[\r\n              { required: true, message: \"Please input Point Number!\" },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Route Description:\"\r\n            name=\"routeDescription\"\r\n            rules={[\r\n              { required: true, message: \"Ple ase input Route Description!\" },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditRoute;\r\n",{"ruleId":"455","replacedBy":"456"},{"ruleId":"457","replacedBy":"458"},{"ruleId":"459","severity":1,"message":"460","line":1,"column":17,"nodeType":"461","messageId":"462","endLine":1,"endColumn":25},{"ruleId":"459","severity":1,"message":"463","line":1,"column":27,"nodeType":"461","messageId":"462","endLine":1,"endColumn":36},{"ruleId":"459","severity":1,"message":"464","line":1,"column":50,"nodeType":"461","messageId":"462","endLine":1,"endColumn":59},{"ruleId":"459","severity":1,"message":"465","line":2,"column":8,"nodeType":"461","messageId":"462","endLine":2,"endColumn":12},{"ruleId":"459","severity":1,"message":"466","line":8,"column":3,"nodeType":"461","messageId":"462","endLine":8,"endColumn":17},{"ruleId":"459","severity":1,"message":"467","line":9,"column":3,"nodeType":"461","messageId":"462","endLine":9,"endColumn":7},{"ruleId":"459","severity":1,"message":"468","line":13,"column":8,"nodeType":"461","messageId":"462","endLine":13,"endColumn":28},{"ruleId":"459","severity":1,"message":"469","line":18,"column":10,"nodeType":"461","messageId":"462","endLine":18,"endColumn":15},{"ruleId":"459","severity":1,"message":"470","line":12,"column":20,"nodeType":"461","messageId":"462","endLine":12,"endColumn":32},{"ruleId":"471","severity":1,"message":"472","line":13,"column":5,"nodeType":"473","messageId":"474","endLine":21,"endColumn":6},{"ruleId":"475","severity":1,"message":"476","line":10,"column":68,"nodeType":"477","messageId":"478","endLine":10,"endColumn":70},{"ruleId":"479","severity":1,"message":"480","line":1,"column":1,"nodeType":"481","endLine":20,"endColumn":3},{"ruleId":"475","severity":1,"message":"476","line":10,"column":38,"nodeType":"477","messageId":"478","endLine":10,"endColumn":40},{"ruleId":"475","severity":1,"message":"476","line":16,"column":38,"nodeType":"477","messageId":"478","endLine":16,"endColumn":40},{"ruleId":"459","severity":1,"message":"482","line":21,"column":10,"nodeType":"461","messageId":"462","endLine":21,"endColumn":18},{"ruleId":"459","severity":1,"message":"483","line":22,"column":9,"nodeType":"461","messageId":"462","endLine":22,"endColumn":21},{"ruleId":"459","severity":1,"message":"484","line":27,"column":12,"nodeType":"461","messageId":"462","endLine":27,"endColumn":22},{"ruleId":"459","severity":1,"message":"485","line":14,"column":3,"nodeType":"461","messageId":"462","endLine":14,"endColumn":8},{"ruleId":"459","severity":1,"message":"486","line":18,"column":10,"nodeType":"461","messageId":"462","endLine":18,"endColumn":22},{"ruleId":"459","severity":1,"message":"487","line":22,"column":10,"nodeType":"461","messageId":"462","endLine":22,"endColumn":14},{"ruleId":"459","severity":1,"message":"488","line":23,"column":10,"nodeType":"461","messageId":"462","endLine":23,"endColumn":17},{"ruleId":"459","severity":1,"message":"489","line":23,"column":19,"nodeType":"461","messageId":"462","endLine":23,"endColumn":29},{"ruleId":"459","severity":1,"message":"490","line":25,"column":10,"nodeType":"461","messageId":"462","endLine":25,"endColumn":24},{"ruleId":"459","severity":1,"message":"491","line":25,"column":26,"nodeType":"461","messageId":"462","endLine":25,"endColumn":43},{"ruleId":"459","severity":1,"message":"492","line":27,"column":10,"nodeType":"461","messageId":"462","endLine":27,"endColumn":24},{"ruleId":"459","severity":1,"message":"493","line":27,"column":26,"nodeType":"461","messageId":"462","endLine":27,"endColumn":43},{"ruleId":"459","severity":1,"message":"494","line":28,"column":10,"nodeType":"461","messageId":"462","endLine":28,"endColumn":21},{"ruleId":"459","severity":1,"message":"495","line":30,"column":11,"nodeType":"461","messageId":"462","endLine":30,"endColumn":17},{"ruleId":"459","severity":1,"message":"496","line":31,"column":11,"nodeType":"461","messageId":"462","endLine":31,"endColumn":15},{"ruleId":"459","severity":1,"message":"497","line":11,"column":3,"nodeType":"461","messageId":"462","endLine":11,"endColumn":8},{"ruleId":"459","severity":1,"message":"498","line":30,"column":9,"nodeType":"461","messageId":"462","endLine":30,"endColumn":19},{"ruleId":"459","severity":1,"message":"497","line":2,"column":47,"nodeType":"461","messageId":"462","endLine":2,"endColumn":52},{"ruleId":"459","severity":1,"message":"499","line":7,"column":3,"nodeType":"461","messageId":"462","endLine":7,"endColumn":17},{"ruleId":"459","severity":1,"message":"500","line":8,"column":3,"nodeType":"461","messageId":"462","endLine":8,"endColumn":15},{"ruleId":"459","severity":1,"message":"501","line":9,"column":3,"nodeType":"461","messageId":"462","endLine":9,"endColumn":19},{"ruleId":"459","severity":1,"message":"502","line":14,"column":3,"nodeType":"461","messageId":"462","endLine":14,"endColumn":15},{"ruleId":"459","severity":1,"message":"503","line":17,"column":3,"nodeType":"461","messageId":"462","endLine":17,"endColumn":15},{"ruleId":"459","severity":1,"message":"495","line":26,"column":11,"nodeType":"461","messageId":"462","endLine":26,"endColumn":17},{"ruleId":"459","severity":1,"message":"504","line":31,"column":15,"nodeType":"461","messageId":"462","endLine":31,"endColumn":23},{"ruleId":"505","severity":1,"message":"506","line":35,"column":13,"nodeType":"507","endLine":35,"endColumn":68},{"ruleId":"459","severity":1,"message":"508","line":7,"column":3,"nodeType":"461","messageId":"462","endLine":7,"endColumn":6},{"ruleId":"459","severity":1,"message":"508","line":8,"column":3,"nodeType":"461","messageId":"462","endLine":8,"endColumn":6},{"ruleId":"459","severity":1,"message":"485","line":11,"column":3,"nodeType":"461","messageId":"462","endLine":11,"endColumn":8},{"ruleId":"459","severity":1,"message":"509","line":12,"column":3,"nodeType":"461","messageId":"462","endLine":12,"endColumn":8},{"ruleId":"459","severity":1,"message":"510","line":17,"column":10,"nodeType":"461","messageId":"462","endLine":17,"endColumn":17},{"ruleId":"459","severity":1,"message":"511","line":20,"column":10,"nodeType":"461","messageId":"462","endLine":20,"endColumn":14},{"ruleId":"459","severity":1,"message":"512","line":20,"column":16,"nodeType":"461","messageId":"462","endLine":20,"endColumn":23},{"ruleId":"459","severity":1,"message":"513","line":21,"column":10,"nodeType":"461","messageId":"462","endLine":21,"endColumn":21},{"ruleId":"459","severity":1,"message":"514","line":21,"column":23,"nodeType":"461","messageId":"462","endLine":21,"endColumn":37},{"ruleId":"459","severity":1,"message":"515","line":25,"column":10,"nodeType":"461","messageId":"462","endLine":25,"endColumn":20},{"ruleId":"459","severity":1,"message":"516","line":25,"column":22,"nodeType":"461","messageId":"462","endLine":25,"endColumn":35},{"ruleId":"459","severity":1,"message":"517","line":26,"column":10,"nodeType":"461","messageId":"462","endLine":26,"endColumn":16},{"ruleId":"459","severity":1,"message":"518","line":26,"column":18,"nodeType":"461","messageId":"462","endLine":26,"endColumn":27},{"ruleId":"459","severity":1,"message":"487","line":27,"column":10,"nodeType":"461","messageId":"462","endLine":27,"endColumn":14},{"ruleId":"459","severity":1,"message":"519","line":27,"column":16,"nodeType":"461","messageId":"462","endLine":27,"endColumn":23},{"ruleId":"459","severity":1,"message":"520","line":28,"column":10,"nodeType":"461","messageId":"462","endLine":28,"endColumn":20},{"ruleId":"459","severity":1,"message":"521","line":45,"column":9,"nodeType":"461","messageId":"462","endLine":45,"endColumn":17},{"ruleId":"459","severity":1,"message":"522","line":48,"column":9,"nodeType":"461","messageId":"462","endLine":48,"endColumn":17},{"ruleId":"471","severity":1,"message":"472","line":49,"column":5,"nodeType":"473","messageId":"474","endLine":65,"endColumn":6},{"ruleId":"523","severity":1,"message":"524","line":51,"column":9,"nodeType":"525","messageId":"526","endLine":63,"endColumn":10},{"ruleId":"459","severity":1,"message":"527","line":68,"column":9,"nodeType":"461","messageId":"462","endLine":68,"endColumn":17},{"ruleId":"475","severity":1,"message":"476","line":87,"column":27,"nodeType":"477","messageId":"478","endLine":87,"endColumn":29},{"ruleId":"459","severity":1,"message":"528","line":109,"column":9,"nodeType":"461","messageId":"462","endLine":109,"endColumn":23},{"ruleId":"459","severity":1,"message":"529","line":8,"column":10,"nodeType":"461","messageId":"462","endLine":8,"endColumn":20},{"ruleId":"459","severity":1,"message":"530","line":8,"column":22,"nodeType":"461","messageId":"462","endLine":8,"endColumn":35},{"ruleId":"459","severity":1,"message":"531","line":11,"column":10,"nodeType":"461","messageId":"462","endLine":11,"endColumn":17},{"ruleId":"459","severity":1,"message":"532","line":11,"column":19,"nodeType":"461","messageId":"462","endLine":11,"endColumn":29},{"ruleId":"459","severity":1,"message":"533","line":13,"column":10,"nodeType":"461","messageId":"462","endLine":13,"endColumn":19},{"ruleId":"459","severity":1,"message":"534","line":13,"column":21,"nodeType":"461","messageId":"462","endLine":13,"endColumn":33},{"ruleId":"459","severity":1,"message":"527","line":42,"column":9,"nodeType":"461","messageId":"462","endLine":42,"endColumn":17},{"ruleId":"471","severity":1,"message":"472","line":75,"column":9,"nodeType":"473","messageId":"474","endLine":89,"endColumn":10},{"ruleId":"459","severity":1,"message":"535","line":2,"column":38,"nodeType":"461","messageId":"462","endLine":2,"endColumn":44},{"ruleId":"459","severity":1,"message":"536","line":3,"column":10,"nodeType":"461","messageId":"462","endLine":3,"endColumn":24},{"ruleId":"459","severity":1,"message":"511","line":11,"column":10,"nodeType":"461","messageId":"462","endLine":11,"endColumn":14},{"ruleId":"459","severity":1,"message":"512","line":11,"column":16,"nodeType":"461","messageId":"462","endLine":11,"endColumn":23},{"ruleId":"459","severity":1,"message":"537","line":12,"column":10,"nodeType":"461","messageId":"462","endLine":12,"endColumn":18},{"ruleId":"459","severity":1,"message":"538","line":13,"column":29,"nodeType":"461","messageId":"462","endLine":13,"endColumn":49},{"ruleId":"459","severity":1,"message":"521","line":32,"column":9,"nodeType":"461","messageId":"462","endLine":32,"endColumn":17},{"ruleId":"459","severity":1,"message":"463","line":1,"column":27,"nodeType":"461","messageId":"462","endLine":1,"endColumn":36},{"ruleId":"459","severity":1,"message":"539","line":2,"column":55,"nodeType":"461","messageId":"462","endLine":2,"endColumn":65},{"ruleId":"459","severity":1,"message":"540","line":10,"column":10,"nodeType":"461","messageId":"462","endLine":10,"endColumn":18},{"ruleId":"459","severity":1,"message":"541","line":10,"column":20,"nodeType":"461","messageId":"462","endLine":10,"endColumn":31},{"ruleId":"459","severity":1,"message":"533","line":12,"column":10,"nodeType":"461","messageId":"462","endLine":12,"endColumn":19},{"ruleId":"459","severity":1,"message":"534","line":12,"column":21,"nodeType":"461","messageId":"462","endLine":12,"endColumn":33},{"ruleId":"459","severity":1,"message":"463","line":1,"column":27,"nodeType":"461","messageId":"462","endLine":1,"endColumn":36},{"ruleId":"459","severity":1,"message":"527","line":27,"column":9,"nodeType":"461","messageId":"462","endLine":27,"endColumn":17},{"ruleId":"471","severity":1,"message":"472","line":63,"column":9,"nodeType":"473","messageId":"474","endLine":77,"endColumn":10},{"ruleId":"459","severity":1,"message":"510","line":5,"column":10,"nodeType":"461","messageId":"462","endLine":5,"endColumn":17},{"ruleId":"459","severity":1,"message":"511","line":8,"column":10,"nodeType":"461","messageId":"462","endLine":8,"endColumn":14},{"ruleId":"459","severity":1,"message":"512","line":8,"column":16,"nodeType":"461","messageId":"462","endLine":8,"endColumn":23},{"ruleId":"459","severity":1,"message":"513","line":9,"column":10,"nodeType":"461","messageId":"462","endLine":9,"endColumn":21},{"ruleId":"459","severity":1,"message":"514","line":9,"column":23,"nodeType":"461","messageId":"462","endLine":9,"endColumn":37},{"ruleId":"459","severity":1,"message":"515","line":13,"column":10,"nodeType":"461","messageId":"462","endLine":13,"endColumn":20},{"ruleId":"459","severity":1,"message":"516","line":13,"column":22,"nodeType":"461","messageId":"462","endLine":13,"endColumn":35},{"ruleId":"459","severity":1,"message":"517","line":14,"column":10,"nodeType":"461","messageId":"462","endLine":14,"endColumn":16},{"ruleId":"459","severity":1,"message":"518","line":14,"column":18,"nodeType":"461","messageId":"462","endLine":14,"endColumn":27},{"ruleId":"459","severity":1,"message":"487","line":15,"column":10,"nodeType":"461","messageId":"462","endLine":15,"endColumn":14},{"ruleId":"459","severity":1,"message":"519","line":15,"column":16,"nodeType":"461","messageId":"462","endLine":15,"endColumn":23},{"ruleId":"459","severity":1,"message":"520","line":16,"column":10,"nodeType":"461","messageId":"462","endLine":16,"endColumn":20},{"ruleId":"459","severity":1,"message":"521","line":33,"column":9,"nodeType":"461","messageId":"462","endLine":33,"endColumn":17},{"ruleId":"459","severity":1,"message":"522","line":36,"column":9,"nodeType":"461","messageId":"462","endLine":36,"endColumn":17},{"ruleId":"471","severity":1,"message":"472","line":37,"column":5,"nodeType":"473","messageId":"474","endLine":53,"endColumn":6},{"ruleId":"523","severity":1,"message":"524","line":39,"column":9,"nodeType":"525","messageId":"526","endLine":51,"endColumn":10},{"ruleId":"459","severity":1,"message":"527","line":56,"column":9,"nodeType":"461","messageId":"462","endLine":56,"endColumn":17},{"ruleId":"475","severity":1,"message":"476","line":75,"column":27,"nodeType":"477","messageId":"478","endLine":75,"endColumn":29},{"ruleId":"459","severity":1,"message":"528","line":97,"column":9,"nodeType":"461","messageId":"462","endLine":97,"endColumn":23},{"ruleId":"459","severity":1,"message":"542","line":2,"column":45,"nodeType":"461","messageId":"462","endLine":2,"endColumn":49},{"ruleId":"459","severity":1,"message":"511","line":7,"column":10,"nodeType":"461","messageId":"462","endLine":7,"endColumn":14},{"ruleId":"459","severity":1,"message":"512","line":7,"column":16,"nodeType":"461","messageId":"462","endLine":7,"endColumn":23},{"ruleId":"459","severity":1,"message":"513","line":8,"column":10,"nodeType":"461","messageId":"462","endLine":8,"endColumn":21},{"ruleId":"459","severity":1,"message":"514","line":8,"column":23,"nodeType":"461","messageId":"462","endLine":8,"endColumn":37},{"ruleId":"459","severity":1,"message":"515","line":12,"column":10,"nodeType":"461","messageId":"462","endLine":12,"endColumn":20},{"ruleId":"459","severity":1,"message":"516","line":12,"column":22,"nodeType":"461","messageId":"462","endLine":12,"endColumn":35},{"ruleId":"459","severity":1,"message":"517","line":13,"column":10,"nodeType":"461","messageId":"462","endLine":13,"endColumn":16},{"ruleId":"459","severity":1,"message":"518","line":13,"column":18,"nodeType":"461","messageId":"462","endLine":13,"endColumn":27},{"ruleId":"459","severity":1,"message":"487","line":14,"column":10,"nodeType":"461","messageId":"462","endLine":14,"endColumn":14},{"ruleId":"459","severity":1,"message":"519","line":14,"column":16,"nodeType":"461","messageId":"462","endLine":14,"endColumn":23},{"ruleId":"459","severity":1,"message":"520","line":15,"column":10,"nodeType":"461","messageId":"462","endLine":15,"endColumn":20},{"ruleId":"459","severity":1,"message":"543","line":17,"column":10,"nodeType":"461","messageId":"462","endLine":17,"endColumn":14},{"ruleId":"459","severity":1,"message":"521","line":28,"column":9,"nodeType":"461","messageId":"462","endLine":28,"endColumn":17},{"ruleId":"459","severity":1,"message":"522","line":31,"column":9,"nodeType":"461","messageId":"462","endLine":31,"endColumn":17},{"ruleId":"471","severity":1,"message":"472","line":32,"column":5,"nodeType":"473","messageId":"474","endLine":48,"endColumn":6},{"ruleId":"523","severity":1,"message":"524","line":34,"column":9,"nodeType":"525","messageId":"526","endLine":46,"endColumn":10},{"ruleId":"459","severity":1,"message":"527","line":51,"column":9,"nodeType":"461","messageId":"462","endLine":51,"endColumn":17},{"ruleId":"475","severity":1,"message":"476","line":72,"column":27,"nodeType":"477","messageId":"478","endLine":72,"endColumn":29},{"ruleId":"459","severity":1,"message":"528","line":94,"column":9,"nodeType":"461","messageId":"462","endLine":94,"endColumn":23},{"ruleId":"459","severity":1,"message":"508","line":8,"column":3,"nodeType":"461","messageId":"462","endLine":8,"endColumn":6},{"ruleId":"459","severity":1,"message":"485","line":11,"column":3,"nodeType":"461","messageId":"462","endLine":11,"endColumn":8},{"ruleId":"459","severity":1,"message":"509","line":12,"column":3,"nodeType":"461","messageId":"462","endLine":12,"endColumn":8},{"ruleId":"459","severity":1,"message":"510","line":17,"column":10,"nodeType":"461","messageId":"462","endLine":17,"endColumn":17},{"ruleId":"459","severity":1,"message":"511","line":20,"column":10,"nodeType":"461","messageId":"462","endLine":20,"endColumn":14},{"ruleId":"459","severity":1,"message":"512","line":20,"column":16,"nodeType":"461","messageId":"462","endLine":20,"endColumn":23},{"ruleId":"459","severity":1,"message":"513","line":21,"column":10,"nodeType":"461","messageId":"462","endLine":21,"endColumn":21},{"ruleId":"459","severity":1,"message":"514","line":21,"column":23,"nodeType":"461","messageId":"462","endLine":21,"endColumn":37},{"ruleId":"459","severity":1,"message":"515","line":25,"column":10,"nodeType":"461","messageId":"462","endLine":25,"endColumn":20},{"ruleId":"459","severity":1,"message":"516","line":25,"column":22,"nodeType":"461","messageId":"462","endLine":25,"endColumn":35},{"ruleId":"459","severity":1,"message":"517","line":26,"column":10,"nodeType":"461","messageId":"462","endLine":26,"endColumn":16},{"ruleId":"459","severity":1,"message":"518","line":26,"column":18,"nodeType":"461","messageId":"462","endLine":26,"endColumn":27},{"ruleId":"459","severity":1,"message":"487","line":27,"column":10,"nodeType":"461","messageId":"462","endLine":27,"endColumn":14},{"ruleId":"459","severity":1,"message":"519","line":27,"column":16,"nodeType":"461","messageId":"462","endLine":27,"endColumn":23},{"ruleId":"459","severity":1,"message":"520","line":28,"column":10,"nodeType":"461","messageId":"462","endLine":28,"endColumn":20},{"ruleId":"459","severity":1,"message":"521","line":45,"column":9,"nodeType":"461","messageId":"462","endLine":45,"endColumn":17},{"ruleId":"459","severity":1,"message":"522","line":48,"column":9,"nodeType":"461","messageId":"462","endLine":48,"endColumn":17},{"ruleId":"471","severity":1,"message":"472","line":49,"column":5,"nodeType":"473","messageId":"474","endLine":65,"endColumn":6},{"ruleId":"523","severity":1,"message":"524","line":51,"column":9,"nodeType":"525","messageId":"526","endLine":63,"endColumn":10},{"ruleId":"459","severity":1,"message":"527","line":68,"column":9,"nodeType":"461","messageId":"462","endLine":68,"endColumn":17},{"ruleId":"475","severity":1,"message":"476","line":87,"column":27,"nodeType":"477","messageId":"478","endLine":87,"endColumn":29},{"ruleId":"459","severity":1,"message":"528","line":109,"column":9,"nodeType":"461","messageId":"462","endLine":109,"endColumn":23},{"ruleId":"459","severity":1,"message":"535","line":2,"column":38,"nodeType":"461","messageId":"462","endLine":2,"endColumn":44},{"ruleId":"459","severity":1,"message":"497","line":2,"column":46,"nodeType":"461","messageId":"462","endLine":2,"endColumn":51},{"ruleId":"459","severity":1,"message":"531","line":10,"column":10,"nodeType":"461","messageId":"462","endLine":10,"endColumn":17},{"ruleId":"459","severity":1,"message":"532","line":10,"column":19,"nodeType":"461","messageId":"462","endLine":10,"endColumn":29},{"ruleId":"459","severity":1,"message":"511","line":11,"column":10,"nodeType":"461","messageId":"462","endLine":11,"endColumn":14},{"ruleId":"459","severity":1,"message":"512","line":11,"column":16,"nodeType":"461","messageId":"462","endLine":11,"endColumn":23},{"ruleId":"459","severity":1,"message":"544","line":13,"column":10,"nodeType":"461","messageId":"462","endLine":13,"endColumn":27},{"ruleId":"459","severity":1,"message":"521","line":15,"column":9,"nodeType":"461","messageId":"462","endLine":15,"endColumn":17},{"ruleId":"459","severity":1,"message":"545","line":19,"column":9,"nodeType":"461","messageId":"462","endLine":19,"endColumn":19},{"ruleId":"459","severity":1,"message":"522","line":23,"column":9,"nodeType":"461","messageId":"462","endLine":23,"endColumn":17},{"ruleId":"475","severity":1,"message":"476","line":24,"column":18,"nodeType":"477","messageId":"478","endLine":24,"endColumn":20},{"ruleId":"459","severity":1,"message":"529","line":8,"column":10,"nodeType":"461","messageId":"462","endLine":8,"endColumn":20},{"ruleId":"459","severity":1,"message":"530","line":8,"column":22,"nodeType":"461","messageId":"462","endLine":8,"endColumn":35},{"ruleId":"459","severity":1,"message":"531","line":11,"column":10,"nodeType":"461","messageId":"462","endLine":11,"endColumn":17},{"ruleId":"459","severity":1,"message":"532","line":11,"column":19,"nodeType":"461","messageId":"462","endLine":11,"endColumn":29},{"ruleId":"459","severity":1,"message":"533","line":13,"column":10,"nodeType":"461","messageId":"462","endLine":13,"endColumn":19},{"ruleId":"459","severity":1,"message":"534","line":13,"column":21,"nodeType":"461","messageId":"462","endLine":13,"endColumn":33},{"ruleId":"455","replacedBy":"546"},{"ruleId":"457","replacedBy":"547"},{"ruleId":"459","severity":1,"message":"535","line":2,"column":38,"nodeType":"461","messageId":"462","endLine":2,"endColumn":44},{"ruleId":"459","severity":1,"message":"529","line":8,"column":10,"nodeType":"461","messageId":"462","endLine":8,"endColumn":20},{"ruleId":"459","severity":1,"message":"530","line":8,"column":22,"nodeType":"461","messageId":"462","endLine":8,"endColumn":35},{"ruleId":"459","severity":1,"message":"548","line":11,"column":10,"nodeType":"461","messageId":"462","endLine":11,"endColumn":19},{"ruleId":"459","severity":1,"message":"549","line":11,"column":21,"nodeType":"461","messageId":"462","endLine":11,"endColumn":33},{"ruleId":"459","severity":1,"message":"511","line":12,"column":10,"nodeType":"461","messageId":"462","endLine":12,"endColumn":14},{"ruleId":"459","severity":1,"message":"512","line":12,"column":16,"nodeType":"461","messageId":"462","endLine":12,"endColumn":23},{"ruleId":"459","severity":1,"message":"537","line":13,"column":10,"nodeType":"461","messageId":"462","endLine":13,"endColumn":18},{"ruleId":"459","severity":1,"message":"544","line":14,"column":10,"nodeType":"461","messageId":"462","endLine":14,"endColumn":27},{"ruleId":"459","severity":1,"message":"538","line":14,"column":29,"nodeType":"461","messageId":"462","endLine":14,"endColumn":49},{"ruleId":"459","severity":1,"message":"521","line":21,"column":9,"nodeType":"461","messageId":"462","endLine":21,"endColumn":17},{"ruleId":"459","severity":1,"message":"529","line":8,"column":10,"nodeType":"461","messageId":"462","endLine":8,"endColumn":20},{"ruleId":"459","severity":1,"message":"530","line":8,"column":22,"nodeType":"461","messageId":"462","endLine":8,"endColumn":35},{"ruleId":"459","severity":1,"message":"548","line":11,"column":10,"nodeType":"461","messageId":"462","endLine":11,"endColumn":19},{"ruleId":"459","severity":1,"message":"549","line":11,"column":21,"nodeType":"461","messageId":"462","endLine":11,"endColumn":33},{"ruleId":"459","severity":1,"message":"533","line":13,"column":10,"nodeType":"461","messageId":"462","endLine":13,"endColumn":19},{"ruleId":"459","severity":1,"message":"534","line":13,"column":21,"nodeType":"461","messageId":"462","endLine":13,"endColumn":33},{"ruleId":"459","severity":1,"message":"463","line":1,"column":27,"nodeType":"461","messageId":"462","endLine":1,"endColumn":36},{"ruleId":"459","severity":1,"message":"548","line":12,"column":10,"nodeType":"461","messageId":"462","endLine":12,"endColumn":19},{"ruleId":"459","severity":1,"message":"549","line":12,"column":21,"nodeType":"461","messageId":"462","endLine":12,"endColumn":33},{"ruleId":"459","severity":1,"message":"527","line":25,"column":9,"nodeType":"461","messageId":"462","endLine":25,"endColumn":17},{"ruleId":"471","severity":1,"message":"472","line":58,"column":9,"nodeType":"473","messageId":"474","endLine":72,"endColumn":10},{"ruleId":"459","severity":1,"message":"535","line":2,"column":38,"nodeType":"461","messageId":"462","endLine":2,"endColumn":44},{"ruleId":"459","severity":1,"message":"497","line":2,"column":46,"nodeType":"461","messageId":"462","endLine":2,"endColumn":51},{"ruleId":"459","severity":1,"message":"550","line":10,"column":10,"nodeType":"461","messageId":"462","endLine":10,"endColumn":19},{"ruleId":"459","severity":1,"message":"551","line":10,"column":21,"nodeType":"461","messageId":"462","endLine":10,"endColumn":33},{"ruleId":"459","severity":1,"message":"543","line":11,"column":10,"nodeType":"461","messageId":"462","endLine":11,"endColumn":14},{"ruleId":"459","severity":1,"message":"463","line":1,"column":27,"nodeType":"461","messageId":"462","endLine":1,"endColumn":36},{"ruleId":"459","severity":1,"message":"527","line":24,"column":9,"nodeType":"461","messageId":"462","endLine":24,"endColumn":17},{"ruleId":"471","severity":1,"message":"472","line":57,"column":9,"nodeType":"473","messageId":"474","endLine":71,"endColumn":10},"no-native-reassign",["552"],"no-negated-in-lhs",["553"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Component' is defined but never used.","'logo' is defined but never used.","'ProtectedRoute' is defined but never used.","'Link' is defined but never used.","'AdminProtectedRoutes' is defined but never used.","'Admin' is defined but never used.","'errorMessage' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'selected' is assigned a value but never used.","'clickSideBar' is assigned a value but never used.","'getContent' is defined but never used.","'Radio' is defined but never used.","'triggerFocus' is defined but never used.","'info' is assigned a value but never used.","'counter' is assigned a value but never used.","'setCounter' is assigned a value but never used.","'assignedJeepId' is assigned a value but never used.","'setAssignedJeepId' is assigned a value but never used.","'jeepneyDrivers' is assigned a value but never used.","'setJeepneyDrivers' is assigned a value but never used.","'selectedKey' is assigned a value but never used.","'Search' is assigned a value but never used.","'Text' is assigned a value but never used.","'Space' is defined but never used.","'imageStyle' is assigned a value but never used.","'LogoutOutlined' is defined but never used.","'HomeOutlined' is defined but never used.","'FundViewOutlined' is defined but never used.","'EditOutlined' is defined but never used.","'PlusOutlined' is defined but never used.","'setValue' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'value' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","'Col' is defined but never used.","'Input' is defined but never used.","'Content' is defined but never used.","'file' is assigned a value but never used.","'setFile' is assigned a value but never used.","'imageStatus' is assigned a value but never used.","'setImageStatus' is assigned a value but never used.","'fetchImage' is assigned a value but never used.","'setFetchImage' is assigned a value but never used.","'images' is assigned a value but never used.","'setImages' is assigned a value but never used.","'setInfo' is assigned a value but never used.","'ifCanceled' is assigned a value but never used.","'checking' is assigned a value but never used.","'viewFile' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'handleOk' is assigned a value but never used.","'onFinishFailed' is assigned a value but never used.","'modalValue' is assigned a value but never used.","'setModalValue' is assigned a value but never used.","'drivers' is assigned a value but never used.","'setDrivers' is assigned a value but never used.","'imagePath' is assigned a value but never used.","'setImagePath' is assigned a value but never used.","'Upload' is defined but never used.","'UploadOutlined' is defined but never used.","'filename' is assigned a value but never used.","'setUploadedImagePath' is assigned a value but never used.","'Typography' is defined but never used.","'jeepneys' is assigned a value but never used.","'setJeepneys' is assigned a value but never used.","'List' is defined but never used.","'form' is assigned a value but never used.","'uploadedImagePath' is assigned a value but never used.","'unchecking' is assigned a value but never used.",["552"],["553"],"'barangays' is assigned a value but never used.","'setBarangays' is assigned a value but never used.","'routeList' is assigned a value but never used.","'setRouteList' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]