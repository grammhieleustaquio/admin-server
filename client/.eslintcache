[{"C:\\Users\\CORNETTO\\Desktop\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\index.js":"1","C:\\Users\\CORNETTO\\Desktop\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\reportWebVitals.js":"2","C:\\Users\\CORNETTO\\Desktop\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\App.js":"3","C:\\Users\\CORNETTO\\Desktop\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\GlobalContext\\AuthContext.js":"4","C:\\Users\\CORNETTO\\Desktop\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\views\\JeepneysTableListContent.js":"5","C:\\Users\\CORNETTO\\Desktop\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\views\\BarangaysTableListContent.js":"6","C:\\Users\\CORNETTO\\Desktop\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\views\\DriversTableListContent.js":"7","C:\\Users\\CORNETTO\\Desktop\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\GlobalReducer\\AuthReducer.js":"8","C:\\Users\\CORNETTO\\Desktop\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\views\\Login.js":"9","C:\\Users\\CORNETTO\\Desktop\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\ProtectedRoutes\\AdminProtectedRoutes.js":"10","C:\\Users\\CORNETTO\\Desktop\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\ProtectedRoutes\\LoginProtectedRoutes.js":"11","C:\\Users\\CORNETTO\\Desktop\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\views\\AdminDashboard.js":"12","C:\\Users\\CORNETTO\\Desktop\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\views\\Register.js":"13","C:\\Users\\CORNETTO\\Desktop\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\ProtectedRoutes\\MainProtectedRoutes.js":"14","C:\\Users\\CORNETTO\\Desktop\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\Layout\\AdminLayout.js":"15","C:\\Users\\CORNETTO\\Desktop\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\views\\index.js":"16","C:\\Users\\CORNETTO\\Desktop\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\views\\Imaged.js":"17","C:\\Users\\CORNETTO\\Desktop\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\DriversTableList\\index.js":"18","C:\\Users\\CORNETTO\\Desktop\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\views\\Admin.js":"19","C:\\Users\\CORNETTO\\Desktop\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\BarangaysTableList\\index.js":"20","C:\\Users\\CORNETTO\\Desktop\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\JeepneysTableList\\index.js":"21","C:\\Users\\CORNETTO\\Desktop\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\Dashboard\\index.js":"22","C:\\Users\\CORNETTO\\Desktop\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\DriversTableList\\DriversTableList.js":"23","C:\\Users\\CORNETTO\\Desktop\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\BarangaysTableList\\BarangaysTableList.js":"24","C:\\Users\\CORNETTO\\Desktop\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\JeepneysTableList\\JeepneysTableList.js":"25","C:\\Users\\CORNETTO\\Desktop\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\Dashboard\\Dashboard.js":"26","C:\\Users\\CORNETTO\\Desktop\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\JeepneysTableList\\AddJeepneyModal.js":"27","C:\\Users\\CORNETTO\\Desktop\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\DriversTableList\\AddDriverModal.js":"28","C:\\Users\\CORNETTO\\Desktop\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\DriversTableList\\DriversInfoModal.js":"29","C:\\Users\\CORNETTO\\Desktop\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\BarangaysTableList\\BarangaysInfoModal.js":"30","C:\\Users\\CORNETTO\\Desktop\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\BarangaysTableList\\AddBarangayModal.js":"31","C:\\Users\\CORNETTO\\Desktop\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\BarangaysTableList\\EditBarangayModal.js":"32","C:\\Users\\CORNETTO\\Desktop\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\BarangaysTableList\\AddBarangayImageModal.js":"33","C:\\Users\\CORNETTO\\Desktop\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\JeepneysTableList\\JeepneysInfoModal.js":"34","C:\\Users\\CORNETTO\\Desktop\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\DriversTableList\\EditDriverModal.js":"35","C:\\Users\\CORNETTO\\Desktop\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\JeepneysTableList\\EditJeepneyModal.js":"36","C:\\Users\\CORNETTO\\Desktop\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\DriversTableList\\AddDriverImageModal.js":"37","C:\\Users\\CORNETTO\\Desktop\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\JeepneysTableList\\AddJeepneyImageModal.js":"38","C:\\Users\\CORNETTO\\Desktop\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\views\\UsersTableListContent.js":"39","C:\\Users\\CORNETTO\\Desktop\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\UsersTableList\\index.js":"40","C:\\Users\\CORNETTO\\Desktop\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\UsersTableList\\UsersTableList.js":"41"},{"size":653,"mtime":1611921176403,"results":"42","hashOfConfig":"43"},{"size":375,"mtime":1611921176403,"results":"44","hashOfConfig":"43"},{"size":2842,"mtime":1612699590432,"results":"45","hashOfConfig":"43"},{"size":1906,"mtime":1612674517057,"results":"46","hashOfConfig":"43"},{"size":442,"mtime":1612699767345,"results":"47","hashOfConfig":"43"},{"size":427,"mtime":1611987195571,"results":"48","hashOfConfig":"43"},{"size":417,"mtime":1611987532843,"results":"49","hashOfConfig":"43"},{"size":447,"mtime":1612442736640,"results":"50","hashOfConfig":"43"},{"size":2581,"mtime":1612674517150,"results":"51","hashOfConfig":"43"},{"size":636,"mtime":1611921176380,"results":"52","hashOfConfig":"43"},{"size":609,"mtime":1611921176380,"results":"53","hashOfConfig":"43"},{"size":380,"mtime":1612675300891,"results":"54","hashOfConfig":"43"},{"size":3988,"mtime":1612674517166,"results":"55","hashOfConfig":"43"},{"size":688,"mtime":1612674517135,"results":"56","hashOfConfig":"43"},{"size":2650,"mtime":1612700228304,"results":"57","hashOfConfig":"43"},{"size":48,"mtime":1611921176418,"results":"58","hashOfConfig":"43"},{"size":287,"mtime":1612675121154,"results":"59","hashOfConfig":"43"},{"size":192,"mtime":1611921176370,"results":"60","hashOfConfig":"43"},{"size":1104,"mtime":1612674517135,"results":"61","hashOfConfig":"43"},{"size":202,"mtime":1611921176360,"results":"62","hashOfConfig":"43"},{"size":135,"mtime":1612444419879,"results":"63","hashOfConfig":"43"},{"size":157,"mtime":1612674517026,"results":"64","hashOfConfig":"43"},{"size":3839,"mtime":1612697775153,"results":"65","hashOfConfig":"43"},{"size":3611,"mtime":1612681914273,"results":"66","hashOfConfig":"43"},{"size":3811,"mtime":1612698394072,"results":"67","hashOfConfig":"43"},{"size":116,"mtime":1612674517026,"results":"68","hashOfConfig":"43"},{"size":5347,"mtime":1612697315975,"results":"69","hashOfConfig":"43"},{"size":6183,"mtime":1612694401552,"results":"70","hashOfConfig":"43"},{"size":5567,"mtime":1612698209508,"results":"71","hashOfConfig":"43"},{"size":5178,"mtime":1612694668419,"results":"72","hashOfConfig":"43"},{"size":4442,"mtime":1612682355720,"results":"73","hashOfConfig":"43"},{"size":4637,"mtime":1612693347051,"results":"74","hashOfConfig":"43"},{"size":6332,"mtime":1612694992967,"results":"75","hashOfConfig":"43"},{"size":5122,"mtime":1612698657480,"results":"76","hashOfConfig":"43"},{"size":5367,"mtime":1612695110334,"results":"77","hashOfConfig":"43"},{"size":5202,"mtime":1612697211088,"results":"78","hashOfConfig":"43"},{"size":6363,"mtime":1612698007323,"results":"79","hashOfConfig":"43"},{"size":6206,"mtime":1612698530654,"results":"80","hashOfConfig":"43"},{"size":409,"mtime":1612700021679,"results":"81","hashOfConfig":"43"},{"size":132,"mtime":1612700044610,"results":"82","hashOfConfig":"43"},{"size":3009,"mtime":1612700368856,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"3vveri",{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"86"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"86"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"86"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"86"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"86"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"86"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"86"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"86"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"86"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"86"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"86"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"86"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"86"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"86"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"86"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"86"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"86"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"86"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"86"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"86"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\CORNETTO\\Desktop\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\index.js",[],["187","188"],"C:\\Users\\CORNETTO\\Desktop\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\reportWebVitals.js",[],"C:\\Users\\CORNETTO\\Desktop\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\App.js",["189","190","191","192","193","194","195","196"],"C:\\Users\\CORNETTO\\Desktop\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\GlobalContext\\AuthContext.js",[],"C:\\Users\\CORNETTO\\Desktop\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\views\\JeepneysTableListContent.js",[],"C:\\Users\\CORNETTO\\Desktop\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\views\\BarangaysTableListContent.js",[],"C:\\Users\\CORNETTO\\Desktop\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\views\\DriversTableListContent.js",[],"C:\\Users\\CORNETTO\\Desktop\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\GlobalReducer\\AuthReducer.js",["197"],"export default (state, action) => {\r\n  switch (action.type) {\r\n    case \"LOAD_TOKEN\":\r\n      return {\r\n        ...state,\r\n        secureToken: action.secureToken,\r\n        userData: action.userData,\r\n        isAuthenticated: true,\r\n        isLoading: false,\r\n      };\r\n\r\n    case \"LOADING\":\r\n      return { ...state, isLoading: false };\r\n\r\n    case \"LOAD_USER_DATA\":\r\n      return { ...state };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n","C:\\Users\\CORNETTO\\Desktop\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\views\\Login.js",["198"],"import React, { useContext } from \"react\";\r\nimport { Form, Input, Button, Card, Row, Col, Typography } from \"antd\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { AuthContext } from \".././components/GlobalContext/AuthContext\";\r\nimport Imaged from \"./Imaged\";\r\nconst { Title } = Typography;\r\n\r\nfunction Login({ history }) {\r\n  let Auth = useContext(AuthContext);\r\n\r\n  const onFinish = async (values) => {\r\n    let { success, errorMessage } = await Auth.authenticate(values);\r\n    console.log(success);\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  return (\r\n    <div className=\"loginCard\">\r\n      <Row\r\n        type=\"flex\"\r\n        justify=\"center\"\r\n        align=\"middle\"\r\n        style={{ minHeight: \"80vh\" }}\r\n      >\r\n        <Col>\r\n          <Card\r\n            title={<Title level={2}>Retrack ADMIN</Title>}\r\n            className=\"loginCardStyle\"\r\n          >\r\n            <cardBody>\r\n              <Imaged />\r\n              <Form\r\n                layout=\"vertical\"\r\n                name=\"basic\"\r\n                initialValues={{ remember: true }}\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n              >\r\n                <Form.Item\r\n                  label=\"Email:\"\r\n                  name=\"email\"\r\n                  rules={[\r\n                    {\r\n                      type: \"email\",\r\n                      message: \"The input is not valid E-mail!\",\r\n                    },\r\n                    { required: true, message: \"Please input your Email!\" },\r\n                  ]}\r\n                >\r\n                  <Input />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  label=\"Password:\"\r\n                  name=\"password\"\r\n                  rules={[\r\n                    { required: true, message: \"Please input your password!\" },\r\n                  ]}\r\n                >\r\n                  <Input.Password />\r\n                </Form.Item>\r\n                <Form.Item>\r\n                  <a style={{ float: \"right\" }} href=\"/register\">\r\n                    Create an Account?\r\n                  </a>\r\n                </Form.Item>\r\n                <Button\r\n                  type=\"primary\"\r\n                  htmlType=\"submit\"\r\n                  shape=\"round\"\r\n                  className=\"form-button\"\r\n                >\r\n                  LOGIN\r\n                </Button>\r\n              </Form>\r\n            </cardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Login);\r\n","C:\\Users\\CORNETTO\\Desktop\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\ProtectedRoutes\\AdminProtectedRoutes.js",["199"],"import React from \"react\";\r\nimport { Route, Redirect, withRouter } from \"react-router-dom\";\r\n\r\nfunction AdminProtectedRoute({ component: Component, Auth, history, res }) {\r\n  console.log(Auth);\r\n  return (\r\n    <Route\r\n      {...res}\r\n      render={(props) =>\r\n        Auth.state.isAuthenticated && Auth.state.userData.myStatus == \"home\" ? (\r\n          <Component Auth={Auth} />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/login\",\r\n              state: { from: props.location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default withRouter(AdminProtectedRoute);\r\n","C:\\Users\\CORNETTO\\Desktop\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\ProtectedRoutes\\LoginProtectedRoutes.js",["200"],"import React from \"react\";\r\nimport { Route, Redirect, withRouter } from \"react-router-dom\";\r\n\r\nfunction LoginProtectedRoutes({ component: Component, Auth, history, res }) {\r\n  return (\r\n    <Route\r\n      {...res}\r\n      render={(props) =>\r\n        Auth.state.isAuthenticated &&\r\n        Auth.state.userData.myStatus == \"admin\" ? (\r\n          <Redirect\r\n            to={{\r\n              pathname: `/`,\r\n              state: { from: props.location },\r\n            }}\r\n          />\r\n        ) : (\r\n          <Component />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default withRouter(LoginProtectedRoutes);\r\n","C:\\Users\\CORNETTO\\Desktop\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\views\\AdminDashboard.js",[],"C:\\Users\\CORNETTO\\Desktop\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\views\\Register.js",[],"C:\\Users\\CORNETTO\\Desktop\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\ProtectedRoutes\\MainProtectedRoutes.js",["201"],"import React from \"react\";\r\nimport { Route, Redirect, withRouter } from \"react-router-dom\";\r\n\r\nfunction MainProtectedRoutes({\r\n  layout: Layout,\r\n  component: Component,\r\n  Auth,\r\n  history,\r\n  res,\r\n}) {\r\n  return (\r\n    <Route\r\n      {...res}\r\n      render={(props) =>\r\n        Auth.state.isAuthenticated &&\r\n        Auth.state.userData.myStatus == \"admin\" ? (\r\n          <Layout>\r\n            <Component />\r\n          </Layout>\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/login\",\r\n              state: { from: props.location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default withRouter(MainProtectedRoutes);\r\n","C:\\Users\\CORNETTO\\Desktop\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\Layout\\AdminLayout.js",["202","203"],"C:\\Users\\CORNETTO\\Desktop\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\views\\index.js",[],"C:\\Users\\CORNETTO\\Desktop\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\views\\Imaged.js",[],"C:\\Users\\CORNETTO\\Desktop\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\DriversTableList\\index.js",[],"C:\\Users\\CORNETTO\\Desktop\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\views\\Admin.js",["204","205","206","207"],"import React, { Suspense, useState, useEffect } from \"react\";\r\nimport \"../App.css\";\r\n// import Dashboard from \"./Dashboard\"\r\n// import JeepneyDasboard from \"./JeepneyDasboard\"\r\n// import BarangayDashboard from \"./BarangayDashboard\"\r\n// import UploadDashboard from \"./UploadDashboard\"\r\n// import DriversTableListContent from \"./DriversTableListContent\"\r\n// import BarangaysTableListContent from \"./BarangaysTableListContent\"\r\n\r\n// import { Layout, Menu } from \"antd\"\r\n// import {\r\n//   UploadOutlined,\r\n//   UserOutlined,\r\n//   VideoCameraOutlined,\r\n// } from \"@ant-design/icons\"\r\n// import Imaged from \"./Imaged\"\r\n\r\n// const { Header, Content, Footer, Sider } = Layout\r\n\r\nfunction Admin() {\r\n  const [selected, setSelected] = useState(\"\");\r\n  const clickSideBar = (selectedMenuItem) => {\r\n    //console.log(selectedMenuItem);\r\n    setSelected(selectedMenuItem);\r\n  };\r\n\r\n  function getContent(selected) {\r\n    return <div></div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Suspense fallback={<h1>LOADING</h1>}>\r\n        <h1>this is admin</h1>\r\n      </Suspense>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Admin;\r\n","C:\\Users\\CORNETTO\\Desktop\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\BarangaysTableList\\index.js",[],"C:\\Users\\CORNETTO\\Desktop\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\JeepneysTableList\\index.js",[],"C:\\Users\\CORNETTO\\Desktop\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\Dashboard\\index.js",[],"C:\\Users\\CORNETTO\\Desktop\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\DriversTableList\\DriversTableList.js",["208","209","210"],"import React, { Suspense, useEffect, useState } from \"react\";\r\nimport { Table, Tag, Space, Input, Row, Col, Button, Divider } from \"antd\";\r\nimport axios from \"axios\";\r\nimport Column from \"antd/lib/table/Column\";\r\nimport ColumnGroup from \"antd/lib/table/ColumnGroup\";\r\nimport DriversInfoModal from \"./DriversInfoModal\";\r\nimport AddDriverModal from \"./AddDriverModal\";\r\nimport AddDriverImageModal from \"./AddDriverImageModal\";\r\nimport EditDriverModal from \"./EditDriverModal\";\r\n\r\nfunction DriversTableList() {\r\n  const [drivers, setDrivers] = useState([]);\r\n  const { Search } = Input;\r\n  const [dataFromModal, setDataFromModal] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/api/v1/drivers/\")\r\n      .then((res) => {\r\n        // console.log(res);\r\n        let data = res.data;\r\n        setDrivers(data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }, []);\r\n\r\n  const onSearch = (value) => {\r\n    axios\r\n      .post(\"/api/v1/drivers/search_drivers\", { value: value })\r\n      .then((_res) => {\r\n        console.log(_res);\r\n        let data = _res.data;\r\n        setDrivers(data);\r\n        //console.log(\"success\");\r\n      });\r\n\r\n    //console.log(value);\r\n  };\r\n\r\n  const modalClosed = () => {\r\n    console.log(\"Passed data from modal\", dataFromModal);\r\n    axios.get(\"/api/v1/drivers/\").then((res) => {\r\n      //console.log(res);\r\n\r\n      let data = res.data;\r\n      setDrivers(data);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Row justify=\"space-between\">\r\n        <Col span={4}>\r\n          <Space direction=\"vertical\">\r\n            <Search\r\n              placeholder=\"Search Drivers\"\r\n              onSearch={onSearch}\r\n              allowClear={true}\r\n              enterButton\r\n            />\r\n          </Space>\r\n        </Col>\r\n        <Col span={4}>\r\n          <AddDriverModal\r\n            info={\"\"}\r\n            passedData={setDataFromModal}\r\n            afterClosing={modalClosed}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Divider orientation=\"center\">List of Drivers</Divider>\r\n      <Row>\r\n        <Table dataSource={drivers} scroll={{ x: 1000, y: 500 }} sticky>\r\n          {/* <ColumnGroup title=\"Id\" dataIndex=\"id\" key=\"id\"></ColumnGroup> */}\r\n          {/* <ColumnGroup title=\"Name\" key=\"name\"> */}\r\n          <Column\r\n            title=\"Firstname\"\r\n            dataIndex=\"firstName\"\r\n            key=\"firstName\"\r\n          ></Column>\r\n          <Column\r\n            title=\"Middlename\"\r\n            dataIndex=\"middleName\"\r\n            key=\"middleName\"\r\n          ></Column>\r\n          <Column title=\"Lastname\" dataIndex=\"lastName\" key=\"lastName\"></Column>\r\n          {/* </ColumnGroup> */}\r\n          <ColumnGroup\r\n            title=\"Contact\"\r\n            dataIndex=\"contactNumber\"\r\n            key=\"contactNumber\"\r\n          ></ColumnGroup>\r\n          <ColumnGroup\r\n            title=\"Address\"\r\n            dataIndex=\"address\"\r\n            key=\"address\"\r\n          ></ColumnGroup>\r\n          <ColumnGroup\r\n            title=\"Email\"\r\n            dataIndex=\"email\"\r\n            key=\"email\"\r\n          ></ColumnGroup>\r\n          <ColumnGroup\r\n            title=\"Actions\"\r\n            key=\"actions\"\r\n            fixed=\"right\"\r\n            width=\"35vh\"\r\n            render={(value) => (\r\n              <Space>\r\n                <DriversInfoModal\r\n                  info={value}\r\n                  passedData={setDataFromModal}\r\n                  afterClosing={modalClosed}\r\n                />\r\n                <EditDriverModal\r\n                  info={value}\r\n                  passedData={setDataFromModal}\r\n                  afterClosing={modalClosed}\r\n                />\r\n                <AddDriverImageModal info={value} />\r\n              </Space>\r\n            )}\r\n          ></ColumnGroup>\r\n        </Table>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DriversTableList;\r\n","C:\\Users\\CORNETTO\\Desktop\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\BarangaysTableList\\BarangaysTableList.js",["211","212","213"],"import React, { Suspense, useEffect, useState } from \"react\";\r\nimport { Table, Tag, Space, Input, Row, Col, Button, Divider } from \"antd\";\r\nimport axios from \"axios\";\r\nimport Column from \"antd/lib/table/Column\";\r\nimport ColumnGroup from \"antd/lib/table/ColumnGroup\";\r\nimport BarangaysInfoModal from \"./BarangaysInfoModal\";\r\nimport AddBarangayModal from \"./AddBarangayModal\";\r\nimport EditBarangayModal from \"./EditBarangayModal\";\r\nimport AddBarangayImageModal from \"./AddBarangayImageModal\";\r\n\r\nfunction BarangaysTableList() {\r\n  const [barangays, setBarangays] = useState([]);\r\n  const { Search } = Input;\r\n  const [dataFromModal, setDataFromModal] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/api/v1/barangays/search_all_barangays\")\r\n      .then((res) => {\r\n        // console.log(res);\r\n\r\n        let data = res.data;\r\n        setBarangays(data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }, []);\r\n\r\n  const onSearch = (value) => {\r\n    axios\r\n      .post(\"/api/v1/barangays/search_barangays\", { value: value })\r\n      .then((_res) => {\r\n        console.log(_res);\r\n        let data = _res.data;\r\n        setBarangays(data);\r\n        console.log(\"success\");\r\n      });\r\n\r\n    //console.log(value);\r\n  };\r\n\r\n  const modalClosed = () => {\r\n    console.log(\"Passed data from modal\", dataFromModal);\r\n    axios.get(\"/api/v1/barangays/search_all_barangays\").then((res) => {\r\n      //console.log(res);\r\n      let data = res.data;\r\n      setBarangays(data);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Row justify=\"space-between\">\r\n        <Col span={4}>\r\n          <Space direction=\"vertical\">\r\n            <Search\r\n              placeholder=\"Search Barangay\"\r\n              onSearch={onSearch}\r\n              allowClear={true}\r\n              enterButton\r\n            />\r\n          </Space>\r\n        </Col>\r\n        <Col span={4}>\r\n          <AddBarangayModal\r\n            info={\"\"}\r\n            passedData={setDataFromModal}\r\n            afterClosing={modalClosed}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Divider orientation=\"center\">List of Barangays</Divider>\r\n      <Row>\r\n        <Table dataSource={barangays} scroll={{ x: 1000, y: 500 }} sticky>\r\n          {/* <ColumnGroup title=\"Id\" dataIndex=\"id\" key=\"id\"></ColumnGroup> */}\r\n          {/* <ColumnGroup title=\"Name\" key=\"name\"> */}\r\n          <Column\r\n            title=\"Barangay Name\"\r\n            dataIndex=\"barangayName\"\r\n            key=\"barangayName\"\r\n          ></Column>\r\n          {/* </ColumnGroup> */}\r\n          <ColumnGroup\r\n            title=\"Location\"\r\n            dataIndex=\"location\"\r\n            key=\"location\"\r\n          ></ColumnGroup>\r\n          <ColumnGroup\r\n            title=\"Barangay Description\"\r\n            dataIndex=\"barangayDescription\"\r\n            key=\"barangayDescription\"\r\n          ></ColumnGroup>\r\n          <ColumnGroup\r\n            title=\"Actions\"\r\n            key=\"actions\"\r\n            fixed=\"right\"\r\n            width=\"35vh\"\r\n            render={(value) => (\r\n              <Space>\r\n                <BarangaysInfoModal\r\n                  info={value}\r\n                  passedData={setDataFromModal}\r\n                  afterClosing={modalClosed}\r\n                />\r\n                <EditBarangayModal\r\n                  info={value}\r\n                  passedData={setDataFromModal}\r\n                  afterClosing={modalClosed}\r\n                />\r\n                <AddBarangayImageModal info={value} />\r\n              </Space>\r\n            )}\r\n          ></ColumnGroup>\r\n        </Table>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BarangaysTableList;\r\n","C:\\Users\\CORNETTO\\Desktop\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\JeepneysTableList\\JeepneysTableList.js",[],"C:\\Users\\CORNETTO\\Desktop\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\Dashboard\\Dashboard.js",[],"C:\\Users\\CORNETTO\\Desktop\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\JeepneysTableList\\AddJeepneyModal.js",["214","215","216"],"import React, { useState, useEffect } from \"react\";\r\nimport { Form, Input, Modal, Button, Upload, Select } from \"antd\";\r\nimport { UploadOutlined,PlusOutlined } from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\n\r\nfunction AddJeepneyModal(props) {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n  const [ifCanceled, setIfCanceled] = useState(false);\r\n  const [jeepneys, setJeepneys] = useState([]);\r\n  const [file, setFile] = useState({});\r\n  const [filename, setFilename] = useState(\"Choose file\");\r\n  const [uploadedImagePath, setUploadedImagePath] = useState();\r\n  const [barangays, setBarangays] = useState([]);\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n    console.log(props.info);\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/api/v1/barangays/search_all_barangays\")\r\n      .then((res) => {\r\n\r\n        let data = res.data;\r\n        setBarangays(data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }, []);\r\n  const { Option } = Select;\r\n\r\n  const checking = (file) => {\r\n    setFilename(file);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIfCanceled(true);\r\n    setIsModalVisible(false);\r\n  };\r\n  const handleClose = () => {\r\n    if (ifCanceled) {\r\n    } else {\r\n      props.afterClosing();\r\n    }\r\n  };\r\n\r\n  const onFinish = (values) => {\r\n    console.log(values);\r\n    props.passedData(props.info);\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n    setTimeout(() => {\r\n      setIsModalVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n    // setUploadedImagePath(filename.file.response.filePath);\r\n    axios\r\n      .post(\"/api/v1/jeepneys/add_jeep\", values)\r\n      .then((res) => {\r\n        let jeepneysCopy = [...jeepneys];\r\n        jeepneysCopy = [...jeepneysCopy, res.data];\r\n        console.log(jeepneysCopy);\r\n        setJeepneys(jeepneysCopy);\r\n        // console.log(filename.file.response);\r\n        Modal.success({\r\n          content: \"Successfully Added New Jeepney\",\r\n        });\r\n\r\n        axios.post(\"/api/v1/images/save_image\", {\r\n          imageOwnerId: res.data.id,\r\n          imageReferenceId: 3,\r\n          imagePath: uploadedImagePath,\r\n        });\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    Modal.error({\r\n      content: \"Failure to Add New Jeepney\",\r\n    });\r\n    setTimeout(() => {\r\n      setIsModalVisible(true);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n    console.log(\"fail\");\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  const handleChange = (value) => {\r\n    console.log(`selected ${value}`);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button type=\"primary\" className=\"modal-button-add\" onClick={showModal}>\r\n        <span className=\"desktop-view\"><PlusOutlined /> Add Jeepney</span>\r\n        <span className=\"mobile-view\"><PlusOutlined /></span>\r\n      </Button>\r\n\r\n      <Modal\r\n        title=\"Add Jeepney:\"\r\n        visible={isModalVisible}\r\n        confirmLoading={confirmLoading}\r\n        onOk={onFinish}\r\n        onCancel={handleCancel}\r\n        afterClose={handleClose}\r\n        destroyOnClose={true}\r\n        footer={[\r\n          <Button key=\"back\" className=\"modal-button\"  onClick={handleCancel}>\r\n            Cancel\r\n          </Button>,\r\n          <Button\r\n            form=\"myForm\"\r\n            className=\"modal-button\" \r\n            key=\"submit\"\r\n            htmlType=\"submit\"\r\n            type=\"primary\"\r\n            loading={confirmLoading}\r\n            onClick={onFinish}\r\n          >\r\n            Add\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <Form\r\n          layout=\"vertical\"\r\n          name=\"basic\"\r\n          initialValues={{ remember: true }}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n          id=\"myForm\"\r\n        >\r\n          <Form.Item\r\n            label=\"Barangay:\"\r\n            name=\"barangayId\"\r\n            rules={[\r\n              { required: true, message: \"Please input the Barangay's ID!\" },\r\n            ]}\r\n          >\r\n            <Select\r\n              placeholder=\"Select Barangay\"\r\n              style={{ width: '100%' }}\r\n              onChange={handleChange}\r\n            >\r\n              {barangays.map((barangay, index) => (\r\n                <Option value={barangay.id}>{barangay.barangayName}</Option>\r\n              ))}\r\n            </Select>\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Plate Number:\"\r\n            name=\"plateNumber\"\r\n            rules={[\r\n              { required: true, message: \"Please input the Plate Number!\" },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Jeep Capacity:\"\r\n            name=\"jeepCapacity\"\r\n            rules={[\r\n              { required: true, message: \"Please input the Jeep Capacity!\" },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Upload\r\n            action=\"/api/v1/images/add_image\"\r\n            listType=\"picture\"\r\n            maxCount={1}\r\n            file={file}\r\n            onChange={checking}\r\n          >\r\n            <Button icon={<UploadOutlined />}>Upload Image (Max: 1)</Button>\r\n          </Upload>\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddJeepneyModal;\r\n","C:\\Users\\CORNETTO\\Desktop\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\DriversTableList\\AddDriverModal.js",["217","218","219","220","221","222","223","224","225","226","227"],"import React, { useState } from \"react\";\r\nimport { Form, Input, Modal, Button, Upload, Space } from \"antd\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\n\r\nfunction AddDriverModal(props) {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n  const [ifCanceled, setIfCanceled] = useState(false);\r\n  const [drivers, setDrivers] = useState([]);\r\n  const [file, setFile] = useState({});\r\n  const [filename, setFilename] = useState(\"Choose file\");\r\n  const [uploadedImagePath, setUploadedImagePath] = useState();\r\n\r\n  const checking = (file) => {\r\n    setFilename(file);\r\n    //console.log(filename);\r\n  };\r\n  const unchecking = () => {\r\n    setFilename(\"Choose file\");\r\n    //console.log(filename);\r\n  };\r\n  const viewFile = () => {\r\n    if (filename == \"Choose file\") {\r\n      //console.log(\"No image selected\");\r\n    } else {\r\n      setUploadedImagePath(filename.file.response.filePath);\r\n      //console.log(filename.file.response);\r\n    }\r\n  };\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n    //console.log(props.info);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIfCanceled(true);\r\n    setIsModalVisible(false);\r\n  };\r\n  const handleClose = () => {\r\n    if (ifCanceled) {\r\n    } else {\r\n      props.afterClosing();\r\n    }\r\n  };\r\n\r\n  const onFinish = (values) => {\r\n    console.log(values);\r\n    props.passedData(props.info);\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n    setTimeout(() => {\r\n      setIsModalVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n\r\n    axios\r\n      .post(\"/api/v1/drivers/add_driver\", values)\r\n      .then((res) => {\r\n        // let driversCopy = [...drivers];\r\n        // driversCopy = [...driversCopy, res.data];\r\n        // //console.log(driversCopy);\r\n        // setDrivers(driversCopy);\r\n        // setFilename(file);\r\n        Modal.success({\r\n          content: \"Successfully Added New Driver\",\r\n        });\r\n        // setUploadedImagePath(filename.file.response.filePath);\r\n        // //console.log(uploadedImagePath);\r\n        // axios.post(\"/api/v1/images/save_image\", {\r\n        //   imageOwnerId: res.data.id,\r\n        //   imageReferenceId: 1,\r\n        //   imagePath: uploadedImagePath,\r\n        // });\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    Modal.error({\r\n      content: \"Failure to Add New Driver\",\r\n    });\r\n    setTimeout(() => {\r\n      setIsModalVisible(true);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n    //console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button type=\"primary\" className=\"modal-button-add\" onClick={showModal}>\r\n        <span className=\"desktop-view\"><PlusOutlined /> Add Driver</span>\r\n        <span className=\"mobile-view\"><PlusOutlined /></span>\r\n      </Button>\r\n\r\n      <Modal\r\n        title=\"Add Driver:\"\r\n        visible={isModalVisible}\r\n        confirmLoading={confirmLoading}\r\n        onOk={onFinish}\r\n        onCancel={handleCancel}\r\n        afterClose={handleClose}\r\n        destroyOnClose={true}\r\n        footer={[\r\n          <Button key=\"back\" className=\"modal-button\"  onClick={handleCancel}>\r\n            Cancel\r\n          </Button>,\r\n          <Button\r\n            form=\"myForm\"\r\n            key=\"submit\"\r\n            htmlType=\"submit\"\r\n            type=\"primary\"\r\n            className=\"modal-button\" \r\n            loading={confirmLoading}\r\n            onClick={onFinish}\r\n          >\r\n            Add\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <Form\r\n          layout=\"vertical\"\r\n          name=\"basic\"\r\n          initialValues={{ remember: true }}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n          id=\"myForm\"\r\n        >\r\n          <Form.Item\r\n            label=\"First Name\"\r\n            name=\"firstName\"\r\n            rules={[\r\n              { required: true, message: \"Please input your Firstname!\" },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Middle Name\"\r\n            name=\"middleName\"\r\n            rules={[\r\n              { required: true, message: \"Please input your Middlename!\" },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Last Name\"\r\n            name=\"lastName\"\r\n            rules={[{ required: true, message: \"Please input your Lastname!\" }]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Address\"\r\n            name=\"address\"\r\n            rules={[{ required: true, message: \"Please input your Address!\" }]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Contact Number\"\r\n            name=\"contactNumber\"\r\n            rules={[\r\n              { required: true, message: \"Please input your Contact Number!\" },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Generate Password\"\r\n            name=\"generatePassword\"\r\n            rules={[{ required: true, message: \"Please input your password!\" }]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Email\"\r\n            name=\"email\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                type: \"email\",\r\n                message: \"Please input your Email!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          {/* <Upload\r\n            action=\"/api/v1/images/add_image\"\r\n            listType=\"picture\"\r\n            maxCount={1}\r\n            file={file}\r\n            onChange={checking}\r\n            onRemove={unchecking}\r\n          >\r\n            <Button>Choose Image (Max: 1)</Button>\r\n          </Upload>\r\n          <Space>\r\n            <Button onClick={viewFile} icon={<UploadOutlined />}>\r\n              Upload\r\n            </Button>\r\n          </Space> */}\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddDriverModal;\r\n","C:\\Users\\CORNETTO\\Desktop\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\DriversTableList\\DriversInfoModal.js",["228","229","230","231"],"import React, { useState } from \"react\";\r\nimport { Modal, Button, Image, Card, Col, Row } from \"antd\";\r\nimport { UnorderedListOutlined  } from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\n\r\nfunction DriversInfoModal(props) {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [modalValue, setModalValue] = useState(\"\");\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n  const [ifCanceled, setIfCanceled] = useState(false);\r\n  const [drivers, setDrivers] = useState([]);\r\n  const [images, setImages] = useState([]);\r\n  const [imagePath, setImagePath] = useState([]);\r\n\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n    axios\r\n      .post(\"/api/v1/images/search_images\", {\r\n        imageOwnerId: props.info.id,\r\n        imageReferenceId: 2,\r\n      })\r\n      .then((res) => {\r\n        let data = res.data;\r\n        setImages(data);\r\n        //console.log(\"images\", images);\r\n        // let imagesCopy = [...images];\r\n        // imagesCopy = imagesCopy.find(\r\n        //   (imagesCopy) =>\r\n        //     imagesCopy.imageOwnerId === props.info.id &&\r\n        //     imagesCopy.imageReferenceId === 1\r\n        // );\r\n        //setImagePath(imagesCopy.imagePath);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const handleOk = () => {\r\n    props.passedData(props.info);\r\n\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n    setTimeout(() => {\r\n      setIsModalVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n    setTimeout(() => {\r\n      setIsModalVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n    //console.log(id);\r\n    axios\r\n      .delete(\"/api/v1/images/delete_image\", {\r\n        params: {\r\n          id,\r\n          referenceId: 1,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        let imagesCopy = [...images];\r\n        imagesCopy = imagesCopy.filter(\r\n          (imagesCopy) =>\r\n            imagesCopy.imageOwnerId !== id && imagesCopy.imageReferenceId === 2\r\n        );\r\n        setImages(imagesCopy);\r\n        console.log(imagesCopy);\r\n      })\r\n      .catch((error) => console.log(error));\r\n\r\n    axios\r\n      .delete(\"/api/v1/drivers/delete_driver\", {\r\n        params: {\r\n          id,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        let driversCopy = [...drivers];\r\n        driversCopy = driversCopy.filter((driver) => driver.id !== id);\r\n        setDrivers(driversCopy);\r\n        //console.log(driversCopy);\r\n\r\n        Modal.success({\r\n          content: \"Driver has been Removed\",\r\n        });\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIfCanceled(true);\r\n    setIsModalVisible(false);\r\n  };\r\n  const handleClose = () => {\r\n    if (ifCanceled) {\r\n    } else {\r\n      props.afterClosing();\r\n    }\r\n  };\r\n\r\n  const handleDeleteImage = (id) => {\r\n    axios\r\n      .delete(\"/api/v1/images/delete_image\", {\r\n        params: {\r\n          id,\r\n          referenceId: 1,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        let imagesCopy = [...images];\r\n        imagesCopy = imagesCopy.filter((image) => image.id !== id);\r\n        setImages(imagesCopy);\r\n        Modal.success({\r\n          content: \"Driver image has been removed\",\r\n        });\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n  return (\r\n    <div>\r\n      <Button type=\"primary\" className=\"modal-button\" onClick={showModal}>\r\n        <span className=\"desktop-view\"><UnorderedListOutlined/> View</span>\r\n        <span className=\"mobile-view\"><UnorderedListOutlined/></span>\r\n      </Button>\r\n      <Modal\r\n        title=\"Driver Information\"\r\n        visible={isModalVisible}\r\n        confirmLoading={confirmLoading}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        afterClose={handleClose}\r\n        footer={[\r\n          <Button\r\n            className=\"modal-button\" \r\n            loading={confirmLoading}\r\n            onClick={() => handleDelete(props.info.id)}\r\n            danger\r\n          >\r\n            Remove\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <p>\r\n          <h4>ID:</h4>\r\n          {props.info.id}\r\n        </p>\r\n        <p>\r\n          <h4>Name:</h4>\r\n          {props.info.firstName} {props.info.middleName} {props.info.lastName}\r\n        </p>\r\n        <p>\r\n          <h4>Contact Number:</h4>\r\n          {props.info.contactNumber}\r\n        </p>\r\n        <p>\r\n          <h4>Address: </h4>\r\n          {props.info.address}\r\n        </p>\r\n        <p>\r\n          <h4>Email Address: </h4>\r\n          {props.info.email}\r\n        </p>\r\n        <h4>Uploaded Images: </h4>\r\n        <Card className=\"shadow-sm\">\r\n          <Row>\r\n              {images.map((image, index) => (\r\n                <Col key={index} md={{ span: 6 }}>\r\n                  \r\n                   <br></br>\r\n                      <Image\r\n                        height={100}\r\n                        width={100}\r\n                        src={`/api/v1/images/${\r\n                          image.imagePath ? image.imagePath : \"logo.png\"\r\n                        }`}\r\n                      />\r\n                      <Row>\r\n                      <br></br>\r\n                      <Button onClick={() => handleDeleteImage(image.id)} danger>\r\n                        Delete\r\n                      </Button>\r\n                      </Row>\r\n                </Col>\r\n              ))}\r\n          </Row>\r\n        </Card>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DriversInfoModal;\r\n","C:\\Users\\CORNETTO\\Desktop\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\BarangaysTableList\\BarangaysInfoModal.js",["232","233","234","235","236","237","238","239"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, Button, Card, Image, Col, Row, List } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { UnorderedListOutlined  } from \"@ant-design/icons\";\r\n\r\nfunction BarangaysInfoModal(props) {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [modalValue, setModalValue] = useState(\"\");\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n  const [ifCanceled, setIfCanceled] = useState(false);\r\n  const [barangays, setBarangays] = useState([]);\r\n  const [images, setImages] = useState([]);\r\n  const [imagePath, setImagePath] = useState([]);\r\n\r\n  // useEffect(() => {\r\n  //   axios\r\n  //     .get(\"/api/v1/images/\")\r\n  //     .then((res) => {\r\n  //       let data = res.data;\r\n  //       setImages(data);\r\n  //     })\r\n  //     .catch((error) => console.log(error));\r\n  // }, []);\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n    axios\r\n      .post(\"/api/v1/images/search_images\", {\r\n        imageOwnerId: props.info.id,\r\n        imageReferenceId: 1,\r\n      })\r\n      .then((res) => {\r\n        let data = res.data;\r\n        setImages(data);\r\n        //console.log(\"images\", images);\r\n        // let imagesCopy = [...images];\r\n        // imagesCopy = imagesCopy.find(\r\n        //   (imagesCopy) =>\r\n        //     imagesCopy.imageOwnerId === props.info.id &&\r\n        //     imagesCopy.imageReferenceId === 1\r\n        // );\r\n        //setImagePath(imagesCopy.imagePath);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const handleOk = () => {\r\n    props.passedData(props.info);\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n    setTimeout(() => {\r\n      setIsModalVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n  };\r\n\r\n  const handleDeleteImage = (id) => {\r\n    axios\r\n      .delete(\"/api/v1/images/delete_image\", {\r\n        params: {\r\n          id,\r\n          referenceId: 1,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        let imagesCopy = [...images];\r\n        imagesCopy = imagesCopy.filter((image) => image.id !== id);\r\n        setImages(imagesCopy);\r\n        Modal.success({\r\n          content: \"Barangay image has been removed\",\r\n        });\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n  const handleDelete = (id) => {\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n    setTimeout(() => {\r\n      setIsModalVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n    Modal.success({\r\n      content: \"Still in development\",\r\n    });\r\n\r\n    // axios\r\n    //   .delete(\"/api/v1/barangays/delete_barangay\", {\r\n    //     params: {\r\n    //       id,\r\n    //     },\r\n    //   })\r\n    //   .then((res) => {\r\n    //     Modal.success({\r\n    //       content: \"Barangay has been Removed\",\r\n    //     });\r\n    //   })\r\n    //   .catch((error) => console.log(error));\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIfCanceled(true);\r\n    setIsModalVisible(false);\r\n  };\r\n  const handleClose = () => {\r\n    if (ifCanceled) {\r\n    } else {\r\n      props.afterClosing();\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <Button type=\"primary\" className=\"modal-button\" onClick={showModal}>\r\n        <span className=\"desktop-view\"><UnorderedListOutlined/> View</span>\r\n        <span className=\"mobile-view\"><UnorderedListOutlined/></span>\r\n      </Button>\r\n      <Modal\r\n        title=\"Barangay Information\"\r\n        visible={isModalVisible}\r\n        confirmLoading={confirmLoading}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        afterClose={handleClose}\r\n        destroyOnClose={true}\r\n        footer={[\r\n          <Button\r\n            loading={confirmLoading}\r\n            onClick={() => handleDelete(props.info.id)}\r\n            danger\r\n            className=\"modal-button\"\r\n          >\r\n            Remove Barangay\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <p>\r\n          <h4>Bargangay ID:</h4>\r\n          {props.info.id}\r\n        </p>\r\n        <p>\r\n          <h4>Barangay Name:</h4>\r\n          {props.info.barangayName}\r\n        </p>\r\n        <p>\r\n          <h4>Location:</h4>\r\n          {props.info.location}\r\n        </p>\r\n        <p>\r\n          <h4>Barangay Description: </h4>\r\n          {props.info.barangayDescription}\r\n        </p>\r\n        <h4>Uploaded Images: </h4>\r\n        <Card className=\"shadow-sm\">\r\n          <Row>\r\n              {images.map((image, index) => (\r\n                <Col key={index} md={{ span: 6 }}>\r\n                  \r\n                   <br></br>\r\n                      <Image\r\n                        height={100}\r\n                        width={100}\r\n                        src={`/api/v1/images/${\r\n                          image.imagePath ? image.imagePath : \"logo.png\"\r\n                        }`}\r\n                      />\r\n                      <Row>\r\n                      <br></br>\r\n                      <Button onClick={() => handleDeleteImage(image.id)} danger>\r\n                        Delete\r\n                      </Button>\r\n                      </Row>\r\n                </Col>\r\n              ))}\r\n          </Row>\r\n        </Card>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BarangaysInfoModal;\r\n","C:\\Users\\CORNETTO\\Desktop\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\BarangaysTableList\\AddBarangayModal.js",["240","241","242","243","244","245","246","247","248","249","250"],"import React, { useState } from \"react\";\r\nimport { Form, Input, Modal, Button, Upload } from \"antd\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\n\r\nfunction AddBarangayModal(props) {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [modalValue, setModalValue] = useState(\"\");\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n  const [ifCanceled, setIfCanceled] = useState(false);\r\n  const [barangays, setBarangays] = useState([]);\r\n  const [file, setFile] = useState({});\r\n  const [filename, setFilename] = useState(\"Choose file\");\r\n  const [uploadedImagePath, setUploadedImagePath] = useState();\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n    console.log(props.info);\r\n  };\r\n\r\n  const checking = (file) => {\r\n    setFilename(file);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIfCanceled(true);\r\n    setIsModalVisible(false);\r\n  };\r\n  const handleClose = () => {\r\n    if (ifCanceled) {\r\n    } else {\r\n      props.afterClosing();\r\n    }\r\n  };\r\n\r\n  const onFinish = (values) => {\r\n    console.log(values);\r\n    props.passedData(props.info);\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n    setTimeout(() => {\r\n      setIsModalVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n    // setUploadedImagePath(filename.file.response.filePath);\r\n    axios\r\n      .post(\"/api/v1/barangays/add_barangay\", values)\r\n      .then((res) => {\r\n        // let barangaysCopy = [...barangays];\r\n        // barangaysCopy = [...barangaysCopy, res.data];\r\n        // //console.log(barangaysCopy);\r\n        // setBarangays(barangaysCopy);\r\n        Modal.success({\r\n          content: \"Successfully Added New Barangay\",\r\n        });\r\n\r\n        // axios.post(\"/api/v1/images/save_image\", {\r\n        //   imageOwnerId: res.data.id,\r\n        //   imageReferenceId: 2,\r\n        //   imagePath: uploadedImagePath,\r\n        // });\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    Modal.error({\r\n      content: \"Failure to Add New Barangay\",\r\n    });\r\n    setTimeout(() => {\r\n      setIsModalVisible(true);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n    //console.log(\"fail\");\r\n    //console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button type=\"primary\" className=\"modal-button-add\" onClick={showModal}>\r\n        <span className=\"desktop-view\"><PlusOutlined /> Add Barangay</span>\r\n        <span className=\"mobile-view\"><PlusOutlined /></span>\r\n      </Button>\r\n\r\n      <Modal\r\n        title=\"Add Barangay:\"\r\n        visible={isModalVisible}\r\n        confirmLoading={confirmLoading}\r\n        onOk={onFinish}\r\n        onCancel={handleCancel}\r\n        afterClose={handleClose}\r\n        destroyOnClose={true}\r\n        footer={[\r\n          <Button key=\"back\" className=\"modal-button\" onClick={handleCancel}>\r\n            Cancel\r\n          </Button>,\r\n          <Button\r\n            form=\"myForm\"\r\n            key=\"submit\"\r\n            htmlType=\"submit\"\r\n            type=\"primary\"\r\n            loading={confirmLoading}\r\n            onClick={onFinish}\r\n            className=\"modal-button\"\r\n          >\r\n            Add\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <Form\r\n          layout=\"vertical\"\r\n          name=\"basic\"\r\n          initialValues={{ remember: true }}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n          id=\"myForm\"\r\n        >\r\n          <Form.Item\r\n            label=\"Barangay Name\"\r\n            name=\"barangayName\"\r\n            rules={[\r\n              { required: true, message: \"Please input the Barangay's Name!\" },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Location\"\r\n            name=\"location\"\r\n            rules={[\r\n              { required: true, message: \"Please input Barangay's Location!\" },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Barangay Description\"\r\n            name=\"barangayDescription\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please input the Barangay's Description!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input.TextArea />\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddBarangayModal;\r\n","C:\\Users\\CORNETTO\\Desktop\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\BarangaysTableList\\EditBarangayModal.js",["251","252","253","254","255"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, Button, Form, Input } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { EditOutlined  } from \"@ant-design/icons\";\r\n\r\nfunction EditBarangayModal(props) {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [form] = Form.useForm();\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n  const [ifCanceled, setIfCanceled] = useState(false);\r\n  const [ifChanged, setIfChanged] = useState();\r\n  const [barangays, setBarangays] = useState([]);\r\n\r\n  const showModal = () => {\r\n    form.setFieldsValue({\r\n      id: props.info.id,\r\n      barangayName: props.info.barangayName,\r\n      location: props.info.location,\r\n      barangayDescription: props.info.barangayDescription,\r\n    });\r\n    setIsModalVisible(true);\r\n    setIfChanged(false);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIfCanceled(true);\r\n    setIsModalVisible(false);\r\n  };\r\n  const handleClose = () => {\r\n    if (ifCanceled) {\r\n    } else {\r\n      props.afterClosing();\r\n    }\r\n  };\r\n\r\n  const onFinish = (values) => {\r\n    //console.log(ifChanged);\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n    props.passedData(props.info);\r\n\r\n    axios\r\n      .post(\"/api/v1/barangays/update_barangay\", {\r\n        id: values.id,\r\n        barangayName: values.barangayName,\r\n        location: values.location,\r\n        barangayDescription: values.barangayDescription,\r\n      })\r\n      .then((res) => {\r\n        setTimeout(() => {\r\n          setIsModalVisible(false);\r\n          setConfirmLoading(false);\r\n        }, 2000);\r\n        {\r\n          ifChanged\r\n            ? Modal.success({\r\n                content: \"Successfully Updated Barangay\",\r\n              })\r\n            : Modal.success({\r\n                content: \"Barangay Info is up to date\",\r\n              });\r\n        }\r\n      })\r\n      .catch((error) => console.log(error));\r\n\r\n    //console.log(ifChanged);\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    Modal.error({\r\n      content: \"Failure to Update Barangay Info\",\r\n    });\r\n    setTimeout(() => {\r\n      setIsModalVisible(true);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n    // console.log(\"Failed:\", errorInfo);\r\n  };\r\n  const onValuesChange = (changedValues, allValues) => {\r\n    //console.log(\"Changed\", allValues, changedValues);\r\n    setIfChanged(true);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button type=\"primary\" className=\"modal-button\" onClick={showModal}>\r\n        <span className=\"desktop-view\"><EditOutlined /> Edit</span>\r\n        <span className=\"mobile-view\"><EditOutlined /></span>\r\n      </Button>\r\n      <Modal\r\n        title=\"Update Barangay Info\"\r\n        confirmLoading={confirmLoading}\r\n        visible={isModalVisible}\r\n        onOk={onFinish}\r\n        onCancel={handleCancel}\r\n        afterClose={handleClose}\r\n        destroyOnClose={true}\r\n        footer={[\r\n          <Button key=\"back\" className=\"modal-button\" onClick={handleCancel}>\r\n            Cancel\r\n          </Button>,\r\n          <Button form=\"myForm\" className=\"modal-button\" htmlType=\"submit\" type=\"primary\">\r\n            Update\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <Form\r\n          layout=\"vertical\"\r\n          name=\"basic\"\r\n          form={form}\r\n          initialValues={{ remember: true }}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n          onValuesChange={onValuesChange}\r\n          id=\"myForm\"\r\n        >\r\n          <Form.Item label=\"Barangay ID:\" name=\"id\">\r\n            <Input disabled={true} bordered={false} />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Barangay Name:\"\r\n            name=\"barangayName\"\r\n            rules={[\r\n              { required: true, message: \"Please input the Barangay's Name!\" },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Location:\"\r\n            name=\"location\"\r\n            rules={[\r\n              { required: true, message: \"Please input Barangay's Location!\" },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Barangay Description:\"\r\n            name=\"barangayDescription\"\r\n            \r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please input the Barangay's Description!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input.TextArea />\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditBarangayModal;\r\n","C:\\Users\\CORNETTO\\Desktop\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\BarangaysTableList\\AddBarangayImageModal.js",["256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277"],"import React, { useState } from \"react\";\r\nimport {\r\n  Modal,\r\n  Upload,\r\n  Button,\r\n  Space,\r\n  Row,\r\n  Col,\r\n  List,\r\n  Form,\r\n  Radio,\r\n  Input,\r\n  message,\r\n} from \"antd\";\r\nimport { UploadOutlined } from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\nimport { Content } from \"antd/lib/layout/layout\";\r\n\r\nfunction AddBarangayImageModal(props) {\r\n  const [file, setFile] = useState({});\r\n  const [imageStatus, setImageStatus] = useState(false);\r\n  const [filename, setFilename] = useState(\"Choose file\");\r\n  const [uploadedImagePath, setUploadedImagePath] = useState(\"\");\r\n  const [uploadImageStatus, setUploadImageStatus] = useState(\"none\");\r\n  const [fetchImage, setFetchImage] = useState(\"\");\r\n  const [images, setImages] = useState([]);\r\n  const [info, setInfo] = useState([]);\r\n  const [ifCanceled, setIfCanceled] = useState(false);\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [form] = Form.useForm();\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n\r\n  const showModal = () => {\r\n    form.setFieldsValue({\r\n      imageOwnerId: props.info.id,\r\n      imageReferenceId: 1,\r\n    });\r\n    setUploadedImagePath();\r\n    setUploadImageStatus(\"removed\");\r\n    setFilename(\"Choose file\");\r\n    setIsModalVisible(true);\r\n    console.log(props.info);\r\n  };\r\n\r\n  const checking = (file) => {\r\n    setFilename(file);\r\n  };\r\n  const viewFile = () => {\r\n    {\r\n      (() => {\r\n        switch (uploadImageStatus) {\r\n          case \"done\":\r\n            return (\r\n              setUploadedImagePath(filename.file.response.filePath),\r\n              console.log(\"done\")\r\n            );\r\n\r\n          case \"removed\":\r\n            return console.log(\"removed\");\r\n\r\n          case \"\":\r\n            return console.log(\"none\");\r\n        }\r\n      })();\r\n    }\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIfCanceled(true);\r\n\r\n    setTimeout(() => {\r\n      setIsModalVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 500);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n  };\r\n\r\n  const onFinish = (values) => {\r\n    if (uploadImageStatus == \"done\") {\r\n      axios\r\n        .post(\"/api/v1/images/save_image\", {\r\n          imageOwnerId: props.info.id,\r\n          imageReferenceId: 1,\r\n          imagePath: uploadedImagePath,\r\n        })\r\n        .then((res) => {\r\n          message.success(\"Successfully Saved\");\r\n          setTimeout(() => {\r\n            setIsModalVisible(false);\r\n            setConfirmLoading(false);\r\n          }, 500);\r\n          setUploadedImagePath(\"\");\r\n        })\r\n        .catch((error) => console.log(error));\r\n    } else {\r\n      message.error(\"Image Saving Error\");\r\n      // console.log(\"Uploaded image is removed\");\r\n    }\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"fail\");\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  const removeImage = (val) => {\r\n    //console.log(\"Removed image\", val.response.filePath);\r\n    axios\r\n      .delete(\"/api/v1/images/delete_folder_image\", {\r\n        params: {\r\n          fileName: val.response.imagePath,\r\n          fileId: val.response.id,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        setUploadImageStatus(\"removed\");\r\n        // console.log(res.data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n    setUploadedImagePath();\r\n    message.error(`File removed Successfully.`);\r\n  };\r\n\r\n  const uploadFile = {\r\n    name: \"file\",\r\n    action: \"/api/v1/images/add_image\",\r\n    headers: {\r\n      authorization: \"authorization-text\",\r\n    },\r\n    data: { imageOwnerId: props.info.id, imageReferenceId: 1 },\r\n    onChange(info) {\r\n      if (info.file.status !== \"uploading\") {\r\n        console.log(\"uploading\", info.file, info.fileList);\r\n      }\r\n      if (info.file.status === \"done\") {\r\n        message.success(`${info.file.name} file uploaded Successfully.`);\r\n      } else if (info.file.status === \"error\") {\r\n        message.error(`${info.file.name} file upload Failed.`);\r\n      }\r\n      setUploadImageStatus(info.file.status);\r\n      setFilename(info);\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button type=\"primary\" className=\"modal-button\" onClick={showModal}>\r\n        <span className=\"desktop-view\"><UploadOutlined /> Upload</span>\r\n        <span className=\"mobile-view\"><UploadOutlined /></span>\r\n      </Button>\r\n      <Modal\r\n        title=\"Barangay Image Upload\"\r\n        confirmLoading={confirmLoading}\r\n        visible={isModalVisible}\r\n        onOk={onFinish}\r\n        onCancel={handleCancel}\r\n        afterClose={handleClose}\r\n        destroyOnClose={true}\r\n        footer={[\r\n          <Button key=\"back\" className=\"modal-button\"  type=\"danger\" onClick={handleCancel}>\r\n            Close\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <List itemLayout=\"vertical\">\r\n          <List.Item>\r\n          <h4>Image Barangay ID: </h4>\r\n          {props.info.id}\r\n          </List.Item>\r\n          <List.Item>\r\n          <h4>Image Barangay Name: </h4>\r\n          {props.info.barangayName}\r\n          </List.Item>\r\n          <List.Item>\r\n          <h4>Image Reference Name: </h4>\r\n          Barangay\r\n          </List.Item>\r\n        </List>\r\n        <Row>\r\n          <Space style={{ width: \"100%\" }} size=\"large\">\r\n            <Upload\r\n              {...uploadFile}\r\n              onRemove={removeImage}\r\n              listType=\"picture-card\"\r\n              showUploadList={{showPreviewIcon:false}}\r\n              maxCount={5}\r\n            >\r\n                <Space>\r\n                  <UploadOutlined/>\r\n               Upload\r\n               </Space>\r\n            </Upload>\r\n          </Space>\r\n        </Row>\r\n        {/* <Row>\r\n          <Form\r\n            name=\"basic\"\r\n            form={form}\r\n            layout={\"horizontal\"}\r\n            initialValues={{ remember: true }}\r\n            onFinish={onFinish}\r\n            onFinishFailed={onFinishFailed}\r\n          >\r\n            <Form.Item label=\"Image Owner ID: \" name=\"imageOwnerId\">\r\n               {props.info.id}\r\n            </Form.Item>\r\n            <Form.Item label=\"Image Reference: \" name=\"imageReferenceId\">\r\n               Barangay\r\n            </Form.Item>\r\n          </Form>\r\n        </Row> */}\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddBarangayImageModal;\r\n","C:\\Users\\CORNETTO\\Desktop\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\JeepneysTableList\\JeepneysInfoModal.js",["278","279","280"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, Button, Card, Image, Space, Col, Row } from \"antd\";\r\nimport { UnorderedListOutlined  } from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\n\r\nfunction JeepneysInfoModal(props) {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n  const [ifCanceled, setIfCanceled] = useState(false);\r\n  const [jeepneys, setJeepneys] = useState([]);\r\n  const [images, setImages] = useState([]);\r\n  const [imagePath, setImagePath] = useState([]);\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n    axios\r\n      .post(\"/api/v1/images/search_images\", {\r\n        imageOwnerId: props.info.id,\r\n        imageReferenceId: 3,\r\n      })\r\n      .then((res) => {\r\n        let data = res.data;\r\n        setImages(data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const handleOk = () => {\r\n    props.passedData(props.info);\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n    setTimeout(() => {\r\n      setIsModalVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n    setTimeout(() => {\r\n      setIsModalVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n    axios\r\n      .delete(\"/api/v1/images/delete_image\", {\r\n        params: {\r\n          id,\r\n          referenceId: 3,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        let imagesCopy = [...images];\r\n        imagesCopy = imagesCopy.filter(\r\n          (imagesCopy) =>\r\n            imagesCopy.imageOwnerId !== id && imagesCopy.imageReferenceId === 3\r\n        );\r\n        setImages(imagesCopy);\r\n        console.log(imagesCopy);\r\n      })\r\n      .catch((error) => console.log(error));\r\n\r\n    axios\r\n      .delete(\"/api/v1/jeepneys/delete_jeep\", {\r\n        params: {\r\n          id,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        let jeepneysCopy = [...jeepneys];\r\n\r\n        jeepneysCopy = jeepneysCopy.filter((jeepney) => jeepney.id !== id);\r\n        setJeepneys(jeepneysCopy);\r\n\r\n        console.log(jeepneysCopy);\r\n        Modal.success({\r\n          content: \"Jeepney has been Removed\",\r\n        });\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIfCanceled(true);\r\n    setIsModalVisible(false);\r\n  };\r\n  const handleClose = () => {\r\n    if (ifCanceled) {\r\n    } else {\r\n      props.afterClosing();\r\n    }\r\n  };\r\n\r\n  const handleDeleteImage = (id) => {\r\n    axios\r\n      .delete(\"/api/v1/images/delete_image\", {\r\n        params: {\r\n          id,\r\n          referenceId: 1,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        let imagesCopy = [...images];\r\n        imagesCopy = imagesCopy.filter((image) => image.id !== id);\r\n        setImages(imagesCopy);\r\n        Modal.success({\r\n          content: \"Barangay image has been removed\",\r\n        });\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n  return (\r\n    <div>\r\n      <Space>\r\n      <Button type=\"primary\" className=\"modal-button\" onClick={showModal}>\r\n        <span className=\"desktop-view\"><UnorderedListOutlined/> View</span>\r\n        <span className=\"mobile-view\"><UnorderedListOutlined/></span>\r\n      </Button>\r\n\r\n        {/* <Button type=\"default\" onClick={showModal}>\r\n        Assign Driver\r\n      </Button> */}\r\n      </Space>\r\n      <Modal\r\n        title=\"Jeepney Information\"\r\n        visible={isModalVisible}\r\n        confirmLoading={confirmLoading}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        afterClose={handleClose}\r\n        footer={[\r\n          <Button\r\n            className=\"modal-button\" \r\n            loading={confirmLoading}\r\n            onClick={() => handleDelete(props.info.id)}\r\n            danger\r\n          >\r\n            Remove\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <p>\r\n          <h4>Barangay Id:</h4>\r\n          {props.info.barangayId}\r\n        </p>\r\n        <p>\r\n          <h4>Plate Number:</h4>\r\n          {props.info.plateNumber}\r\n        </p>\r\n        <p>\r\n          <h4>Jeep Capacity:</h4>\r\n          {props.info.jeepCapacity}\r\n        </p>\r\n        <h4>Uploaded Images: </h4>\r\n        <Card className=\"shadow-sm\">\r\n          <Row>\r\n              {images.map((image, index) => (\r\n                <Col key={index} md={{ span: 6 }}>\r\n                  \r\n                   <br></br>\r\n                      <Image\r\n                        height={100}\r\n                        width={100}\r\n                        src={`/api/v1/images/${\r\n                          image.imagePath ? image.imagePath : \"logo.png\"\r\n                        }`}\r\n                      />\r\n                      <Row>\r\n                      <br></br>\r\n                      <Button onClick={() => handleDeleteImage(image.id)} danger>\r\n                        Delete\r\n                      </Button>\r\n                      </Row>\r\n                </Col>\r\n              ))}\r\n          </Row>\r\n        </Card>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default JeepneysInfoModal;\r\n","C:\\Users\\CORNETTO\\Desktop\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\DriversTableList\\EditDriverModal.js",["281","282","283"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, Button, Form, Input } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { EditOutlined  } from \"@ant-design/icons\";\r\n\r\nfunction EditDriverModal(props) {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [form] = Form.useForm();\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n  const [ifCanceled, setIfCanceled] = useState(false);\r\n  const [ifChanged, setIfChanged] = useState();\r\n\r\n  const showModal = () => {\r\n    form.setFieldsValue({\r\n      id: props.info.id,\r\n      firstName: props.info.firstName,\r\n      middleName: props.info.middleName,\r\n      lastName: props.info.lastName,\r\n      address: props.info.address,\r\n      contactNumber: props.info.contactNumber,\r\n      email: props.info.email,\r\n    });\r\n    setIsModalVisible(true);\r\n    setIfChanged(false);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIfCanceled(true);\r\n    setIsModalVisible(false);\r\n  };\r\n  const handleClose = () => {\r\n    if (ifCanceled) {\r\n    } else {\r\n      props.afterClosing();\r\n    }\r\n  };\r\n\r\n  const onFinish = (values) => {\r\n    //console.log(ifChanged);\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n    props.passedData(props.info);\r\n\r\n    axios\r\n      .post(\"/api/v1/drivers/update_driver\", {\r\n        id: values.id,\r\n        firstName: values.firstName,\r\n        middleName: values.middleName,\r\n        lastName: values.lastName,\r\n        address: values.address,\r\n        contactNumber: values.contactNumber,\r\n        email: values.email,\r\n      })\r\n      .then((res) => {\r\n        setTimeout(() => {\r\n          setIsModalVisible(false);\r\n          setConfirmLoading(false);\r\n        }, 2000);\r\n        {\r\n          ifChanged\r\n            ? Modal.success({\r\n                content: \"Successfully Updated Driver Info\",\r\n              })\r\n            : Modal.success({\r\n                content: \"Driver Info is up to date\",\r\n              });\r\n        }\r\n      })\r\n      .catch((error) => console.log(error));\r\n\r\n    //console.log(ifChanged);\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    Modal.error({\r\n      content: \"Failure to Update Driver Info\",\r\n    });\r\n    setTimeout(() => {\r\n      setIsModalVisible(true);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n    // console.log(\"Failed:\", errorInfo);\r\n  };\r\n  const onValuesChange = (changedValues, allValues) => {\r\n    //console.log(\"Changed\", allValues, changedValues);\r\n    setIfChanged(true);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button type=\"primary\" className=\"modal-button\" onClick={showModal}>\r\n        <span className=\"desktop-view\"><EditOutlined /> Edit</span>\r\n        <span className=\"mobile-view\"><EditOutlined /></span>\r\n      </Button>\r\n      <Modal\r\n        title=\"Update Driver Info\"\r\n        confirmLoading={confirmLoading}\r\n        visible={isModalVisible}\r\n        onOk={onFinish}\r\n        onCancel={handleCancel}\r\n        afterClose={handleClose}\r\n        destroyOnClose={true}\r\n        footer={[\r\n          <Button key=\"back\" className=\"modal-button\" onClick={handleCancel}>\r\n            Cancel\r\n          </Button>,\r\n          <Button form=\"myForm\" className=\"modal-button\" htmlType=\"submit\" type=\"primary\">\r\n            Update\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <Form\r\n          layout=\"vertical\"\r\n          name=\"basic\"\r\n          form={form}\r\n          initialValues={{ remember: true }}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n          onValuesChange={onValuesChange}\r\n          id=\"myForm\"\r\n        >\r\n          <Form.Item label=\"Driver ID:\" name=\"id\">\r\n            <Input disabled={true} bordered={false} />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Firstname:\"\r\n            name=\"firstName\"\r\n            rules={[\r\n              { required: true, message: \"Please input Firstname!\" },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Middlename:\"\r\n            name=\"middleName\"\r\n            rules={[\r\n              { required: true, message: \"Please input Middlename!\" },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Lastname:\"\r\n            name=\"lastName\"\r\n            rules={[\r\n              { required: true, message: \"Please input Lastname!\" },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Contact:\"\r\n            name=\"contactNumber\"\r\n            rules={[\r\n              { required: true, message: \"Please input Contact Number!\" },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Address:\"\r\n            name=\"address\"\r\n            rules={[\r\n              { required: true, message: \"Please input the Address!\" },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Email:\"\r\n            name=\"email\"\r\n            rules={[\r\n              { required: true, message: \"Please input Email!\" },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditDriverModal;\r\n","C:\\Users\\CORNETTO\\Desktop\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\JeepneysTableList\\EditJeepneyModal.js",["284","285"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, Button, Form, Input, Select } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { EditOutlined  } from \"@ant-design/icons\";\r\n\r\nfunction EditJeepneyModal(props) {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [form] = Form.useForm();\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n  const [ifCanceled, setIfCanceled] = useState(false);\r\n  const [ifChanged, setIfChanged] = useState();\r\n  const [barangays, setBarangays] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/api/v1/barangays/search_all_barangays\")\r\n      .then((res) => {\r\n\r\n        let data = res.data;\r\n        setBarangays(data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }, []);\r\n  const { Option } = Select;\r\n\r\n  const handleChange = (value) => {\r\n    console.log(`selected ${value}`);\r\n  };\r\n\r\n\r\n  const showModal = () => {\r\n    form.setFieldsValue({\r\n      id: props.info.id,\r\n      barangayId: props.info.barangayId,\r\n      plateNumber: props.info.plateNumber,\r\n      jeepCapacity: props.info.jeepCapacity,\r\n    });\r\n    setIsModalVisible(true);\r\n    setIfChanged(false);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIfCanceled(true);\r\n    setIsModalVisible(false);\r\n  };\r\n  const handleClose = () => {\r\n    if (ifCanceled) {\r\n    } else {\r\n      props.afterClosing();\r\n    }\r\n  };\r\n\r\n  const onFinish = (values) => {\r\n    //console.log(ifChanged);\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n    props.passedData(props.info);\r\n     axios\r\n      .post(\"/api/v1/jeepneys/update_jeepney\", {\r\n        id: props.info.id,\r\n        barangayId: values.barangayId,\r\n        plateNumber: values.plateNumber,\r\n        jeepCapacity: values.jeepCapacity,\r\n      })\r\n      .then((res) => {\r\n        setTimeout(() => {\r\n          setIsModalVisible(false);\r\n          setConfirmLoading(false);\r\n          \r\n        }, 2000);\r\n        {\r\n          ifChanged\r\n            ? Modal.success({\r\n                content: \"Successfully Updated Jeepney\",\r\n              })\r\n            : Modal.success({\r\n                content: \"Jeepney Info is up to date\",\r\n              });\r\n        }\r\n      })\r\n      .catch((error) => console.log(error));\r\n\r\n    //console.log(ifChanged);\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    Modal.error({\r\n      content: \"Failure to Update Jeepney Info\",\r\n    });\r\n    setTimeout(() => {\r\n      setIsModalVisible(true);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n    // console.log(\"Failed:\", errorInfo);\r\n  };\r\n  const onValuesChange = (changedValues, allValues) => {\r\n  console.log(\"Changed\", allValues, changedValues);\r\n    setIfChanged(true);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button type=\"primary\" className=\"modal-button\" onClick={showModal}>\r\n        <span className=\"desktop-view\"><EditOutlined /> Edit</span>\r\n        <span className=\"mobile-view\"><EditOutlined /></span>\r\n      </Button>\r\n      <Modal\r\n        title=\"Update Jeepney Info\"\r\n        confirmLoading={confirmLoading}\r\n        visible={isModalVisible}\r\n        onOk={onFinish}\r\n        onCancel={handleCancel}\r\n        afterClose={handleClose}\r\n        destroyOnClose={true}\r\n        footer={[\r\n          <Button key=\"back\" className=\"modal-button\" onClick={handleCancel}>\r\n            Cancel\r\n          </Button>,\r\n          <Button form=\"myForm\" className=\"modal-button\" htmlType=\"submit\" type=\"primary\">\r\n            Update\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <Form\r\n          layout=\"vertical\"\r\n          name=\"basic\"\r\n          form={form}\r\n          initialValues={{ remember: true }}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n          onValuesChange={onValuesChange}\r\n          id=\"myForm\"\r\n        >\r\n          {/* <Form.Item label=\"Barangay ID:\" name=\"barangayId\">\r\n            <Input disabled={true} bordered={false} />\r\n          </Form.Item> */}\r\n          <Form.Item\r\n            label=\"Barangay:\"\r\n            name=\"barangayId\"\r\n            rules={[\r\n              { required: true, message: \"Please input the Barangay's ID!\" },\r\n            ]}\r\n          >\r\n            <Select\r\n              placeholder=\"Select Barangay\"\r\n              style={{ width: '100%' }}\r\n              onChange={handleChange}\r\n            >\r\n              {barangays.map((barangay, index) => (\r\n                <Option value={barangay.id}>{barangay.barangayName}</Option>\r\n              ))}\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Plate Number:\"\r\n            name=\"plateNumber\"\r\n            rules={[\r\n              { required: true, message: \"Please input the Plate Number!\" },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Jeep Capacity:\"\r\n            name=\"jeepCapacity\"\r\n            rules={[\r\n              { required: true, message: \"Please input Jeep Capacity!\" },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditJeepneyModal;\r\n","C:\\Users\\CORNETTO\\Desktop\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\DriversTableList\\AddDriverImageModal.js",["286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307"],"import React, { useState } from \"react\";\r\nimport {\r\n  Modal,\r\n  Upload,\r\n  Button,\r\n  Space,\r\n  Row,\r\n  Col,\r\n  List,\r\n  Form,\r\n  Radio,\r\n  Input,\r\n  message,\r\n} from \"antd\";\r\nimport { UploadOutlined } from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\nimport { Content } from \"antd/lib/layout/layout\";\r\n\r\nfunction AddDriverImageModal(props) {\r\n  const [file, setFile] = useState({});\r\n  const [imageStatus, setImageStatus] = useState(false);\r\n  const [filename, setFilename] = useState(\"Choose file\");\r\n  const [uploadedImagePath, setUploadedImagePath] = useState(\"\");\r\n  const [uploadImageStatus, setUploadImageStatus] = useState(\"none\");\r\n  const [fetchImage, setFetchImage] = useState(\"\");\r\n  const [images, setImages] = useState([]);\r\n  const [info, setInfo] = useState([]);\r\n  const [ifCanceled, setIfCanceled] = useState(false);\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [form] = Form.useForm();\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n\r\n  const showModal = () => {\r\n    form.setFieldsValue({\r\n      imageOwnerId: props.info.id,\r\n      imageReferenceId: 2,\r\n    });\r\n    setUploadedImagePath();\r\n    setUploadImageStatus(\"removed\");\r\n    setFilename(\"Choose file\");\r\n    setIsModalVisible(true);\r\n    console.log(props.info);\r\n  };\r\n\r\n  const checking = (file) => {\r\n    setFilename(file);\r\n  };\r\n  const viewFile = () => {\r\n    {\r\n      (() => {\r\n        switch (uploadImageStatus) {\r\n          case \"done\":\r\n            return (\r\n              setUploadedImagePath(filename.file.response.filePath),\r\n              console.log(\"done\")\r\n            );\r\n\r\n          case \"removed\":\r\n            return console.log(\"removed\");\r\n\r\n          case \"\":\r\n            return console.log(\"none\");\r\n        }\r\n      })();\r\n    }\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIfCanceled(true);\r\n\r\n    setTimeout(() => {\r\n      setIsModalVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 500);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n  };\r\n\r\n  const onFinish = (values) => {\r\n    if (uploadImageStatus == \"done\") {\r\n      axios\r\n        .post(\"/api/v1/images/save_image\", {\r\n          imageOwnerId: props.info.id,\r\n          imageReferenceId: 2,\r\n          imagePath: uploadedImagePath,\r\n        })\r\n        .then((res) => {\r\n          message.success(\"Successfully Saved\");\r\n          setTimeout(() => {\r\n            setIsModalVisible(false);\r\n            setConfirmLoading(false);\r\n          }, 500);\r\n          setUploadedImagePath(\"\");\r\n        })\r\n        .catch((error) => console.log(error));\r\n    } else {\r\n      message.error(\"Image Saving Error\");\r\n      // console.log(\"Uploaded image is removed\");\r\n    }\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"fail\");\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  const removeImage = (val) => {\r\n    //console.log(\"Removed image\", val.response.filePath);\r\n    axios\r\n      .delete(\"/api/v1/images/delete_folder_image\", {\r\n        params: {\r\n          fileName: val.response.imagePath,\r\n          fileId: val.response.id,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        setUploadImageStatus(\"removed\");\r\n        // console.log(res.data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n    setUploadedImagePath();\r\n    message.error(`File removed Successfully.`);\r\n  };\r\n\r\n  const uploadFile = {\r\n    name: \"file\",\r\n    action: \"/api/v1/images/add_image\",\r\n    headers: {\r\n      authorization: \"authorization-text\",\r\n    },\r\n    data: { imageOwnerId: props.info.id, imageReferenceId: 2 },\r\n    onChange(info) {\r\n      if (info.file.status !== \"uploading\") {\r\n        console.log(\"uploading\", info.file, info.fileList);\r\n      }\r\n      if (info.file.status === \"done\") {\r\n        message.success(`${info.file.name} file uploaded Successfully.`);\r\n      } else if (info.file.status === \"error\") {\r\n        message.error(`${info.file.name} file upload Failed.`);\r\n      }\r\n      setUploadImageStatus(info.file.status);\r\n      setFilename(info);\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button type=\"primary\" className=\"modal-button\" onClick={showModal}>\r\n        <span className=\"desktop-view\"><UploadOutlined /> Upload</span>\r\n        <span className=\"mobile-view\"><UploadOutlined /></span>\r\n      </Button>\r\n      <Modal\r\n        title=\"Driver Image Upload\"\r\n        confirmLoading={confirmLoading}\r\n        visible={isModalVisible}\r\n        onOk={onFinish}\r\n        onCancel={handleCancel}\r\n        afterClose={handleClose}\r\n        destroyOnClose={true}\r\n        footer={[\r\n          <Button key=\"back\" className=\"modal-button\"  type=\"danger\" onClick={handleCancel}>\r\n            Close\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <List itemLayout=\"vertical\">\r\n          <List.Item>\r\n          <h4>Image Driver ID: </h4>\r\n          {props.info.id}\r\n          </List.Item>\r\n          <List.Item>\r\n          <h4>Image Driver Name: </h4>\r\n          {props.info.firstName} {props.info.firstName} {props.info.firstName}\r\n          </List.Item>\r\n          <List.Item>\r\n          <h4>Image Reference Name: </h4>\r\n          Driver\r\n          </List.Item>\r\n        </List>\r\n        <Row>\r\n          <Space style={{ width: \"100%\" }} size=\"large\">\r\n            <Upload\r\n              {...uploadFile}\r\n              onRemove={removeImage}\r\n              listType=\"picture-card\"\r\n              showUploadList={{showPreviewIcon:false}}\r\n              maxCount={5}\r\n            >\r\n                <Space>\r\n                  <UploadOutlined/>\r\n               Upload\r\n               </Space>\r\n            </Upload>\r\n          </Space>\r\n        </Row>\r\n        {/* <Row>\r\n          <Form\r\n            name=\"basic\"\r\n            form={form}\r\n            layout={\"horizontal\"}\r\n            initialValues={{ remember: true }}\r\n            onFinish={onFinish}\r\n            onFinishFailed={onFinishFailed}\r\n          >\r\n            <Form.Item label=\"Image Owner ID: \" name=\"imageOwnerId\">\r\n               {props.info.id}\r\n            </Form.Item>\r\n            <Form.Item label=\"Image Reference: \" name=\"imageReferenceId\">\r\n               Barangay\r\n            </Form.Item>\r\n          </Form>\r\n        </Row> */}\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddDriverImageModal;\r\n","C:\\Users\\CORNETTO\\Desktop\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\JeepneysTableList\\AddJeepneyImageModal.js",["308","309","310","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329"],"import React, { useState } from \"react\";\r\nimport {\r\n  Modal,\r\n  Upload,\r\n  Button,\r\n  Space,\r\n  Row,\r\n  Col,\r\n  List,\r\n  Form,\r\n  Radio,\r\n  Input,\r\n  message,\r\n} from \"antd\";\r\nimport { UploadOutlined } from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\nimport { Content } from \"antd/lib/layout/layout\";\r\n\r\nfunction AddJeepneyImageModal(props) {\r\n  const [file, setFile] = useState({});\r\n  const [imageStatus, setImageStatus] = useState(false);\r\n  const [filename, setFilename] = useState(\"Choose file\");\r\n  const [uploadedImagePath, setUploadedImagePath] = useState(\"\");\r\n  const [uploadImageStatus, setUploadImageStatus] = useState(\"none\");\r\n  const [fetchImage, setFetchImage] = useState(\"\");\r\n  const [images, setImages] = useState([]);\r\n  const [info, setInfo] = useState([]);\r\n  const [ifCanceled, setIfCanceled] = useState(false);\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [form] = Form.useForm();\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n\r\n  const showModal = () => {\r\n    form.setFieldsValue({\r\n      imageOwnerId: props.info.id,\r\n      imageReferenceId: 3,\r\n    });\r\n    setUploadedImagePath();\r\n    setUploadImageStatus(\"removed\");\r\n    setFilename(\"Choose file\");\r\n    setIsModalVisible(true);\r\n    console.log(props.info);\r\n  };\r\n\r\n  const checking = (file) => {\r\n    setFilename(file);\r\n  };\r\n  const viewFile = () => {\r\n    {\r\n      (() => {\r\n        switch (uploadImageStatus) {\r\n          case \"done\":\r\n            return (\r\n              setUploadedImagePath(filename.file.response.filePath),\r\n              console.log(\"done\")\r\n            );\r\n\r\n          case \"removed\":\r\n            return console.log(\"removed\");\r\n\r\n          case \"\":\r\n            return console.log(\"none\");\r\n        }\r\n      })();\r\n    }\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIfCanceled(true);\r\n\r\n    setTimeout(() => {\r\n      setIsModalVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 500);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n  };\r\n\r\n  const onFinish = (values) => {\r\n    if (uploadImageStatus == \"done\") {\r\n      axios\r\n        .post(\"/api/v1/images/save_image\", {\r\n          imageOwnerId: props.info.id,\r\n          imageReferenceId: 3,\r\n          imagePath: uploadedImagePath,\r\n        })\r\n        .then((res) => {\r\n          message.success(\"Successfully Saved\");\r\n          setTimeout(() => {\r\n            setIsModalVisible(false);\r\n            setConfirmLoading(false);\r\n          }, 500);\r\n          setUploadedImagePath(\"\");\r\n        })\r\n        .catch((error) => console.log(error));\r\n    } else {\r\n      message.error(\"Image Saving Error\");\r\n      // console.log(\"Uploaded image is removed\");\r\n    }\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"fail\");\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  const removeImage = (val) => {\r\n    //console.log(\"Removed image\", val.response.filePath);\r\n    axios\r\n      .delete(\"/api/v1/images/delete_folder_image\", {\r\n        params: {\r\n          fileName: val.response.imagePath,\r\n          fileId: val.response.id,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        setUploadImageStatus(\"removed\");\r\n        // console.log(res.data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n    setUploadedImagePath();\r\n    message.error(`File removed Successfully.`);\r\n  };\r\n\r\n  const uploadFile = {\r\n    name: \"file\",\r\n    action: \"/api/v1/images/add_image\",\r\n    headers: {\r\n      authorization: \"authorization-text\",\r\n    },\r\n    data: { imageOwnerId: props.info.id, imageReferenceId: 3 },\r\n    onChange(info) {\r\n      if (info.file.status !== \"uploading\") {\r\n        console.log(\"uploading\", info.file, info.fileList);\r\n      }\r\n      if (info.file.status === \"done\") {\r\n        message.success(`${info.file.name} file uploaded Successfully.`);\r\n      } else if (info.file.status === \"error\") {\r\n        message.error(`${info.file.name} file upload Failed.`);\r\n      }\r\n      setUploadImageStatus(info.file.status);\r\n      setFilename(info);\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button type=\"primary\" className=\"modal-button\" onClick={showModal}>\r\n        <span className=\"desktop-view\"><UploadOutlined /> Upload</span>\r\n        <span className=\"mobile-view\"><UploadOutlined /></span>\r\n      </Button>\r\n      <Modal\r\n        title=\"Jeepney Image Upload\"\r\n        confirmLoading={confirmLoading}\r\n        visible={isModalVisible}\r\n        onOk={onFinish}\r\n        onCancel={handleCancel}\r\n        afterClose={handleClose}\r\n        destroyOnClose={true}\r\n        footer={[\r\n          <Button key=\"back\" className=\"modal-button\"  type=\"danger\" onClick={handleCancel}>\r\n            Close\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <List itemLayout=\"vertical\">\r\n          <List.Item>\r\n          <h4>Plate Number: </h4>\r\n          {props.info.plateNumber}\r\n          </List.Item>\r\n          <List.Item>\r\n          <h4>Image Reference Name: </h4>\r\n          Jeepney\r\n          </List.Item>\r\n        </List>\r\n        <Row>\r\n          <Space style={{ width: \"100%\" }} size=\"large\">\r\n            <Upload\r\n              {...uploadFile}\r\n              onRemove={removeImage}\r\n              listType=\"picture-card\"\r\n              showUploadList={{showPreviewIcon:false}}\r\n              maxCount={5}\r\n            >\r\n                <Space>\r\n                  <UploadOutlined/>\r\n               Upload\r\n               </Space>\r\n            </Upload>\r\n          </Space>\r\n        </Row>\r\n        {/* <Row>\r\n          <Form\r\n            name=\"basic\"\r\n            form={form}\r\n            layout={\"horizontal\"}\r\n            initialValues={{ remember: true }}\r\n            onFinish={onFinish}\r\n            onFinishFailed={onFinishFailed}\r\n          >\r\n            <Form.Item label=\"Image Owner ID: \" name=\"imageOwnerId\">\r\n               {props.info.id}\r\n            </Form.Item>\r\n            <Form.Item label=\"Image Reference: \" name=\"imageReferenceId\">\r\n               Barangay\r\n            </Form.Item>\r\n          </Form>\r\n        </Row> */}\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddJeepneyImageModal;\r\n","C:\\Users\\CORNETTO\\Desktop\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\views\\UsersTableListContent.js",[],"C:\\Users\\CORNETTO\\Desktop\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\UsersTableList\\index.js",[],"C:\\Users\\CORNETTO\\Desktop\\GRAMS\\Reactjs\\admin-server\\admin-server\\client\\src\\components\\UsersTableList\\UsersTableList.js",["330","331","332","333","334"],{"ruleId":"335","replacedBy":"336"},{"ruleId":"337","replacedBy":"338"},{"ruleId":"339","severity":1,"message":"340","line":1,"column":17,"nodeType":"341","messageId":"342","endLine":1,"endColumn":25},{"ruleId":"339","severity":1,"message":"343","line":1,"column":27,"nodeType":"341","messageId":"342","endLine":1,"endColumn":36},{"ruleId":"339","severity":1,"message":"344","line":1,"column":50,"nodeType":"341","messageId":"342","endLine":1,"endColumn":59},{"ruleId":"339","severity":1,"message":"345","line":2,"column":8,"nodeType":"341","messageId":"342","endLine":2,"endColumn":12},{"ruleId":"339","severity":1,"message":"346","line":8,"column":3,"nodeType":"341","messageId":"342","endLine":8,"endColumn":17},{"ruleId":"339","severity":1,"message":"347","line":9,"column":3,"nodeType":"341","messageId":"342","endLine":9,"endColumn":7},{"ruleId":"339","severity":1,"message":"348","line":13,"column":8,"nodeType":"341","messageId":"342","endLine":13,"endColumn":28},{"ruleId":"339","severity":1,"message":"349","line":18,"column":10,"nodeType":"341","messageId":"342","endLine":18,"endColumn":15},{"ruleId":"350","severity":1,"message":"351","line":1,"column":1,"nodeType":"352","endLine":20,"endColumn":3},{"ruleId":"339","severity":1,"message":"353","line":12,"column":20,"nodeType":"341","messageId":"342","endLine":12,"endColumn":32},{"ruleId":"354","severity":1,"message":"355","line":10,"column":68,"nodeType":"356","messageId":"357","endLine":10,"endColumn":70},{"ruleId":"354","severity":1,"message":"355","line":10,"column":38,"nodeType":"356","messageId":"357","endLine":10,"endColumn":40},{"ruleId":"354","severity":1,"message":"355","line":16,"column":38,"nodeType":"356","messageId":"357","endLine":16,"endColumn":40},{"ruleId":"339","severity":1,"message":"358","line":6,"column":3,"nodeType":"341","messageId":"342","endLine":6,"endColumn":24},{"ruleId":"339","severity":1,"message":"359","line":8,"column":3,"nodeType":"341","messageId":"342","endLine":8,"endColumn":15},{"ruleId":"339","severity":1,"message":"343","line":1,"column":37,"nodeType":"341","messageId":"342","endLine":1,"endColumn":46},{"ruleId":"339","severity":1,"message":"360","line":21,"column":10,"nodeType":"341","messageId":"342","endLine":21,"endColumn":18},{"ruleId":"339","severity":1,"message":"361","line":22,"column":9,"nodeType":"341","messageId":"342","endLine":22,"endColumn":21},{"ruleId":"339","severity":1,"message":"362","line":27,"column":12,"nodeType":"341","messageId":"342","endLine":27,"endColumn":22},{"ruleId":"339","severity":1,"message":"363","line":1,"column":17,"nodeType":"341","messageId":"342","endLine":1,"endColumn":25},{"ruleId":"339","severity":1,"message":"364","line":2,"column":17,"nodeType":"341","messageId":"342","endLine":2,"endColumn":20},{"ruleId":"339","severity":1,"message":"365","line":2,"column":46,"nodeType":"341","messageId":"342","endLine":2,"endColumn":52},{"ruleId":"339","severity":1,"message":"363","line":1,"column":17,"nodeType":"341","messageId":"342","endLine":1,"endColumn":25},{"ruleId":"339","severity":1,"message":"364","line":2,"column":17,"nodeType":"341","messageId":"342","endLine":2,"endColumn":20},{"ruleId":"339","severity":1,"message":"365","line":2,"column":46,"nodeType":"341","messageId":"342","endLine":2,"endColumn":52},{"ruleId":"339","severity":1,"message":"366","line":11,"column":16,"nodeType":"341","messageId":"342","endLine":11,"endColumn":23},{"ruleId":"339","severity":1,"message":"367","line":12,"column":10,"nodeType":"341","messageId":"342","endLine":12,"endColumn":18},{"ruleId":"339","severity":1,"message":"368","line":13,"column":29,"nodeType":"341","messageId":"342","endLine":13,"endColumn":49},{"ruleId":"339","severity":1,"message":"369","line":2,"column":38,"nodeType":"341","messageId":"342","endLine":2,"endColumn":44},{"ruleId":"339","severity":1,"message":"370","line":2,"column":46,"nodeType":"341","messageId":"342","endLine":2,"endColumn":51},{"ruleId":"339","severity":1,"message":"371","line":10,"column":10,"nodeType":"341","messageId":"342","endLine":10,"endColumn":17},{"ruleId":"339","severity":1,"message":"372","line":10,"column":19,"nodeType":"341","messageId":"342","endLine":10,"endColumn":29},{"ruleId":"339","severity":1,"message":"373","line":11,"column":10,"nodeType":"341","messageId":"342","endLine":11,"endColumn":14},{"ruleId":"339","severity":1,"message":"366","line":11,"column":16,"nodeType":"341","messageId":"342","endLine":11,"endColumn":23},{"ruleId":"339","severity":1,"message":"374","line":13,"column":10,"nodeType":"341","messageId":"342","endLine":13,"endColumn":27},{"ruleId":"339","severity":1,"message":"375","line":15,"column":9,"nodeType":"341","messageId":"342","endLine":15,"endColumn":17},{"ruleId":"339","severity":1,"message":"376","line":19,"column":9,"nodeType":"341","messageId":"342","endLine":19,"endColumn":19},{"ruleId":"339","severity":1,"message":"377","line":23,"column":9,"nodeType":"341","messageId":"342","endLine":23,"endColumn":17},{"ruleId":"354","severity":1,"message":"355","line":24,"column":18,"nodeType":"356","messageId":"357","endLine":24,"endColumn":20},{"ruleId":"339","severity":1,"message":"378","line":8,"column":10,"nodeType":"341","messageId":"342","endLine":8,"endColumn":20},{"ruleId":"339","severity":1,"message":"379","line":8,"column":22,"nodeType":"341","messageId":"342","endLine":8,"endColumn":35},{"ruleId":"339","severity":1,"message":"380","line":13,"column":10,"nodeType":"341","messageId":"342","endLine":13,"endColumn":19},{"ruleId":"339","severity":1,"message":"381","line":13,"column":21,"nodeType":"341","messageId":"342","endLine":13,"endColumn":33},{"ruleId":"339","severity":1,"message":"343","line":1,"column":27,"nodeType":"341","messageId":"342","endLine":1,"endColumn":36},{"ruleId":"339","severity":1,"message":"382","line":2,"column":48,"nodeType":"341","messageId":"342","endLine":2,"endColumn":52},{"ruleId":"339","severity":1,"message":"378","line":8,"column":10,"nodeType":"341","messageId":"342","endLine":8,"endColumn":20},{"ruleId":"339","severity":1,"message":"379","line":8,"column":22,"nodeType":"341","messageId":"342","endLine":8,"endColumn":35},{"ruleId":"339","severity":1,"message":"383","line":11,"column":10,"nodeType":"341","messageId":"342","endLine":11,"endColumn":19},{"ruleId":"339","severity":1,"message":"384","line":11,"column":21,"nodeType":"341","messageId":"342","endLine":11,"endColumn":33},{"ruleId":"339","severity":1,"message":"380","line":13,"column":10,"nodeType":"341","messageId":"342","endLine":13,"endColumn":19},{"ruleId":"339","severity":1,"message":"381","line":13,"column":21,"nodeType":"341","messageId":"342","endLine":13,"endColumn":33},{"ruleId":"339","severity":1,"message":"369","line":2,"column":38,"nodeType":"341","messageId":"342","endLine":2,"endColumn":44},{"ruleId":"339","severity":1,"message":"378","line":8,"column":10,"nodeType":"341","messageId":"342","endLine":8,"endColumn":20},{"ruleId":"339","severity":1,"message":"379","line":8,"column":22,"nodeType":"341","messageId":"342","endLine":8,"endColumn":35},{"ruleId":"339","severity":1,"message":"383","line":11,"column":10,"nodeType":"341","messageId":"342","endLine":11,"endColumn":19},{"ruleId":"339","severity":1,"message":"384","line":11,"column":21,"nodeType":"341","messageId":"342","endLine":11,"endColumn":33},{"ruleId":"339","severity":1,"message":"373","line":12,"column":10,"nodeType":"341","messageId":"342","endLine":12,"endColumn":14},{"ruleId":"339","severity":1,"message":"366","line":12,"column":16,"nodeType":"341","messageId":"342","endLine":12,"endColumn":23},{"ruleId":"339","severity":1,"message":"367","line":13,"column":10,"nodeType":"341","messageId":"342","endLine":13,"endColumn":18},{"ruleId":"339","severity":1,"message":"374","line":14,"column":10,"nodeType":"341","messageId":"342","endLine":14,"endColumn":27},{"ruleId":"339","severity":1,"message":"368","line":14,"column":29,"nodeType":"341","messageId":"342","endLine":14,"endColumn":49},{"ruleId":"339","severity":1,"message":"375","line":21,"column":9,"nodeType":"341","messageId":"342","endLine":21,"endColumn":17},{"ruleId":"339","severity":1,"message":"343","line":1,"column":27,"nodeType":"341","messageId":"342","endLine":1,"endColumn":36},{"ruleId":"339","severity":1,"message":"383","line":12,"column":10,"nodeType":"341","messageId":"342","endLine":12,"endColumn":19},{"ruleId":"339","severity":1,"message":"384","line":12,"column":21,"nodeType":"341","messageId":"342","endLine":12,"endColumn":33},{"ruleId":"339","severity":1,"message":"385","line":25,"column":9,"nodeType":"341","messageId":"342","endLine":25,"endColumn":17},{"ruleId":"386","severity":1,"message":"387","line":58,"column":9,"nodeType":"388","messageId":"389","endLine":66,"endColumn":10},{"ruleId":"339","severity":1,"message":"390","line":8,"column":3,"nodeType":"341","messageId":"342","endLine":8,"endColumn":6},{"ruleId":"339","severity":1,"message":"391","line":11,"column":3,"nodeType":"341","messageId":"342","endLine":11,"endColumn":8},{"ruleId":"339","severity":1,"message":"392","line":12,"column":3,"nodeType":"341","messageId":"342","endLine":12,"endColumn":8},{"ruleId":"339","severity":1,"message":"393","line":17,"column":10,"nodeType":"341","messageId":"342","endLine":17,"endColumn":17},{"ruleId":"339","severity":1,"message":"373","line":20,"column":10,"nodeType":"341","messageId":"342","endLine":20,"endColumn":14},{"ruleId":"339","severity":1,"message":"366","line":20,"column":16,"nodeType":"341","messageId":"342","endLine":20,"endColumn":23},{"ruleId":"339","severity":1,"message":"394","line":21,"column":10,"nodeType":"341","messageId":"342","endLine":21,"endColumn":21},{"ruleId":"339","severity":1,"message":"395","line":21,"column":23,"nodeType":"341","messageId":"342","endLine":21,"endColumn":37},{"ruleId":"339","severity":1,"message":"396","line":25,"column":10,"nodeType":"341","messageId":"342","endLine":25,"endColumn":20},{"ruleId":"339","severity":1,"message":"397","line":25,"column":22,"nodeType":"341","messageId":"342","endLine":25,"endColumn":35},{"ruleId":"339","severity":1,"message":"398","line":26,"column":10,"nodeType":"341","messageId":"342","endLine":26,"endColumn":16},{"ruleId":"339","severity":1,"message":"399","line":26,"column":18,"nodeType":"341","messageId":"342","endLine":26,"endColumn":27},{"ruleId":"339","severity":1,"message":"400","line":27,"column":10,"nodeType":"341","messageId":"342","endLine":27,"endColumn":14},{"ruleId":"339","severity":1,"message":"401","line":27,"column":16,"nodeType":"341","messageId":"342","endLine":27,"endColumn":23},{"ruleId":"339","severity":1,"message":"402","line":28,"column":10,"nodeType":"341","messageId":"342","endLine":28,"endColumn":20},{"ruleId":"339","severity":1,"message":"375","line":45,"column":9,"nodeType":"341","messageId":"342","endLine":45,"endColumn":17},{"ruleId":"339","severity":1,"message":"377","line":48,"column":9,"nodeType":"341","messageId":"342","endLine":48,"endColumn":17},{"ruleId":"386","severity":1,"message":"387","line":49,"column":5,"nodeType":"388","messageId":"389","endLine":65,"endColumn":6},{"ruleId":"403","severity":1,"message":"404","line":51,"column":9,"nodeType":"405","messageId":"406","endLine":63,"endColumn":10},{"ruleId":"339","severity":1,"message":"385","line":68,"column":9,"nodeType":"341","messageId":"342","endLine":68,"endColumn":17},{"ruleId":"354","severity":1,"message":"355","line":87,"column":27,"nodeType":"356","messageId":"357","endLine":87,"endColumn":29},{"ruleId":"339","severity":1,"message":"407","line":109,"column":9,"nodeType":"341","messageId":"342","endLine":109,"endColumn":23},{"ruleId":"339","severity":1,"message":"343","line":1,"column":27,"nodeType":"341","messageId":"342","endLine":1,"endColumn":36},{"ruleId":"339","severity":1,"message":"380","line":12,"column":10,"nodeType":"341","messageId":"342","endLine":12,"endColumn":19},{"ruleId":"339","severity":1,"message":"381","line":12,"column":21,"nodeType":"341","messageId":"342","endLine":12,"endColumn":33},{"ruleId":"339","severity":1,"message":"343","line":1,"column":27,"nodeType":"341","messageId":"342","endLine":1,"endColumn":36},{"ruleId":"339","severity":1,"message":"385","line":27,"column":9,"nodeType":"341","messageId":"342","endLine":27,"endColumn":17},{"ruleId":"386","severity":1,"message":"387","line":63,"column":9,"nodeType":"388","messageId":"389","endLine":71,"endColumn":10},{"ruleId":"339","severity":1,"message":"385","line":42,"column":9,"nodeType":"341","messageId":"342","endLine":42,"endColumn":17},{"ruleId":"386","severity":1,"message":"387","line":75,"column":9,"nodeType":"388","messageId":"389","endLine":83,"endColumn":10},{"ruleId":"339","severity":1,"message":"390","line":8,"column":3,"nodeType":"341","messageId":"342","endLine":8,"endColumn":6},{"ruleId":"339","severity":1,"message":"391","line":11,"column":3,"nodeType":"341","messageId":"342","endLine":11,"endColumn":8},{"ruleId":"339","severity":1,"message":"392","line":12,"column":3,"nodeType":"341","messageId":"342","endLine":12,"endColumn":8},{"ruleId":"339","severity":1,"message":"393","line":17,"column":10,"nodeType":"341","messageId":"342","endLine":17,"endColumn":17},{"ruleId":"339","severity":1,"message":"373","line":20,"column":10,"nodeType":"341","messageId":"342","endLine":20,"endColumn":14},{"ruleId":"339","severity":1,"message":"366","line":20,"column":16,"nodeType":"341","messageId":"342","endLine":20,"endColumn":23},{"ruleId":"339","severity":1,"message":"394","line":21,"column":10,"nodeType":"341","messageId":"342","endLine":21,"endColumn":21},{"ruleId":"339","severity":1,"message":"395","line":21,"column":23,"nodeType":"341","messageId":"342","endLine":21,"endColumn":37},{"ruleId":"339","severity":1,"message":"396","line":25,"column":10,"nodeType":"341","messageId":"342","endLine":25,"endColumn":20},{"ruleId":"339","severity":1,"message":"397","line":25,"column":22,"nodeType":"341","messageId":"342","endLine":25,"endColumn":35},{"ruleId":"339","severity":1,"message":"398","line":26,"column":10,"nodeType":"341","messageId":"342","endLine":26,"endColumn":16},{"ruleId":"339","severity":1,"message":"399","line":26,"column":18,"nodeType":"341","messageId":"342","endLine":26,"endColumn":27},{"ruleId":"339","severity":1,"message":"400","line":27,"column":10,"nodeType":"341","messageId":"342","endLine":27,"endColumn":14},{"ruleId":"339","severity":1,"message":"401","line":27,"column":16,"nodeType":"341","messageId":"342","endLine":27,"endColumn":23},{"ruleId":"339","severity":1,"message":"402","line":28,"column":10,"nodeType":"341","messageId":"342","endLine":28,"endColumn":20},{"ruleId":"339","severity":1,"message":"375","line":45,"column":9,"nodeType":"341","messageId":"342","endLine":45,"endColumn":17},{"ruleId":"339","severity":1,"message":"377","line":48,"column":9,"nodeType":"341","messageId":"342","endLine":48,"endColumn":17},{"ruleId":"386","severity":1,"message":"387","line":49,"column":5,"nodeType":"388","messageId":"389","endLine":65,"endColumn":6},{"ruleId":"403","severity":1,"message":"404","line":51,"column":9,"nodeType":"405","messageId":"406","endLine":63,"endColumn":10},{"ruleId":"339","severity":1,"message":"385","line":68,"column":9,"nodeType":"341","messageId":"342","endLine":68,"endColumn":17},{"ruleId":"354","severity":1,"message":"355","line":87,"column":27,"nodeType":"356","messageId":"357","endLine":87,"endColumn":29},{"ruleId":"339","severity":1,"message":"407","line":109,"column":9,"nodeType":"341","messageId":"342","endLine":109,"endColumn":23},{"ruleId":"339","severity":1,"message":"390","line":8,"column":3,"nodeType":"341","messageId":"342","endLine":8,"endColumn":6},{"ruleId":"339","severity":1,"message":"391","line":11,"column":3,"nodeType":"341","messageId":"342","endLine":11,"endColumn":8},{"ruleId":"339","severity":1,"message":"392","line":12,"column":3,"nodeType":"341","messageId":"342","endLine":12,"endColumn":8},{"ruleId":"339","severity":1,"message":"393","line":17,"column":10,"nodeType":"341","messageId":"342","endLine":17,"endColumn":17},{"ruleId":"339","severity":1,"message":"373","line":20,"column":10,"nodeType":"341","messageId":"342","endLine":20,"endColumn":14},{"ruleId":"339","severity":1,"message":"366","line":20,"column":16,"nodeType":"341","messageId":"342","endLine":20,"endColumn":23},{"ruleId":"339","severity":1,"message":"394","line":21,"column":10,"nodeType":"341","messageId":"342","endLine":21,"endColumn":21},{"ruleId":"339","severity":1,"message":"395","line":21,"column":23,"nodeType":"341","messageId":"342","endLine":21,"endColumn":37},{"ruleId":"339","severity":1,"message":"396","line":25,"column":10,"nodeType":"341","messageId":"342","endLine":25,"endColumn":20},{"ruleId":"339","severity":1,"message":"397","line":25,"column":22,"nodeType":"341","messageId":"342","endLine":25,"endColumn":35},{"ruleId":"339","severity":1,"message":"398","line":26,"column":10,"nodeType":"341","messageId":"342","endLine":26,"endColumn":16},{"ruleId":"339","severity":1,"message":"399","line":26,"column":18,"nodeType":"341","messageId":"342","endLine":26,"endColumn":27},{"ruleId":"339","severity":1,"message":"400","line":27,"column":10,"nodeType":"341","messageId":"342","endLine":27,"endColumn":14},{"ruleId":"339","severity":1,"message":"401","line":27,"column":16,"nodeType":"341","messageId":"342","endLine":27,"endColumn":23},{"ruleId":"339","severity":1,"message":"402","line":28,"column":10,"nodeType":"341","messageId":"342","endLine":28,"endColumn":20},{"ruleId":"339","severity":1,"message":"375","line":45,"column":9,"nodeType":"341","messageId":"342","endLine":45,"endColumn":17},{"ruleId":"339","severity":1,"message":"377","line":48,"column":9,"nodeType":"341","messageId":"342","endLine":48,"endColumn":17},{"ruleId":"386","severity":1,"message":"387","line":49,"column":5,"nodeType":"388","messageId":"389","endLine":65,"endColumn":6},{"ruleId":"403","severity":1,"message":"404","line":51,"column":9,"nodeType":"405","messageId":"406","endLine":63,"endColumn":10},{"ruleId":"339","severity":1,"message":"385","line":68,"column":9,"nodeType":"341","messageId":"342","endLine":68,"endColumn":17},{"ruleId":"354","severity":1,"message":"355","line":87,"column":27,"nodeType":"356","messageId":"357","endLine":87,"endColumn":29},{"ruleId":"339","severity":1,"message":"407","line":109,"column":9,"nodeType":"341","messageId":"342","endLine":109,"endColumn":23},{"ruleId":"339","severity":1,"message":"363","line":1,"column":17,"nodeType":"341","messageId":"342","endLine":1,"endColumn":25},{"ruleId":"339","severity":1,"message":"364","line":2,"column":17,"nodeType":"341","messageId":"342","endLine":2,"endColumn":20},{"ruleId":"339","severity":1,"message":"365","line":2,"column":46,"nodeType":"341","messageId":"342","endLine":2,"endColumn":52},{"ruleId":"339","severity":1,"message":"408","line":14,"column":25,"nodeType":"341","messageId":"342","endLine":14,"endColumn":41},{"ruleId":"339","severity":1,"message":"409","line":41,"column":9,"nodeType":"341","messageId":"342","endLine":41,"endColumn":20},"no-native-reassign",["410"],"no-negated-in-lhs",["411"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Component' is defined but never used.","'logo' is defined but never used.","'ProtectedRoute' is defined but never used.","'Link' is defined but never used.","'AdminProtectedRoutes' is defined but never used.","'Admin' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'errorMessage' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'UnorderedListOutlined' is defined but never used.","'SyncOutlined' is defined but never used.","'selected' is assigned a value but never used.","'clickSideBar' is assigned a value but never used.","'getContent' is defined but never used.","'Suspense' is defined but never used.","'Tag' is defined but never used.","'Button' is defined but never used.","'setFile' is assigned a value but never used.","'filename' is assigned a value but never used.","'setUploadedImagePath' is assigned a value but never used.","'Upload' is defined but never used.","'Space' is defined but never used.","'drivers' is assigned a value but never used.","'setDrivers' is assigned a value but never used.","'file' is assigned a value but never used.","'uploadedImagePath' is assigned a value but never used.","'checking' is assigned a value but never used.","'unchecking' is assigned a value but never used.","'viewFile' is assigned a value but never used.","'modalValue' is assigned a value but never used.","'setModalValue' is assigned a value but never used.","'imagePath' is assigned a value but never used.","'setImagePath' is assigned a value but never used.","'List' is defined but never used.","'barangays' is assigned a value but never used.","'setBarangays' is assigned a value but never used.","'handleOk' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'Col' is defined but never used.","'Radio' is defined but never used.","'Input' is defined but never used.","'Content' is defined but never used.","'imageStatus' is assigned a value but never used.","'setImageStatus' is assigned a value but never used.","'fetchImage' is assigned a value but never used.","'setFetchImage' is assigned a value but never used.","'images' is assigned a value but never used.","'setImages' is assigned a value but never used.","'info' is assigned a value but never used.","'setInfo' is assigned a value but never used.","'ifCanceled' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'onFinishFailed' is assigned a value but never used.","'setDataFromModal' is assigned a value but never used.","'modalClosed' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]