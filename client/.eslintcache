[{"D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\index.js":"1","D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\App.js":"2","D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\reportWebVitals.js":"3","D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\components\\GlobalContext\\AuthContext.js":"4","D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\views\\BarangaysTableListContent.js":"5","D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\views\\AssignJeepneyDriverDashboard.js":"6","D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\views\\UsersTableListContent.js":"7","D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\views\\AdminDashboard.js":"8","D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\views\\Login.js":"9","D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\views\\JeepneysTableListContent.js":"10","D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\views\\DriversTableListContent.js":"11","D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\components\\ProtectedRoutes\\LoginProtectedRoutes.js":"12","D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\views\\Register.js":"13","D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\components\\ProtectedRoutes\\MainProtectedRoutes.js":"14","D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\components\\ProtectedRoutes\\AdminProtectedRoutes.js":"15","D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\components\\Layout\\AdminLayout.js":"16","D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\components\\GlobalReducer\\AuthReducer.js":"17","D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\views\\index.js":"18","D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\views\\Imaged.js":"19","D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\views\\Admin.js":"20","D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\components\\AssignJeepneyDriver\\index.js":"21","D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\components\\UsersTableList\\index.js":"22","D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\components\\BarangaysTableList\\index.js":"23","D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\components\\Dashboard\\index.js":"24","D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\components\\JeepneysTableList\\index.js":"25","D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\components\\DriversTableList\\index.js":"26","D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\components\\Dashboard\\Dashboard.js":"27","D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\components\\AssignJeepneyDriver\\AssignJeepneyDriver.js":"28","D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\components\\UsersTableList\\UsersTableList.js":"29","D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\components\\BarangaysTableList\\BarangaysTableList.js":"30","D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\components\\JeepneysTableList\\JeepneysTableList.js":"31","D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\components\\DriversTableList\\DriversTableList.js":"32","D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\components\\BarangaysTableList\\AddBarangayImageModal.js":"33","D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\components\\UsersTableList\\UsersInfoModal.js":"34","D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\components\\JeepneysTableList\\AddJeepneyImageModal.js":"35","D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\components\\DriversTableList\\EditDriverModal.js":"36","D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\components\\DriversTableList\\AddDriverImageModal.js":"37","D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\components\\DriversTableList\\AddDriverModal.js":"38","D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\components\\DriversTableList\\DriversInfoModal.js":"39","D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\components\\JeepneysTableList\\EditJeepneyModal.js":"40","D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\components\\JeepneysTableList\\AddJeepneyModal.js":"41","D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\components\\BarangaysTableList\\AddBarangayModal.js":"42","D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\components\\JeepneysTableList\\JeepneysInfoModal.js":"43","D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\components\\BarangaysTableList\\BarangaysInfoModal.js":"44","D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\components\\BarangaysTableList\\EditBarangayModal.js":"45","D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\views\\FunFactsTableListContents.js":"46","D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\components\\FunFactsTableList\\index.js":"47","D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\components\\FunFactsTableList\\FunFactsTableList.js":"48"},{"size":653,"mtime":1612841026916,"results":"49","hashOfConfig":"50"},{"size":3153,"mtime":1614043721524,"results":"51","hashOfConfig":"50"},{"size":375,"mtime":1612841026917,"results":"52","hashOfConfig":"50"},{"size":1906,"mtime":1612841026906,"results":"53","hashOfConfig":"50"},{"size":427,"mtime":1612841026919,"results":"54","hashOfConfig":"50"},{"size":504,"mtime":1613009126427,"results":"55","hashOfConfig":"50"},{"size":409,"mtime":1612841026923,"results":"56","hashOfConfig":"50"},{"size":380,"mtime":1612841026918,"results":"57","hashOfConfig":"50"},{"size":2774,"mtime":1613017511377,"results":"58","hashOfConfig":"50"},{"size":457,"mtime":1612841026922,"results":"59","hashOfConfig":"50"},{"size":417,"mtime":1612841026921,"results":"60","hashOfConfig":"50"},{"size":609,"mtime":1612841026913,"results":"61","hashOfConfig":"50"},{"size":3988,"mtime":1612841026923,"results":"62","hashOfConfig":"50"},{"size":688,"mtime":1612841026914,"results":"63","hashOfConfig":"50"},{"size":636,"mtime":1612841026913,"results":"64","hashOfConfig":"50"},{"size":3001,"mtime":1614043721526,"results":"65","hashOfConfig":"50"},{"size":447,"mtime":1612841026907,"results":"66","hashOfConfig":"50"},{"size":48,"mtime":1612841026923,"results":"67","hashOfConfig":"50"},{"size":287,"mtime":1612841026922,"results":"68","hashOfConfig":"50"},{"size":1093,"mtime":1612848680470,"results":"69","hashOfConfig":"50"},{"size":207,"mtime":1613009099691,"results":"70","hashOfConfig":"50"},{"size":132,"mtime":1612841026915,"results":"71","hashOfConfig":"50"},{"size":202,"mtime":1612841026902,"results":"72","hashOfConfig":"50"},{"size":157,"mtime":1612841026902,"results":"73","hashOfConfig":"50"},{"size":141,"mtime":1612841026911,"results":"74","hashOfConfig":"50"},{"size":192,"mtime":1612841026906,"results":"75","hashOfConfig":"50"},{"size":116,"mtime":1612841026902,"results":"76","hashOfConfig":"50"},{"size":9732,"mtime":1614043721525,"results":"77","hashOfConfig":"50"},{"size":3128,"mtime":1613827571277,"results":"78","hashOfConfig":"50"},{"size":3655,"mtime":1613827571261,"results":"79","hashOfConfig":"50"},{"size":3846,"mtime":1613827571269,"results":"80","hashOfConfig":"50"},{"size":3917,"mtime":1613827571265,"results":"81","hashOfConfig":"50"},{"size":6404,"mtime":1613827571260,"results":"82","hashOfConfig":"50"},{"size":4268,"mtime":1613827571276,"results":"83","hashOfConfig":"50"},{"size":6213,"mtime":1613827571266,"results":"84","hashOfConfig":"50"},{"size":5372,"mtime":1613827571265,"results":"85","hashOfConfig":"50"},{"size":6370,"mtime":1613827571263,"results":"86","hashOfConfig":"50"},{"size":6183,"mtime":1612841026904,"results":"87","hashOfConfig":"50"},{"size":5513,"mtime":1613827571264,"results":"88","hashOfConfig":"50"},{"size":5207,"mtime":1613827571267,"results":"89","hashOfConfig":"50"},{"size":5396,"mtime":1613094220703,"results":"90","hashOfConfig":"50"},{"size":4442,"mtime":1612841026900,"results":"91","hashOfConfig":"50"},{"size":5098,"mtime":1613827571268,"results":"92","hashOfConfig":"50"},{"size":5110,"mtime":1613827571261,"results":"93","hashOfConfig":"50"},{"size":4642,"mtime":1613827571262,"results":"94","hashOfConfig":"50"},{"size":492,"mtime":1613828317700,"results":"95","hashOfConfig":"50"},{"size":197,"mtime":1613828217598,"results":"96","hashOfConfig":"50"},{"size":3404,"mtime":1613831259522,"results":"97","hashOfConfig":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"1etwd05",{"filePath":"101","messages":"102","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"100"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"100"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"100"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"100"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"100"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"100"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"100"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"100"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"100"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"100"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"100"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"100"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"100"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"100"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"100"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"100"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"100"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"100"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"210"},"D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\index.js",[],["216","217"],"D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\App.js",["218","219","220","221","222","223","224","225"],"D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\reportWebVitals.js",[],"D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\components\\GlobalContext\\AuthContext.js",[],"D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\views\\BarangaysTableListContent.js",[],"D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\views\\AssignJeepneyDriverDashboard.js",[],"D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\views\\UsersTableListContent.js",[],"D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\views\\AdminDashboard.js",[],"D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\views\\Login.js",["226","227"],"import React, { useContext } from \"react\";\r\nimport { Form, Input, Button, Card, Row, Col, Typography, Modal } from \"antd\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { AuthContext } from \".././components/GlobalContext/AuthContext\";\r\nimport Imaged from \"./Imaged\";\r\nconst { Title } = Typography;\r\n\r\nfunction Login({ history }) {\r\n  let Auth = useContext(AuthContext);\r\n\r\n  const onFinish = async (values) => {\r\n    let { success, errorMessage } = await Auth.authenticate(values);\r\n    {\r\n      success\r\n        ? Modal.success({\r\n            content: \"Successfully Log in!\",\r\n          })\r\n        : Modal.error({\r\n            content: \"Email or Password is incorrect!\",\r\n          });\r\n    }\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  return (\r\n    <div className=\"loginCard\">\r\n      <Row\r\n        type=\"flex\"\r\n        justify=\"center\"\r\n        align=\"middle\"\r\n        style={{ minHeight: \"80vh\" }}\r\n      >\r\n        <Col>\r\n          <Card\r\n            title={<Title level={2}>Retrack ADMIN</Title>}\r\n            className=\"loginCardStyle\"\r\n          >\r\n            <cardBody>\r\n              <Imaged />\r\n              <Form\r\n                layout=\"vertical\"\r\n                name=\"basic\"\r\n                initialValues={{ remember: true }}\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n              >\r\n                <Form.Item\r\n                  label=\"Email:\"\r\n                  name=\"email\"\r\n                  rules={[\r\n                    {\r\n                      type: \"email\",\r\n                      message: \"The input is not valid E-mail!\",\r\n                    },\r\n                    { required: true, message: \"Please input your Email!\" },\r\n                  ]}\r\n                >\r\n                  <Input />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  label=\"Password:\"\r\n                  name=\"password\"\r\n                  rules={[\r\n                    { required: true, message: \"Please input your password!\" },\r\n                  ]}\r\n                >\r\n                  <Input.Password />\r\n                </Form.Item>\r\n                <Form.Item>\r\n                  <a style={{ float: \"right\" }} href=\"/register\">\r\n                    Create an Account?\r\n                  </a>\r\n                </Form.Item>\r\n                <Button\r\n                  type=\"primary\"\r\n                  htmlType=\"submit\"\r\n                  shape=\"round\"\r\n                  className=\"form-button\"\r\n                >\r\n                  LOGIN\r\n                </Button>\r\n              </Form>\r\n            </cardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Login);\r\n","D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\views\\JeepneysTableListContent.js",[],"D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\views\\DriversTableListContent.js",[],"D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\components\\ProtectedRoutes\\LoginProtectedRoutes.js",["228"],"import React from \"react\";\r\nimport { Route, Redirect, withRouter } from \"react-router-dom\";\r\n\r\nfunction LoginProtectedRoutes({ component: Component, Auth, history, res }) {\r\n  return (\r\n    <Route\r\n      {...res}\r\n      render={(props) =>\r\n        Auth.state.isAuthenticated &&\r\n        Auth.state.userData.myStatus == \"admin\" ? (\r\n          <Redirect\r\n            to={{\r\n              pathname: `/`,\r\n              state: { from: props.location },\r\n            }}\r\n          />\r\n        ) : (\r\n          <Component />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default withRouter(LoginProtectedRoutes);\r\n","D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\views\\Register.js",[],"D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\components\\ProtectedRoutes\\MainProtectedRoutes.js",["229"],"import React from \"react\";\r\nimport { Route, Redirect, withRouter } from \"react-router-dom\";\r\n\r\nfunction MainProtectedRoutes({\r\n  layout: Layout,\r\n  component: Component,\r\n  Auth,\r\n  history,\r\n  res,\r\n}) {\r\n  return (\r\n    <Route\r\n      {...res}\r\n      render={(props) =>\r\n        Auth.state.isAuthenticated &&\r\n        Auth.state.userData.myStatus == \"admin\" ? (\r\n          <Layout>\r\n            <Component />\r\n          </Layout>\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/login\",\r\n              state: { from: props.location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default withRouter(MainProtectedRoutes);\r\n","D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\components\\ProtectedRoutes\\AdminProtectedRoutes.js",["230"],"import React from \"react\";\r\nimport { Route, Redirect, withRouter } from \"react-router-dom\";\r\n\r\nfunction AdminProtectedRoute({ component: Component, Auth, history, res }) {\r\n  console.log(Auth);\r\n  return (\r\n    <Route\r\n      {...res}\r\n      render={(props) =>\r\n        Auth.state.isAuthenticated && Auth.state.userData.myStatus == \"home\" ? (\r\n          <Component Auth={Auth} />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/login\",\r\n              state: { from: props.location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default withRouter(AdminProtectedRoute);\r\n","D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\components\\Layout\\AdminLayout.js",[],"D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\components\\GlobalReducer\\AuthReducer.js",["231"],"export default (state, action) => {\r\n  switch (action.type) {\r\n    case \"LOAD_TOKEN\":\r\n      return {\r\n        ...state,\r\n        secureToken: action.secureToken,\r\n        userData: action.userData,\r\n        isAuthenticated: true,\r\n        isLoading: false,\r\n      };\r\n\r\n    case \"LOADING\":\r\n      return { ...state, isLoading: false };\r\n\r\n    case \"LOAD_USER_DATA\":\r\n      return { ...state };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n","D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\views\\index.js",[],"D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\views\\Imaged.js",[],"D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\views\\Admin.js",["232","233","234"],"import React, { Suspense, useState } from \"react\";\r\nimport \"../App.css\";\r\n// import Dashboard from \"./Dashboard\"\r\n// import JeepneyDasboard from \"./JeepneyDasboard\"\r\n// import BarangayDashboard from \"./BarangayDashboard\"\r\n// import UploadDashboard from \"./UploadDashboard\"\r\n// import DriversTableListContent from \"./DriversTableListContent\"\r\n// import BarangaysTableListContent from \"./BarangaysTableListContent\"\r\n\r\n// import { Layout, Menu } from \"antd\"\r\n// import {\r\n//   UploadOutlined,\r\n//   UserOutlined,\r\n//   VideoCameraOutlined,\r\n// } from \"@ant-design/icons\"\r\n// import Imaged from \"./Imaged\"\r\n\r\n// const { Header, Content, Footer, Sider } = Layout\r\n\r\nfunction Admin() {\r\n  const [selected, setSelected] = useState(\"\");\r\n  const clickSideBar = (selectedMenuItem) => {\r\n    //console.log(selectedMenuItem);\r\n    setSelected(selectedMenuItem);\r\n  };\r\n\r\n  function getContent(selected) {\r\n    return <div></div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Suspense fallback={<h1>LOADING</h1>}>\r\n        <h1>this is admin</h1>\r\n      </Suspense>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Admin;\r\n","D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\components\\AssignJeepneyDriver\\index.js",[],"D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\components\\UsersTableList\\index.js",[],"D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\components\\BarangaysTableList\\index.js",[],"D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\components\\Dashboard\\index.js",[],"D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\components\\JeepneysTableList\\index.js",[],"D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\components\\DriversTableList\\index.js",[],"D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\components\\Dashboard\\Dashboard.js",[],"D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\components\\AssignJeepneyDriver\\AssignJeepneyDriver.js",["235","236","237","238","239","240","241","242","243","244","245","246"],"D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\components\\UsersTableList\\UsersTableList.js",[],"D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\components\\BarangaysTableList\\BarangaysTableList.js",[],"D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\components\\JeepneysTableList\\JeepneysTableList.js",[],"D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\components\\DriversTableList\\DriversTableList.js",[],"D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\components\\BarangaysTableList\\AddBarangayImageModal.js",["247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265"],"import React, { useState } from \"react\";\r\nimport { Modal, Upload, Button, Space, Row, List, Form, message } from \"antd\";\r\nimport { UploadOutlined } from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\nimport { Content } from \"antd/lib/layout/layout\";\r\n\r\nfunction AddBarangayImageModal(props) {\r\n  const [file, setFile] = useState({});\r\n  const [imageStatus, setImageStatus] = useState(false);\r\n  const [filename, setFilename] = useState(\"Choose file\");\r\n  const [uploadedImagePath, setUploadedImagePath] = useState(\"\");\r\n  const [uploadImageStatus, setUploadImageStatus] = useState(\"none\");\r\n  const [fetchImage, setFetchImage] = useState(\"\");\r\n  const [images, setImages] = useState([]);\r\n  const [info, setInfo] = useState([]);\r\n  const [ifCanceled, setIfCanceled] = useState(false);\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [form] = Form.useForm();\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n\r\n  const showModal = () => {\r\n    form.setFieldsValue({\r\n      imageOwnerId: props.info.id,\r\n      imageReferenceId: 1,\r\n    });\r\n    setUploadedImagePath();\r\n    setUploadImageStatus(\"removed\");\r\n    setFilename(\"Choose file\");\r\n    setIsModalVisible(true);\r\n    console.log(props.info);\r\n  };\r\n\r\n  const checking = (file) => {\r\n    setFilename(file);\r\n  };\r\n  const viewFile = () => {\r\n    {\r\n      (() => {\r\n        switch (uploadImageStatus) {\r\n          case \"done\":\r\n            return (\r\n              setUploadedImagePath(filename.file.response.filePath),\r\n              console.log(\"done\")\r\n            );\r\n\r\n          case \"removed\":\r\n            return console.log(\"removed\");\r\n\r\n          case \"\":\r\n            return console.log(\"none\");\r\n        }\r\n      })();\r\n    }\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIfCanceled(true);\r\n\r\n    setTimeout(() => {\r\n      setIsModalVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 500);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n  };\r\n\r\n  const onFinish = (values) => {\r\n    if (uploadImageStatus == \"done\") {\r\n      axios\r\n        .post(\"/api/v1/images/save_image\", {\r\n          imageOwnerId: props.info.id,\r\n          imageReferenceId: 1,\r\n          imagePath: uploadedImagePath,\r\n        })\r\n        .then((res) => {\r\n          message.success(\"Successfully Saved\");\r\n          setTimeout(() => {\r\n            setIsModalVisible(false);\r\n            setConfirmLoading(false);\r\n          }, 500);\r\n          setUploadedImagePath(\"\");\r\n        })\r\n        .catch((error) => console.log(error));\r\n    } else {\r\n      message.error(\"Image Saving Error\");\r\n      // console.log(\"Uploaded image is removed\");\r\n    }\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"fail\");\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  const removeImage = (val) => {\r\n    //console.log(\"Removed image\", val.response.filePath);\r\n    axios\r\n      .delete(\"/api/v1/images/delete_folder_image\", {\r\n        params: {\r\n          fileName: val.response.imagePath,\r\n          fileId: val.response.id,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        setUploadImageStatus(\"removed\");\r\n        // console.log(res.data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n    setUploadedImagePath();\r\n    message.error(`File removed Successfully.`);\r\n  };\r\n\r\n  const uploadFile = {\r\n    name: \"file\",\r\n    action: \"/api/v1/images/add_image\",\r\n    headers: {\r\n      authorization: \"authorization-text\",\r\n    },\r\n    data: { imageOwnerId: props.info.id, imageReferenceId: 1 },\r\n    onChange(info) {\r\n      if (info.file.status !== \"uploading\") {\r\n        console.log(\"uploading\", info.file, info.fileList);\r\n      }\r\n      if (info.file.status === \"done\") {\r\n        message.success(`${info.file.name} file uploaded Successfully.`);\r\n      } else if (info.file.status === \"error\") {\r\n        message.error(`${info.file.name} file upload Failed.`);\r\n      }\r\n      setUploadImageStatus(info.file.status);\r\n      setFilename(info);\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button type=\"primary\" className=\"modal-button-upload\" onClick={showModal}>\r\n        <span className=\"desktop-view\">\r\n          <UploadOutlined /> Upload\r\n        </span>\r\n        <span className=\"mobile-view\">\r\n          <UploadOutlined />\r\n        </span>\r\n      </Button>\r\n      <Modal\r\n        title=\"Barangay Image Upload\"\r\n        confirmLoading={confirmLoading}\r\n        visible={isModalVisible}\r\n        onOk={onFinish}\r\n        onCancel={handleCancel}\r\n        afterClose={handleClose}\r\n        destroyOnClose={true}\r\n        footer={[\r\n          <Button\r\n            key=\"back\"\r\n            className=\"modal-button\"\r\n            type=\"danger\"\r\n            onClick={handleCancel}\r\n          >\r\n            Close\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <List itemLayout=\"vertical\">\r\n          <List.Item>\r\n            <h4>Image Barangay ID: </h4>\r\n            {props.info.id}\r\n          </List.Item>\r\n          <List.Item>\r\n            <h4>Image Barangay Name: </h4>\r\n            {props.info.barangayName}\r\n          </List.Item>\r\n          <List.Item>\r\n            <h4>Image Reference Name: </h4>\r\n            Barangay\r\n          </List.Item>\r\n        </List>\r\n        <Row>\r\n          <Space style={{ width: \"100%\" }} size=\"large\">\r\n            <Upload\r\n              {...uploadFile}\r\n              onRemove={removeImage}\r\n              listType=\"picture-card\"\r\n              showUploadList={{ showPreviewIcon: false }}\r\n              maxCount={5}\r\n            >\r\n              <Space>\r\n                <UploadOutlined />\r\n                Upload\r\n              </Space>\r\n            </Upload>\r\n          </Space>\r\n        </Row>\r\n        {/* <Row>\r\n          <Form\r\n            name=\"basic\"\r\n            form={form}\r\n            layout={\"horizontal\"}\r\n            initialValues={{ remember: true }}\r\n            onFinish={onFinish}\r\n            onFinishFailed={onFinishFailed}\r\n          >\r\n            <Form.Item label=\"Image Owner ID: \" name=\"imageOwnerId\">\r\n               {props.info.id}\r\n            </Form.Item>\r\n            <Form.Item label=\"Image Reference: \" name=\"imageReferenceId\">\r\n               Barangay\r\n            </Form.Item>\r\n          </Form>\r\n        </Row> */}\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddBarangayImageModal;\r\n","D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\components\\UsersTableList\\UsersInfoModal.js",["266","267","268","269","270","271"],"import React, { useState } from \"react\";\r\nimport { Modal, Button, Image, Card, Col, Row } from \"antd\";\r\nimport { UnorderedListOutlined } from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\n\r\nfunction UsersInfoModal(props) {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [modalValue, setModalValue] = useState(\"\");\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n  const [ifCanceled, setIfCanceled] = useState(false);\r\n  const [drivers, setDrivers] = useState([]);\r\n  const [images, setImages] = useState([]);\r\n  const [imagePath, setImagePath] = useState([]);\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n    axios\r\n      .post(\"/api/v1/images/search_images\", {\r\n        imageOwnerId: props.info.id,\r\n        imageReferenceId: 4,\r\n      })\r\n      .then((res) => {\r\n        let data = res.data;\r\n        setImages(data);\r\n        //console.log(\"images\", images);\r\n        // let imagesCopy = [...images];\r\n        // imagesCopy = imagesCopy.find(\r\n        //   (imagesCopy) =>\r\n        //     imagesCopy.imageOwnerId === props.info.id &&\r\n        //     imagesCopy.imageReferenceId === 1\r\n        // );\r\n        //setImagePath(imagesCopy.imagePath);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const handleOk = () => {\r\n    props.passedData(props.info);\r\n\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n    setTimeout(() => {\r\n      setIsModalVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n    setTimeout(() => {\r\n      setIsModalVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n    Modal.success({\r\n      content: \"Still in development\",\r\n    });\r\n\r\n    //console.log(id);\r\n    // axios\r\n    //   .delete(\"/api/v1/users/delete_user\", {\r\n    //     params: {\r\n    //       id,\r\n    //     },\r\n    //   })\r\n    //   .then((res) => {\r\n\r\n    //     //console.log(driversCopy);\r\n\r\n    //     Modal.success({\r\n    //       content: \"User has been Removed\",\r\n    //     });\r\n    //   })\r\n    //   .catch((error) => console.log(error));\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIfCanceled(true);\r\n    setIsModalVisible(false);\r\n  };\r\n  const handleClose = () => {\r\n    if (ifCanceled) {\r\n    } else {\r\n      props.afterClosing();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button type=\"primary\" className=\"modal-button-view\" onClick={showModal}>\r\n        <span className=\"desktop-view\">\r\n          <UnorderedListOutlined /> View\r\n        </span>\r\n        <span className=\"mobile-view\">\r\n          <UnorderedListOutlined />\r\n        </span>\r\n      </Button>\r\n      <Modal\r\n        title=\"User Information\"\r\n        visible={isModalVisible}\r\n        confirmLoading={confirmLoading}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        afterClose={handleClose}\r\n        footer={[\r\n          <Button\r\n            className=\"modal-button\"\r\n            loading={confirmLoading}\r\n            onClick={() => handleDelete(props.info.id)}\r\n            danger\r\n          >\r\n            Remove\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <p>\r\n          <h4>ID:</h4>\r\n          {props.info.id}\r\n        </p>\r\n        <p>\r\n          <h4>Name:</h4>\r\n          {props.info.firstName} {props.info.lastName}\r\n        </p>\r\n        <p>\r\n          <h4>Email Address: </h4>\r\n          {props.info.email}\r\n        </p>\r\n        <h4>User Images: </h4>\r\n        <Card className=\"shadow-sm\">\r\n          <Row>\r\n            {images.map((image, index) => (\r\n              <Col key={index} md={{ span: 6 }}>\r\n                <br></br>\r\n                <Image\r\n                  height={100}\r\n                  width={100}\r\n                  src={`/api/v1/images/${\r\n                    image.imagePath ? image.imagePath : \"logo.png\"\r\n                  }`}\r\n                />\r\n                <Row>\r\n                  <br></br>\r\n                  {/* <Button onClick={() => handleDeleteImage(image.id)} danger>\r\n                    Delete\r\n                  </Button> */}\r\n                </Row>\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n        </Card>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UsersInfoModal;\r\n","D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\components\\JeepneysTableList\\AddJeepneyImageModal.js",["272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293"],"import React, { useState } from \"react\";\r\nimport {\r\n  Modal,\r\n  Upload,\r\n  Button,\r\n  Space,\r\n  Row,\r\n  Col,\r\n  List,\r\n  Form,\r\n  Radio,\r\n  Input,\r\n  message,\r\n} from \"antd\";\r\nimport { UploadOutlined } from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\nimport { Content } from \"antd/lib/layout/layout\";\r\n\r\nfunction AddJeepneyImageModal(props) {\r\n  const [file, setFile] = useState({});\r\n  const [imageStatus, setImageStatus] = useState(false);\r\n  const [filename, setFilename] = useState(\"Choose file\");\r\n  const [uploadedImagePath, setUploadedImagePath] = useState(\"\");\r\n  const [uploadImageStatus, setUploadImageStatus] = useState(\"none\");\r\n  const [fetchImage, setFetchImage] = useState(\"\");\r\n  const [images, setImages] = useState([]);\r\n  const [info, setInfo] = useState([]);\r\n  const [ifCanceled, setIfCanceled] = useState(false);\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [form] = Form.useForm();\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n\r\n  const showModal = () => {\r\n    form.setFieldsValue({\r\n      imageOwnerId: props.info.id,\r\n      imageReferenceId: 3,\r\n    });\r\n    setUploadedImagePath();\r\n    setUploadImageStatus(\"removed\");\r\n    setFilename(\"Choose file\");\r\n    setIsModalVisible(true);\r\n    console.log(props.info);\r\n  };\r\n\r\n  const checking = (file) => {\r\n    setFilename(file);\r\n  };\r\n  const viewFile = () => {\r\n    {\r\n      (() => {\r\n        switch (uploadImageStatus) {\r\n          case \"done\":\r\n            return (\r\n              setUploadedImagePath(filename.file.response.filePath),\r\n              console.log(\"done\")\r\n            );\r\n\r\n          case \"removed\":\r\n            return console.log(\"removed\");\r\n\r\n          case \"\":\r\n            return console.log(\"none\");\r\n        }\r\n      })();\r\n    }\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIfCanceled(true);\r\n\r\n    setTimeout(() => {\r\n      setIsModalVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 500);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n  };\r\n\r\n  const onFinish = (values) => {\r\n    if (uploadImageStatus == \"done\") {\r\n      axios\r\n        .post(\"/api/v1/images/save_image\", {\r\n          imageOwnerId: props.info.id,\r\n          imageReferenceId: 3,\r\n          imagePath: uploadedImagePath,\r\n        })\r\n        .then((res) => {\r\n          message.success(\"Successfully Saved\");\r\n          setTimeout(() => {\r\n            setIsModalVisible(false);\r\n            setConfirmLoading(false);\r\n          }, 500);\r\n          setUploadedImagePath(\"\");\r\n        })\r\n        .catch((error) => console.log(error));\r\n    } else {\r\n      message.error(\"Image Saving Error\");\r\n      // console.log(\"Uploaded image is removed\");\r\n    }\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"fail\");\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  const removeImage = (val) => {\r\n    //console.log(\"Removed image\", val.response.filePath);\r\n    axios\r\n      .delete(\"/api/v1/images/delete_folder_image\", {\r\n        params: {\r\n          fileName: val.response.imagePath,\r\n          fileId: val.response.id,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        setUploadImageStatus(\"removed\");\r\n        // console.log(res.data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n    setUploadedImagePath();\r\n    message.error(`File removed Successfully.`);\r\n  };\r\n\r\n  const uploadFile = {\r\n    name: \"file\",\r\n    action: \"/api/v1/images/add_image\",\r\n    headers: {\r\n      authorization: \"authorization-text\",\r\n    },\r\n    data: { imageOwnerId: props.info.id, imageReferenceId: 3 },\r\n    onChange(info) {\r\n      if (info.file.status !== \"uploading\") {\r\n        console.log(\"uploading\", info.file, info.fileList);\r\n      }\r\n      if (info.file.status === \"done\") {\r\n        message.success(`${info.file.name} file uploaded Successfully.`);\r\n      } else if (info.file.status === \"error\") {\r\n        message.error(`${info.file.name} file upload Failed.`);\r\n      }\r\n      setUploadImageStatus(info.file.status);\r\n      setFilename(info);\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button type=\"primary\" className=\"modal-button-upload\" onClick={showModal}>\r\n        <span className=\"desktop-view\"><UploadOutlined /> Upload</span>\r\n        <span className=\"mobile-view\"><UploadOutlined /></span>\r\n      </Button>\r\n      <Modal\r\n        title=\"Jeepney Image Upload\"\r\n        confirmLoading={confirmLoading}\r\n        visible={isModalVisible}\r\n        onOk={onFinish}\r\n        onCancel={handleCancel}\r\n        afterClose={handleClose}\r\n        destroyOnClose={true}\r\n        footer={[\r\n          <Button key=\"back\" className=\"modal-button\"  type=\"danger\" onClick={handleCancel}>\r\n            Close\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <List itemLayout=\"vertical\">\r\n          <List.Item>\r\n          <h4>Plate Number: </h4>\r\n          {props.info.plateNumber}\r\n          </List.Item>\r\n          <List.Item>\r\n          <h4>Image Reference Name: </h4>\r\n          Jeepney\r\n          </List.Item>\r\n        </List>\r\n        <Row>\r\n          <Space style={{ width: \"100%\" }} size=\"large\">\r\n            <Upload\r\n              {...uploadFile}\r\n              onRemove={removeImage}\r\n              listType=\"picture-card\"\r\n              showUploadList={{showPreviewIcon:false}}\r\n              maxCount={5}\r\n            >\r\n                <Space>\r\n                  <UploadOutlined/>\r\n               Upload\r\n               </Space>\r\n            </Upload>\r\n          </Space>\r\n        </Row>\r\n        {/* <Row>\r\n          <Form\r\n            name=\"basic\"\r\n            form={form}\r\n            layout={\"horizontal\"}\r\n            initialValues={{ remember: true }}\r\n            onFinish={onFinish}\r\n            onFinishFailed={onFinishFailed}\r\n          >\r\n            <Form.Item label=\"Image Owner ID: \" name=\"imageOwnerId\">\r\n               {props.info.id}\r\n            </Form.Item>\r\n            <Form.Item label=\"Image Reference: \" name=\"imageReferenceId\">\r\n               Barangay\r\n            </Form.Item>\r\n          </Form>\r\n        </Row> */}\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddJeepneyImageModal;\r\n","D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\components\\DriversTableList\\EditDriverModal.js",["294","295","296"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, Button, Form, Input } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { EditOutlined  } from \"@ant-design/icons\";\r\n\r\nfunction EditDriverModal(props) {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [form] = Form.useForm();\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n  const [ifCanceled, setIfCanceled] = useState(false);\r\n  const [ifChanged, setIfChanged] = useState();\r\n\r\n  const showModal = () => {\r\n    form.setFieldsValue({\r\n      id: props.info.id,\r\n      firstName: props.info.firstName,\r\n      middleName: props.info.middleName,\r\n      lastName: props.info.lastName,\r\n      address: props.info.address,\r\n      contactNumber: props.info.contactNumber,\r\n      email: props.info.email,\r\n    });\r\n    setIsModalVisible(true);\r\n    setIfChanged(false);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIfCanceled(true);\r\n    setIsModalVisible(false);\r\n  };\r\n  const handleClose = () => {\r\n    if (ifCanceled) {\r\n    } else {\r\n      props.afterClosing();\r\n    }\r\n  };\r\n\r\n  const onFinish = (values) => {\r\n    //console.log(ifChanged);\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n    props.passedData(props.info);\r\n\r\n    axios\r\n      .post(\"/api/v1/drivers/update_driver\", {\r\n        id: values.id,\r\n        firstName: values.firstName,\r\n        middleName: values.middleName,\r\n        lastName: values.lastName,\r\n        address: values.address,\r\n        contactNumber: values.contactNumber,\r\n        email: values.email,\r\n      })\r\n      .then((res) => {\r\n        setTimeout(() => {\r\n          setIsModalVisible(false);\r\n          setConfirmLoading(false);\r\n        }, 2000);\r\n        {\r\n          ifChanged\r\n            ? Modal.success({\r\n                content: \"Successfully Updated Driver Info\",\r\n              })\r\n            : Modal.success({\r\n                content: \"Driver Info is up to date\",\r\n              });\r\n        }\r\n      })\r\n      .catch((error) => console.log(error));\r\n\r\n    //console.log(ifChanged);\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    Modal.error({\r\n      content: \"Failure to Update Driver Info\",\r\n    });\r\n    setTimeout(() => {\r\n      setIsModalVisible(true);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n    // console.log(\"Failed:\", errorInfo);\r\n  };\r\n  const onValuesChange = (changedValues, allValues) => {\r\n    //console.log(\"Changed\", allValues, changedValues);\r\n    setIfChanged(true);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button type=\"primary\" className=\"modal-button-edit\" onClick={showModal}>\r\n        <span className=\"desktop-view\"><EditOutlined /> Edit</span>\r\n        <span className=\"mobile-view\"><EditOutlined /></span>\r\n      </Button>\r\n      <Modal\r\n        title=\"Update Driver Info\"\r\n        confirmLoading={confirmLoading}\r\n        visible={isModalVisible}\r\n        onOk={onFinish}\r\n        onCancel={handleCancel}\r\n        afterClose={handleClose}\r\n        destroyOnClose={true}\r\n        footer={[\r\n          <Button key=\"back\" className=\"modal-button\" onClick={handleCancel}>\r\n            Cancel\r\n          </Button>,\r\n          <Button form=\"myForm\" className=\"modal-button\" htmlType=\"submit\" type=\"primary\">\r\n            Update\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <Form\r\n          layout=\"vertical\"\r\n          name=\"basic\"\r\n          form={form}\r\n          initialValues={{ remember: true }}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n          onValuesChange={onValuesChange}\r\n          id=\"myForm\"\r\n        >\r\n          <Form.Item label=\"Driver ID:\" name=\"id\">\r\n            <Input disabled={true} bordered={false} />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Firstname:\"\r\n            name=\"firstName\"\r\n            rules={[\r\n              { required: true, message: \"Please input Firstname!\" },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Middlename:\"\r\n            name=\"middleName\"\r\n            rules={[\r\n              { required: true, message: \"Please input Middlename!\" },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Lastname:\"\r\n            name=\"lastName\"\r\n            rules={[\r\n              { required: true, message: \"Please input Lastname!\" },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Contact:\"\r\n            name=\"contactNumber\"\r\n            rules={[\r\n              { required: true, message: \"Please input Contact Number!\" },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Address:\"\r\n            name=\"address\"\r\n            rules={[\r\n              { required: true, message: \"Please input the Address!\" },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Email:\"\r\n            name=\"email\"\r\n            rules={[\r\n              { required: true, message: \"Please input Email!\" },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditDriverModal;\r\n","D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\components\\DriversTableList\\AddDriverImageModal.js",["297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318"],"import React, { useState } from \"react\";\r\nimport {\r\n  Modal,\r\n  Upload,\r\n  Button,\r\n  Space,\r\n  Row,\r\n  Col,\r\n  List,\r\n  Form,\r\n  Radio,\r\n  Input,\r\n  message,\r\n} from \"antd\";\r\nimport { UploadOutlined } from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\nimport { Content } from \"antd/lib/layout/layout\";\r\n\r\nfunction AddDriverImageModal(props) {\r\n  const [file, setFile] = useState({});\r\n  const [imageStatus, setImageStatus] = useState(false);\r\n  const [filename, setFilename] = useState(\"Choose file\");\r\n  const [uploadedImagePath, setUploadedImagePath] = useState(\"\");\r\n  const [uploadImageStatus, setUploadImageStatus] = useState(\"none\");\r\n  const [fetchImage, setFetchImage] = useState(\"\");\r\n  const [images, setImages] = useState([]);\r\n  const [info, setInfo] = useState([]);\r\n  const [ifCanceled, setIfCanceled] = useState(false);\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [form] = Form.useForm();\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n\r\n  const showModal = () => {\r\n    form.setFieldsValue({\r\n      imageOwnerId: props.info.id,\r\n      imageReferenceId: 2,\r\n    });\r\n    setUploadedImagePath();\r\n    setUploadImageStatus(\"removed\");\r\n    setFilename(\"Choose file\");\r\n    setIsModalVisible(true);\r\n    console.log(props.info);\r\n  };\r\n\r\n  const checking = (file) => {\r\n    setFilename(file);\r\n  };\r\n  const viewFile = () => {\r\n    {\r\n      (() => {\r\n        switch (uploadImageStatus) {\r\n          case \"done\":\r\n            return (\r\n              setUploadedImagePath(filename.file.response.filePath),\r\n              console.log(\"done\")\r\n            );\r\n\r\n          case \"removed\":\r\n            return console.log(\"removed\");\r\n\r\n          case \"\":\r\n            return console.log(\"none\");\r\n        }\r\n      })();\r\n    }\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIfCanceled(true);\r\n\r\n    setTimeout(() => {\r\n      setIsModalVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 500);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n  };\r\n\r\n  const onFinish = (values) => {\r\n    if (uploadImageStatus == \"done\") {\r\n      axios\r\n        .post(\"/api/v1/images/save_image\", {\r\n          imageOwnerId: props.info.id,\r\n          imageReferenceId: 2,\r\n          imagePath: uploadedImagePath,\r\n        })\r\n        .then((res) => {\r\n          message.success(\"Successfully Saved\");\r\n          setTimeout(() => {\r\n            setIsModalVisible(false);\r\n            setConfirmLoading(false);\r\n          }, 500);\r\n          setUploadedImagePath(\"\");\r\n        })\r\n        .catch((error) => console.log(error));\r\n    } else {\r\n      message.error(\"Image Saving Error\");\r\n      // console.log(\"Uploaded image is removed\");\r\n    }\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"fail\");\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  const removeImage = (val) => {\r\n    //console.log(\"Removed image\", val.response.filePath);\r\n    axios\r\n      .delete(\"/api/v1/images/delete_folder_image\", {\r\n        params: {\r\n          fileName: val.response.imagePath,\r\n          fileId: val.response.id,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        setUploadImageStatus(\"removed\");\r\n        // console.log(res.data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n    setUploadedImagePath();\r\n    message.error(`File removed Successfully.`);\r\n  };\r\n\r\n  const uploadFile = {\r\n    name: \"file\",\r\n    action: \"/api/v1/images/add_image\",\r\n    headers: {\r\n      authorization: \"authorization-text\",\r\n    },\r\n    data: { imageOwnerId: props.info.id, imageReferenceId: 2 },\r\n    onChange(info) {\r\n      if (info.file.status !== \"uploading\") {\r\n        console.log(\"uploading\", info.file, info.fileList);\r\n      }\r\n      if (info.file.status === \"done\") {\r\n        message.success(`${info.file.name} file uploaded Successfully.`);\r\n      } else if (info.file.status === \"error\") {\r\n        message.error(`${info.file.name} file upload Failed.`);\r\n      }\r\n      setUploadImageStatus(info.file.status);\r\n      setFilename(info);\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button type=\"primary\" className=\"modal-button-upload\" onClick={showModal}>\r\n        <span className=\"desktop-view\"><UploadOutlined /> Upload</span>\r\n        <span className=\"mobile-view\"><UploadOutlined /></span>\r\n      </Button>\r\n      <Modal\r\n        title=\"Driver Image Upload\"\r\n        confirmLoading={confirmLoading}\r\n        visible={isModalVisible}\r\n        onOk={onFinish}\r\n        onCancel={handleCancel}\r\n        afterClose={handleClose}\r\n        destroyOnClose={true}\r\n        footer={[\r\n          <Button key=\"back\" className=\"modal-button\"  type=\"danger\" onClick={handleCancel}>\r\n            Close\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <List itemLayout=\"vertical\">\r\n          <List.Item>\r\n          <h4>Image Driver ID: </h4>\r\n          {props.info.id}\r\n          </List.Item>\r\n          <List.Item>\r\n          <h4>Image Driver Name: </h4>\r\n          {props.info.firstName} {props.info.firstName} {props.info.firstName}\r\n          </List.Item>\r\n          <List.Item>\r\n          <h4>Image Reference Name: </h4>\r\n          Driver\r\n          </List.Item>\r\n        </List>\r\n        <Row>\r\n          <Space style={{ width: \"100%\" }} size=\"large\">\r\n            <Upload\r\n              {...uploadFile}\r\n              onRemove={removeImage}\r\n              listType=\"picture-card\"\r\n              showUploadList={{showPreviewIcon:false}}\r\n              maxCount={5}\r\n            >\r\n                <Space>\r\n                  <UploadOutlined/>\r\n               Upload\r\n               </Space>\r\n            </Upload>\r\n          </Space>\r\n        </Row>\r\n        {/* <Row>\r\n          <Form\r\n            name=\"basic\"\r\n            form={form}\r\n            layout={\"horizontal\"}\r\n            initialValues={{ remember: true }}\r\n            onFinish={onFinish}\r\n            onFinishFailed={onFinishFailed}\r\n          >\r\n            <Form.Item label=\"Image Owner ID: \" name=\"imageOwnerId\">\r\n               {props.info.id}\r\n            </Form.Item>\r\n            <Form.Item label=\"Image Reference: \" name=\"imageReferenceId\">\r\n               Barangay\r\n            </Form.Item>\r\n          </Form>\r\n        </Row> */}\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddDriverImageModal;\r\n","D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\components\\DriversTableList\\AddDriverModal.js",["319","320","321","322","323","324","325","326","327","328","329"],"import React, { useState } from \"react\";\r\nimport { Form, Input, Modal, Button, Upload, Space } from \"antd\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\n\r\nfunction AddDriverModal(props) {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n  const [ifCanceled, setIfCanceled] = useState(false);\r\n  const [drivers, setDrivers] = useState([]);\r\n  const [file, setFile] = useState({});\r\n  const [filename, setFilename] = useState(\"Choose file\");\r\n  const [uploadedImagePath, setUploadedImagePath] = useState();\r\n\r\n  const checking = (file) => {\r\n    setFilename(file);\r\n    //console.log(filename);\r\n  };\r\n  const unchecking = () => {\r\n    setFilename(\"Choose file\");\r\n    //console.log(filename);\r\n  };\r\n  const viewFile = () => {\r\n    if (filename == \"Choose file\") {\r\n      //console.log(\"No image selected\");\r\n    } else {\r\n      setUploadedImagePath(filename.file.response.filePath);\r\n      //console.log(filename.file.response);\r\n    }\r\n  };\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n    //console.log(props.info);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIfCanceled(true);\r\n    setIsModalVisible(false);\r\n  };\r\n  const handleClose = () => {\r\n    if (ifCanceled) {\r\n    } else {\r\n      props.afterClosing();\r\n    }\r\n  };\r\n\r\n  const onFinish = (values) => {\r\n    console.log(values);\r\n    props.passedData(props.info);\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n    setTimeout(() => {\r\n      setIsModalVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n\r\n    axios\r\n      .post(\"/api/v1/drivers/add_driver\", values)\r\n      .then((res) => {\r\n        // let driversCopy = [...drivers];\r\n        // driversCopy = [...driversCopy, res.data];\r\n        // //console.log(driversCopy);\r\n        // setDrivers(driversCopy);\r\n        // setFilename(file);\r\n        Modal.success({\r\n          content: \"Successfully Added New Driver\",\r\n        });\r\n        // setUploadedImagePath(filename.file.response.filePath);\r\n        // //console.log(uploadedImagePath);\r\n        // axios.post(\"/api/v1/images/save_image\", {\r\n        //   imageOwnerId: res.data.id,\r\n        //   imageReferenceId: 1,\r\n        //   imagePath: uploadedImagePath,\r\n        // });\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    Modal.error({\r\n      content: \"Failure to Add New Driver\",\r\n    });\r\n    setTimeout(() => {\r\n      setIsModalVisible(true);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n    //console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button type=\"primary\" className=\"modal-button-add\" onClick={showModal}>\r\n        <span className=\"desktop-view\"><PlusOutlined /> Add Driver</span>\r\n        <span className=\"mobile-view\"><PlusOutlined /></span>\r\n      </Button>\r\n\r\n      <Modal\r\n        title=\"Add Driver:\"\r\n        visible={isModalVisible}\r\n        confirmLoading={confirmLoading}\r\n        onOk={onFinish}\r\n        onCancel={handleCancel}\r\n        afterClose={handleClose}\r\n        destroyOnClose={true}\r\n        footer={[\r\n          <Button key=\"back\" className=\"modal-button\"  onClick={handleCancel}>\r\n            Cancel\r\n          </Button>,\r\n          <Button\r\n            form=\"myForm\"\r\n            key=\"submit\"\r\n            htmlType=\"submit\"\r\n            type=\"primary\"\r\n            className=\"modal-button\" \r\n            loading={confirmLoading}\r\n            onClick={onFinish}\r\n          >\r\n            Add\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <Form\r\n          layout=\"vertical\"\r\n          name=\"basic\"\r\n          initialValues={{ remember: true }}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n          id=\"myForm\"\r\n        >\r\n          <Form.Item\r\n            label=\"First Name\"\r\n            name=\"firstName\"\r\n            rules={[\r\n              { required: true, message: \"Please input your Firstname!\" },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Middle Name\"\r\n            name=\"middleName\"\r\n            rules={[\r\n              { required: true, message: \"Please input your Middlename!\" },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Last Name\"\r\n            name=\"lastName\"\r\n            rules={[{ required: true, message: \"Please input your Lastname!\" }]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Address\"\r\n            name=\"address\"\r\n            rules={[{ required: true, message: \"Please input your Address!\" }]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Contact Number\"\r\n            name=\"contactNumber\"\r\n            rules={[\r\n              { required: true, message: \"Please input your Contact Number!\" },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Generate Password\"\r\n            name=\"generatePassword\"\r\n            rules={[{ required: true, message: \"Please input your password!\" }]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Email\"\r\n            name=\"email\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                type: \"email\",\r\n                message: \"Please input your Email!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          {/* <Upload\r\n            action=\"/api/v1/images/add_image\"\r\n            listType=\"picture\"\r\n            maxCount={1}\r\n            file={file}\r\n            onChange={checking}\r\n            onRemove={unchecking}\r\n          >\r\n            <Button>Choose Image (Max: 1)</Button>\r\n          </Upload>\r\n          <Space>\r\n            <Button onClick={viewFile} icon={<UploadOutlined />}>\r\n              Upload\r\n            </Button>\r\n          </Space> */}\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddDriverModal;\r\n","D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\components\\DriversTableList\\DriversInfoModal.js",["330","331","332","333"],"import React, { useState } from \"react\";\r\nimport { Modal, Button, Image, Card, Col, Row } from \"antd\";\r\nimport { UnorderedListOutlined } from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\n\r\nfunction DriversInfoModal(props) {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [modalValue, setModalValue] = useState(\"\");\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n  const [ifCanceled, setIfCanceled] = useState(false);\r\n  const [drivers, setDrivers] = useState([]);\r\n  const [images, setImages] = useState([]);\r\n  const [imagePath, setImagePath] = useState([]);\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n    axios\r\n      .post(\"/api/v1/images/search_images\", {\r\n        imageOwnerId: props.info.id,\r\n        imageReferenceId: 2,\r\n      })\r\n      .then((res) => {\r\n        let data = res.data;\r\n        setImages(data);\r\n        //console.log(\"images\", images);\r\n        // let imagesCopy = [...images];\r\n        // imagesCopy = imagesCopy.find(\r\n        //   (imagesCopy) =>\r\n        //     imagesCopy.imageOwnerId === props.info.id &&\r\n        //     imagesCopy.imageReferenceId === 1\r\n        // );\r\n        //setImagePath(imagesCopy.imagePath);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const handleOk = () => {\r\n    props.passedData(props.info);\r\n\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n    setTimeout(() => {\r\n      setIsModalVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n    setTimeout(() => {\r\n      setIsModalVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n    //console.log(id);\r\n    axios\r\n      .delete(\"/api/v1/images/delete_image\", {\r\n        params: {\r\n          id,\r\n          referenceId: 1,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        let imagesCopy = [...images];\r\n        imagesCopy = imagesCopy.filter(\r\n          (imagesCopy) =>\r\n            imagesCopy.imageOwnerId !== id && imagesCopy.imageReferenceId === 2\r\n        );\r\n        setImages(imagesCopy);\r\n        console.log(imagesCopy);\r\n      })\r\n      .catch((error) => console.log(error));\r\n\r\n    axios\r\n      .delete(\"/api/v1/drivers/delete_driver\", {\r\n        params: {\r\n          id,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        let driversCopy = [...drivers];\r\n        driversCopy = driversCopy.filter((driver) => driver.id !== id);\r\n        setDrivers(driversCopy);\r\n        //console.log(driversCopy);\r\n\r\n        Modal.success({\r\n          content: \"Driver has been Removed\",\r\n        });\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIfCanceled(true);\r\n    setIsModalVisible(false);\r\n  };\r\n  const handleClose = () => {\r\n    if (ifCanceled) {\r\n    } else {\r\n      props.afterClosing();\r\n    }\r\n  };\r\n\r\n  const handleDeleteImage = (id) => {\r\n    axios\r\n      .delete(\"/api/v1/images/delete_image\", {\r\n        params: {\r\n          id,\r\n          referenceId: 1,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        let imagesCopy = [...images];\r\n        imagesCopy = imagesCopy.filter((image) => image.id !== id);\r\n        setImages(imagesCopy);\r\n        Modal.success({\r\n          content: \"Driver image has been removed\",\r\n        });\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n  return (\r\n    <div>\r\n      <Button type=\"primary\" className=\"modal-button-view\" onClick={showModal}>\r\n        <span className=\"desktop-view\">\r\n          <UnorderedListOutlined /> View\r\n        </span>\r\n        <span className=\"mobile-view\">\r\n          <UnorderedListOutlined />\r\n        </span>\r\n      </Button>\r\n      <Modal\r\n        title=\"Driver Information\"\r\n        visible={isModalVisible}\r\n        confirmLoading={confirmLoading}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        afterClose={handleClose}\r\n        footer={[\r\n          <Button\r\n            className=\"modal-button\"\r\n            loading={confirmLoading}\r\n            onClick={() => handleDelete(props.info.id)}\r\n            danger\r\n          >\r\n            Remove\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <p>\r\n          <h4>ID:</h4>\r\n          {props.info.id}\r\n        </p>\r\n        <p>\r\n          <h4>Name:</h4>\r\n          {props.info.firstName} {props.info.middleName} {props.info.lastName}\r\n        </p>\r\n        <p>\r\n          <h4>Contact Number:</h4>\r\n          {props.info.contactNumber}\r\n        </p>\r\n        <p>\r\n          <h4>Address: </h4>\r\n          {props.info.address}\r\n        </p>\r\n        <p>\r\n          <h4>Email Address: </h4>\r\n          {props.info.email}\r\n        </p>\r\n        <h4>Uploaded Images: </h4>\r\n        <Card className=\"shadow-sm\">\r\n          <Row>\r\n            {images.map((image, index) => (\r\n              <Col key={index} md={{ span: 6 }}>\r\n                <br></br>\r\n                <Image\r\n                  height={100}\r\n                  width={100}\r\n                  src={`/api/v1/images/${\r\n                    image.imagePath ? image.imagePath : \"logo.png\"\r\n                  }`}\r\n                />\r\n                <Row>\r\n                  <br></br>\r\n                  <Button onClick={() => handleDeleteImage(image.id)} danger>\r\n                    Delete\r\n                  </Button>\r\n                </Row>\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n        </Card>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DriversInfoModal;\r\n","D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\components\\JeepneysTableList\\EditJeepneyModal.js",["334","335"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, Button, Form, Input, Select } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { EditOutlined  } from \"@ant-design/icons\";\r\n\r\nfunction EditJeepneyModal(props) {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [form] = Form.useForm();\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n  const [ifCanceled, setIfCanceled] = useState(false);\r\n  const [ifChanged, setIfChanged] = useState();\r\n  const [barangays, setBarangays] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/api/v1/barangays/search_all_barangays\")\r\n      .then((res) => {\r\n\r\n        let data = res.data;\r\n        setBarangays(data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }, []);\r\n  const { Option } = Select;\r\n\r\n  const handleChange = (value) => {\r\n    console.log(`selected ${value}`);\r\n  };\r\n\r\n\r\n  const showModal = () => {\r\n    form.setFieldsValue({\r\n      id: props.info.id,\r\n      barangayId: props.info.barangayId,\r\n      plateNumber: props.info.plateNumber,\r\n      jeepCapacity: props.info.jeepCapacity,\r\n    });\r\n    setIsModalVisible(true);\r\n    setIfChanged(false);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIfCanceled(true);\r\n    setIsModalVisible(false);\r\n  };\r\n  const handleClose = () => {\r\n    if (ifCanceled) {\r\n    } else {\r\n      props.afterClosing();\r\n    }\r\n  };\r\n\r\n  const onFinish = (values) => {\r\n    //console.log(ifChanged);\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n    props.passedData(props.info);\r\n     axios\r\n      .post(\"/api/v1/jeepneys/update_jeepney\", {\r\n        id: props.info.id,\r\n        barangayId: values.barangayId,\r\n        plateNumber: values.plateNumber,\r\n        jeepCapacity: values.jeepCapacity,\r\n      })\r\n      .then((res) => {\r\n        setTimeout(() => {\r\n          setIsModalVisible(false);\r\n          setConfirmLoading(false);\r\n          \r\n        }, 2000);\r\n        {\r\n          ifChanged\r\n            ? Modal.success({\r\n                content: \"Successfully Updated Jeepney\",\r\n              })\r\n            : Modal.success({\r\n                content: \"Jeepney Info is up to date\",\r\n              });\r\n        }\r\n      })\r\n      .catch((error) => console.log(error));\r\n\r\n    //console.log(ifChanged);\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    Modal.error({\r\n      content: \"Failure to Update Jeepney Info\",\r\n    });\r\n    setTimeout(() => {\r\n      setIsModalVisible(true);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n    // console.log(\"Failed:\", errorInfo);\r\n  };\r\n  const onValuesChange = (changedValues, allValues) => {\r\n  console.log(\"Changed\", allValues, changedValues);\r\n    setIfChanged(true);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button type=\"primary\" className=\"modal-button-edit\" onClick={showModal}>\r\n        <span className=\"desktop-view\"><EditOutlined /> Edit</span>\r\n        <span className=\"mobile-view\"><EditOutlined /></span>\r\n      </Button>\r\n      <Modal\r\n        title=\"Update Jeepney Info\"\r\n        confirmLoading={confirmLoading}\r\n        visible={isModalVisible}\r\n        onOk={onFinish}\r\n        onCancel={handleCancel}\r\n        afterClose={handleClose}\r\n        destroyOnClose={true}\r\n        footer={[\r\n          <Button key=\"back\" className=\"modal-button\" onClick={handleCancel}>\r\n            Cancel\r\n          </Button>,\r\n          <Button form=\"myForm\" className=\"modal-button\" htmlType=\"submit\" type=\"primary\">\r\n            Update\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <Form\r\n          layout=\"vertical\"\r\n          name=\"basic\"\r\n          form={form}\r\n          initialValues={{ remember: true }}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n          onValuesChange={onValuesChange}\r\n          id=\"myForm\"\r\n        >\r\n          {/* <Form.Item label=\"Barangay ID:\" name=\"barangayId\">\r\n            <Input disabled={true} bordered={false} />\r\n          </Form.Item> */}\r\n          <Form.Item\r\n            label=\"Barangay:\"\r\n            name=\"barangayId\"\r\n            rules={[\r\n              { required: true, message: \"Please input the Barangay's ID!\" },\r\n            ]}\r\n          >\r\n            <Select\r\n              placeholder=\"Select Barangay\"\r\n              style={{ width: '100%' }}\r\n              onChange={handleChange}\r\n            >\r\n              {barangays.map((barangay, index) => (\r\n                <Option value={barangay.id}>{barangay.barangayName}</Option>\r\n              ))}\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Plate Number:\"\r\n            name=\"plateNumber\"\r\n            rules={[\r\n              { required: true, message: \"Please input the Plate Number!\" },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Jeep Capacity:\"\r\n            name=\"jeepCapacity\"\r\n            rules={[\r\n              { required: true, message: \"Please input Jeep Capacity!\" },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditJeepneyModal;\r\n","D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\components\\JeepneysTableList\\AddJeepneyModal.js",["336","337","338","339","340","341","342"],"import React, { useState, useEffect } from \"react\";\r\nimport { Form, Input, Modal, Button, Upload, Select } from \"antd\";\r\nimport { UploadOutlined, PlusOutlined } from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\n\r\nfunction AddJeepneyModal(props) {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n  const [ifCanceled, setIfCanceled] = useState(false);\r\n  const [jeepneys, setJeepneys] = useState([]);\r\n  const [file, setFile] = useState({});\r\n  const [filename, setFilename] = useState(\"Choose file\");\r\n  const [uploadedImagePath, setUploadedImagePath] = useState();\r\n  const [barangays, setBarangays] = useState([]);\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n    console.log(props.info);\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/api/v1/barangays/search_all_barangays\")\r\n      .then((res) => {\r\n        let data = res.data;\r\n        setBarangays(data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }, []);\r\n  const { Option } = Select;\r\n\r\n  const checking = (file) => {\r\n    setFilename(file);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIfCanceled(true);\r\n    setIsModalVisible(false);\r\n  };\r\n  const handleClose = () => {\r\n    if (ifCanceled) {\r\n    } else {\r\n      props.afterClosing();\r\n    }\r\n  };\r\n\r\n  const onFinish = (values) => {\r\n    console.log(values);\r\n    props.passedData(props.info);\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n    setTimeout(() => {\r\n      setIsModalVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n    // setUploadedImagePath(filename.file.response.filePath);\r\n    axios\r\n      .post(\"/api/v1/jeepneys/add_jeep\", values)\r\n      .then((res) => {\r\n        let jeepneysCopy = [...jeepneys];\r\n        jeepneysCopy = [...jeepneysCopy, res.data];\r\n        console.log(jeepneysCopy);\r\n        setJeepneys(jeepneysCopy);\r\n        // console.log(filename.file.response);\r\n        Modal.success({\r\n          content: \"Successfully Added New Jeepney\",\r\n        });\r\n\r\n        axios.post(\"/api/v1/images/save_image\", {\r\n          imageOwnerId: res.data.id,\r\n          imageReferenceId: 3,\r\n          imagePath: uploadedImagePath,\r\n        });\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    Modal.error({\r\n      content: \"Failure to Add New Jeepney\",\r\n    });\r\n    setTimeout(() => {\r\n      setIsModalVisible(true);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n    console.log(\"fail\");\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  const handleChange = (value) => {\r\n    console.log(`selected ${value}`);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button type=\"primary\" className=\"modal-button-add\" onClick={showModal}>\r\n        <span className=\"desktop-view\">\r\n          <PlusOutlined /> Add Jeepney\r\n        </span>\r\n        <span className=\"mobile-view\">\r\n          <PlusOutlined />\r\n        </span>\r\n      </Button>\r\n\r\n      <Modal\r\n        title=\"Add Jeepney:\"\r\n        visible={isModalVisible}\r\n        confirmLoading={confirmLoading}\r\n        onOk={onFinish}\r\n        onCancel={handleCancel}\r\n        afterClose={handleClose}\r\n        destroyOnClose={true}\r\n        footer={[\r\n          <Button key=\"back\" className=\"modal-button\" onClick={handleCancel}>\r\n            Cancel\r\n          </Button>,\r\n          <Button\r\n            form=\"myForm\"\r\n            className=\"modal-button\"\r\n            key=\"submit\"\r\n            htmlType=\"submit\"\r\n            type=\"primary\"\r\n            loading={confirmLoading}\r\n            onClick={onFinish}\r\n          >\r\n            Add\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <Form\r\n          layout=\"vertical\"\r\n          name=\"basic\"\r\n          initialValues={{ remember: true }}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n          id=\"myForm\"\r\n        >\r\n          <Form.Item\r\n            label=\"Barangay:\"\r\n            name=\"barangayId\"\r\n            rules={[\r\n              { required: true, message: \"Please input the Barangay's ID!\" },\r\n            ]}\r\n          >\r\n            <Select\r\n              placeholder=\"Select Barangay\"\r\n              style={{ width: \"100%\" }}\r\n              onChange={handleChange}\r\n            >\r\n              {barangays.map((barangay, index) => (\r\n                <Option value={barangay.id}>{barangay.barangayName}</Option>\r\n              ))}\r\n            </Select>\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Plate Number:\"\r\n            name=\"plateNumber\"\r\n            rules={[\r\n              { required: true, message: \"Please input the Plate Number!\" },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Jeep Capacity:\"\r\n            name=\"jeepCapacity\"\r\n            rules={[\r\n              { required: true, message: \"Please input the Jeep Capacity!\" },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          {/* <Upload\r\n            action=\"/api/v1/images/add_image\"\r\n            listType=\"picture\"\r\n            maxCount={1}\r\n            file={file}\r\n            onChange={checking}\r\n          >\r\n            <Button icon={<UploadOutlined />}>Upload Image (Max: 1)</Button>\r\n          </Upload> */}\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddJeepneyModal;\r\n","D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\components\\BarangaysTableList\\AddBarangayModal.js",["343","344","345","346","347","348","349","350","351","352","353"],"import React, { useState } from \"react\";\r\nimport { Form, Input, Modal, Button, Upload } from \"antd\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\n\r\nfunction AddBarangayModal(props) {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [modalValue, setModalValue] = useState(\"\");\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n  const [ifCanceled, setIfCanceled] = useState(false);\r\n  const [barangays, setBarangays] = useState([]);\r\n  const [file, setFile] = useState({});\r\n  const [filename, setFilename] = useState(\"Choose file\");\r\n  const [uploadedImagePath, setUploadedImagePath] = useState();\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n    console.log(props.info);\r\n  };\r\n\r\n  const checking = (file) => {\r\n    setFilename(file);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIfCanceled(true);\r\n    setIsModalVisible(false);\r\n  };\r\n  const handleClose = () => {\r\n    if (ifCanceled) {\r\n    } else {\r\n      props.afterClosing();\r\n    }\r\n  };\r\n\r\n  const onFinish = (values) => {\r\n    console.log(values);\r\n    props.passedData(props.info);\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n    setTimeout(() => {\r\n      setIsModalVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n    // setUploadedImagePath(filename.file.response.filePath);\r\n    axios\r\n      .post(\"/api/v1/barangays/add_barangay\", values)\r\n      .then((res) => {\r\n        // let barangaysCopy = [...barangays];\r\n        // barangaysCopy = [...barangaysCopy, res.data];\r\n        // //console.log(barangaysCopy);\r\n        // setBarangays(barangaysCopy);\r\n        Modal.success({\r\n          content: \"Successfully Added New Barangay\",\r\n        });\r\n\r\n        // axios.post(\"/api/v1/images/save_image\", {\r\n        //   imageOwnerId: res.data.id,\r\n        //   imageReferenceId: 2,\r\n        //   imagePath: uploadedImagePath,\r\n        // });\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    Modal.error({\r\n      content: \"Failure to Add New Barangay\",\r\n    });\r\n    setTimeout(() => {\r\n      setIsModalVisible(true);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n    //console.log(\"fail\");\r\n    //console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button type=\"primary\" className=\"modal-button-add\" onClick={showModal}>\r\n        <span className=\"desktop-view\"><PlusOutlined /> Add Barangay</span>\r\n        <span className=\"mobile-view\"><PlusOutlined /></span>\r\n      </Button>\r\n\r\n      <Modal\r\n        title=\"Add Barangay:\"\r\n        visible={isModalVisible}\r\n        confirmLoading={confirmLoading}\r\n        onOk={onFinish}\r\n        onCancel={handleCancel}\r\n        afterClose={handleClose}\r\n        destroyOnClose={true}\r\n        footer={[\r\n          <Button key=\"back\" className=\"modal-button\" onClick={handleCancel}>\r\n            Cancel\r\n          </Button>,\r\n          <Button\r\n            form=\"myForm\"\r\n            key=\"submit\"\r\n            htmlType=\"submit\"\r\n            type=\"primary\"\r\n            loading={confirmLoading}\r\n            onClick={onFinish}\r\n            className=\"modal-button\"\r\n          >\r\n            Add\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <Form\r\n          layout=\"vertical\"\r\n          name=\"basic\"\r\n          initialValues={{ remember: true }}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n          id=\"myForm\"\r\n        >\r\n          <Form.Item\r\n            label=\"Barangay Name\"\r\n            name=\"barangayName\"\r\n            rules={[\r\n              { required: true, message: \"Please input the Barangay's Name!\" },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Location\"\r\n            name=\"location\"\r\n            rules={[\r\n              { required: true, message: \"Please input Barangay's Location!\" },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Barangay Description\"\r\n            name=\"barangayDescription\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please input the Barangay's Description!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input.TextArea />\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddBarangayModal;\r\n","D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\components\\JeepneysTableList\\JeepneysInfoModal.js",["354","355","356","357"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, Button, Card, Image, Space, Col, Row, Typography } from \"antd\";\r\nimport { UnorderedListOutlined } from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\n\r\nfunction JeepneysInfoModal(props) {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n  const [ifCanceled, setIfCanceled] = useState(false);\r\n  const [jeepneys, setJeepneys] = useState([]);\r\n  const [images, setImages] = useState([]);\r\n  const [imagePath, setImagePath] = useState([]);\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n    axios\r\n      .post(\"/api/v1/images/search_images\", {\r\n        imageOwnerId: props.info.id,\r\n        imageReferenceId: 3,\r\n      })\r\n      .then((res) => {\r\n        let data = res.data;\r\n        setImages(data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const handleOk = () => {\r\n    props.passedData(props.info);\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n    setTimeout(() => {\r\n      setIsModalVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n    setTimeout(() => {\r\n      setIsModalVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n    axios\r\n      .delete(\"/api/v1/images/delete_image\", {\r\n        params: {\r\n          id,\r\n          referenceId: 3,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        let imagesCopy = [...images];\r\n        imagesCopy = imagesCopy.filter(\r\n          (imagesCopy) =>\r\n            imagesCopy.imageOwnerId !== id && imagesCopy.imageReferenceId === 3\r\n        );\r\n        setImages(imagesCopy);\r\n        console.log(imagesCopy);\r\n      })\r\n      .catch((error) => console.log(error));\r\n\r\n    axios\r\n      .delete(\"/api/v1/jeepneys/delete_jeep\", {\r\n        params: {\r\n          id,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        let jeepneysCopy = [...jeepneys];\r\n\r\n        jeepneysCopy = jeepneysCopy.filter((jeepney) => jeepney.id !== id);\r\n        setJeepneys(jeepneysCopy);\r\n\r\n        console.log(jeepneysCopy);\r\n        Modal.success({\r\n          content: \"Jeepney has been Removed\",\r\n        });\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIfCanceled(true);\r\n    setIsModalVisible(false);\r\n  };\r\n  const handleClose = () => {\r\n    if (ifCanceled) {\r\n    } else {\r\n      props.afterClosing();\r\n    }\r\n  };\r\n\r\n  const handleDeleteImage = (id) => {\r\n    axios\r\n      .delete(\"/api/v1/images/delete_image\", {\r\n        params: {\r\n          id,\r\n          referenceId: 1,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        let imagesCopy = [...images];\r\n        imagesCopy = imagesCopy.filter((image) => image.id !== id);\r\n        setImages(imagesCopy);\r\n        Modal.success({\r\n          content: \"Barangay image has been removed\",\r\n        });\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n  return (\r\n    <div>\r\n      <Space>\r\n        <Button type=\"primary\" className=\"modal-button-view\" onClick={showModal}>\r\n          <span className=\"desktop-view\">\r\n            <UnorderedListOutlined /> View\r\n          </span>\r\n          <span className=\"mobile-view\">\r\n            <UnorderedListOutlined />\r\n          </span>\r\n        </Button>\r\n\r\n        {/* <Button type=\"default\" onClick={showModal}>\r\n        Assign Driver\r\n      </Button> */}\r\n      </Space>\r\n      <Modal\r\n        title=\"Jeepney Information\"\r\n        visible={isModalVisible}\r\n        confirmLoading={confirmLoading}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        afterClose={handleClose}\r\n        footer={[\r\n          <Button\r\n            className=\"modal-button\"\r\n            loading={confirmLoading}\r\n            onClick={() => handleDelete(props.info.id)}\r\n            danger\r\n          >\r\n            Remove\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <p>\r\n          <h4>Barangay Id:</h4>\r\n          {props.info.barangayId}\r\n        </p>\r\n        <p>\r\n          <h4>Plate Number:</h4>\r\n          {props.info.plateNumber}\r\n        </p>\r\n        <p>\r\n          <h4>Jeep Capacity:</h4>\r\n          {props.info.jeepCapacity}\r\n        </p>\r\n        <h4>Uploaded Images: </h4>\r\n        <Card className=\"shadow-sm\">\r\n          <Row>\r\n            {images.map((image, index) => (\r\n              <Col key={index} md={{ span: 6 }}>\r\n                <br></br>\r\n                <Image\r\n                  height={100}\r\n                  width={100}\r\n                  src={`/api/v1/images/${\r\n                    image.imagePath ? image.imagePath : \"logo.png\"\r\n                  }`}\r\n                />\r\n                <Row>\r\n                  <br></br>\r\n                  <Button onClick={() => handleDeleteImage(image.id)} danger>\r\n                    Delete\r\n                  </Button>\r\n                </Row>\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n        </Card>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default JeepneysInfoModal;\r\n","D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\components\\BarangaysTableList\\BarangaysInfoModal.js",["358","359","360","361","362","363"],"import React, { useState } from \"react\";\r\nimport { Modal, Button, Card, Image, Col, Row } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { UnorderedListOutlined } from \"@ant-design/icons\";\r\n\r\nfunction BarangaysInfoModal(props) {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [modalValue, setModalValue] = useState(\"\");\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n  const [ifCanceled, setIfCanceled] = useState(false);\r\n  const [barangays, setBarangays] = useState([]);\r\n  const [images, setImages] = useState([]);\r\n  const [imagePath, setImagePath] = useState([]);\r\n\r\n  // useEffect(() => {\r\n  //   axios\r\n  //     .get(\"/api/v1/images/\")\r\n  //     .then((res) => {\r\n  //       let data = res.data;\r\n  //       setImages(data);\r\n  //     })\r\n  //     .catch((error) => console.log(error));\r\n  // }, []);\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n    axios\r\n      .post(\"/api/v1/images/search_images\", {\r\n        imageOwnerId: props.info.id,\r\n        imageReferenceId: 1,\r\n      })\r\n      .then((res) => {\r\n        let data = res.data;\r\n        setImages(data);\r\n        //console.log(\"images\", images);\r\n        // let imagesCopy = [...images];\r\n        // imagesCopy = imagesCopy.find(\r\n        //   (imagesCopy) =>\r\n        //     imagesCopy.imageOwnerId === props.info.id &&\r\n        //     imagesCopy.imageReferenceId === 1\r\n        // );\r\n        //setImagePath(imagesCopy.imagePath);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const handleOk = () => {\r\n    props.passedData(props.info);\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n    setTimeout(() => {\r\n      setIsModalVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n  };\r\n\r\n  const handleDeleteImage = (id) => {\r\n    axios\r\n      .delete(\"/api/v1/images/delete_image\", {\r\n        params: {\r\n          id,\r\n          referenceId: 1,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        let imagesCopy = [...images];\r\n        imagesCopy = imagesCopy.filter((image) => image.id !== id);\r\n        setImages(imagesCopy);\r\n        Modal.success({\r\n          content: \"Barangay image has been removed\",\r\n        });\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n  const handleDelete = (id) => {\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n    setTimeout(() => {\r\n      setIsModalVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n    Modal.success({\r\n      content: \"Still in development\",\r\n    });\r\n\r\n    // axios\r\n    //   .delete(\"/api/v1/barangays/delete_barangay\", {\r\n    //     params: {\r\n    //       id,\r\n    //     },\r\n    //   })\r\n    //   .then((res) => {\r\n    //     Modal.success({\r\n    //       content: \"Barangay has been Removed\",\r\n    //     });\r\n    //   })\r\n    //   .catch((error) => console.log(error));\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIfCanceled(true);\r\n    setIsModalVisible(false);\r\n  };\r\n  const handleClose = () => {\r\n    if (ifCanceled) {\r\n    } else {\r\n      props.afterClosing();\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <Button type=\"primary\" className=\"modal-button-view\" onClick={showModal}>\r\n        <span className=\"desktop-view\">\r\n          <UnorderedListOutlined /> View\r\n        </span>\r\n        <span className=\"mobile-view\">\r\n          <UnorderedListOutlined />\r\n        </span>\r\n      </Button>\r\n      <Modal\r\n        title=\"Barangay Information\"\r\n        visible={isModalVisible}\r\n        confirmLoading={confirmLoading}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        afterClose={handleClose}\r\n        destroyOnClose={true}\r\n        footer={[\r\n          <Button\r\n            loading={confirmLoading}\r\n            onClick={() => handleDelete(props.info.id)}\r\n            danger\r\n            className=\"modal-button\"\r\n          >\r\n            Remove Barangay\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <p>\r\n          <h4>Bargangay ID:</h4>\r\n          {props.info.id}\r\n        </p>\r\n        <p>\r\n          <h4>Barangay Name:</h4>\r\n          {props.info.barangayName}\r\n        </p>\r\n        <p>\r\n          <h4>Location:</h4>\r\n          {props.info.location}\r\n        </p>\r\n        <p>\r\n          <h4>Barangay Description: </h4>\r\n          {props.info.barangayDescription}\r\n        </p>\r\n        <h4>Uploaded Images: </h4>\r\n        <Card className=\"shadow-sm\">\r\n          <Row>\r\n            {images.map((image, index) => (\r\n              <Col key={index} md={{ span: 6 }}>\r\n                <br></br>\r\n                <Image\r\n                  height={100}\r\n                  width={100}\r\n                  src={`/api/v1/images/${\r\n                    image.imagePath ? image.imagePath : \"logo.png\"\r\n                  }`}\r\n                />\r\n                <Row>\r\n                  <br></br>\r\n                  <Button onClick={() => handleDeleteImage(image.id)} danger>\r\n                    Delete\r\n                  </Button>\r\n                </Row>\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n        </Card>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BarangaysInfoModal;\r\n","D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\components\\BarangaysTableList\\EditBarangayModal.js",["364","365","366","367","368"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, Button, Form, Input } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { EditOutlined  } from \"@ant-design/icons\";\r\n\r\nfunction EditBarangayModal(props) {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [form] = Form.useForm();\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n  const [ifCanceled, setIfCanceled] = useState(false);\r\n  const [ifChanged, setIfChanged] = useState();\r\n  const [barangays, setBarangays] = useState([]);\r\n\r\n  const showModal = () => {\r\n    form.setFieldsValue({\r\n      id: props.info.id,\r\n      barangayName: props.info.barangayName,\r\n      location: props.info.location,\r\n      barangayDescription: props.info.barangayDescription,\r\n    });\r\n    setIsModalVisible(true);\r\n    setIfChanged(false);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIfCanceled(true);\r\n    setIsModalVisible(false);\r\n  };\r\n  const handleClose = () => {\r\n    if (ifCanceled) {\r\n    } else {\r\n      props.afterClosing();\r\n    }\r\n  };\r\n\r\n  const onFinish = (values) => {\r\n    //console.log(ifChanged);\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n    props.passedData(props.info);\r\n\r\n    axios\r\n      .post(\"/api/v1/barangays/update_barangay\", {\r\n        id: values.id,\r\n        barangayName: values.barangayName,\r\n        location: values.location,\r\n        barangayDescription: values.barangayDescription,\r\n      })\r\n      .then((res) => {\r\n        setTimeout(() => {\r\n          setIsModalVisible(false);\r\n          setConfirmLoading(false);\r\n        }, 2000);\r\n        {\r\n          ifChanged\r\n            ? Modal.success({\r\n                content: \"Successfully Updated Barangay\",\r\n              })\r\n            : Modal.success({\r\n                content: \"Barangay Info is up to date\",\r\n              });\r\n        }\r\n      })\r\n      .catch((error) => console.log(error));\r\n\r\n    //console.log(ifChanged);\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    Modal.error({\r\n      content: \"Failure to Update Barangay Info\",\r\n    });\r\n    setTimeout(() => {\r\n      setIsModalVisible(true);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n    // console.log(\"Failed:\", errorInfo);\r\n  };\r\n  const onValuesChange = (changedValues, allValues) => {\r\n    //console.log(\"Changed\", allValues, changedValues);\r\n    setIfChanged(true);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button type=\"primary\" className=\"modal-button-edit\" onClick={showModal}>\r\n        <span className=\"desktop-view\"><EditOutlined /> Edit</span>\r\n        <span className=\"mobile-view\"><EditOutlined /></span>\r\n      </Button>\r\n      <Modal\r\n        title=\"Update Barangay Info\"\r\n        confirmLoading={confirmLoading}\r\n        visible={isModalVisible}\r\n        onOk={onFinish}\r\n        onCancel={handleCancel}\r\n        afterClose={handleClose}\r\n        destroyOnClose={true}\r\n        footer={[\r\n          <Button key=\"back\" className=\"modal-button\" onClick={handleCancel}>\r\n            Cancel\r\n          </Button>,\r\n          <Button form=\"myForm\" className=\"modal-button\" htmlType=\"submit\" type=\"primary\">\r\n            Update\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <Form\r\n          layout=\"vertical\"\r\n          name=\"basic\"\r\n          form={form}\r\n          initialValues={{ remember: true }}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n          onValuesChange={onValuesChange}\r\n          id=\"myForm\"\r\n        >\r\n          <Form.Item label=\"Barangay ID:\" name=\"id\">\r\n            <Input disabled={true} bordered={false} />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Barangay Name:\"\r\n            name=\"barangayName\"\r\n            rules={[\r\n              { required: true, message: \"Please input the Barangay's Name!\" },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Location:\"\r\n            name=\"location\"\r\n            rules={[\r\n              { required: true, message: \"Please input Barangay's Location!\" },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Barangay Description:\"\r\n            name=\"barangayDescription\"\r\n            \r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please input the Barangay's Description!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input.TextArea />\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditBarangayModal;\r\n","D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\views\\FunFactsTableListContents.js",[],["369","370"],"D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\components\\FunFactsTableList\\index.js",[],"D:\\rex\\ReTrackAdmin\\02-09-2021\\admin-server\\client\\src\\components\\FunFactsTableList\\FunFactsTableList.js",["371"],"import React, { useState, useEffect } from \"react\";\r\nimport { List, Avatar, Space, Divider, Row, Col, Card, Table } from \"antd\";\r\nimport { MessageOutlined, LikeOutlined, StarOutlined } from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\n\r\nfunction FunFactsTableList() {\r\n  const [funData, setFunData] = useState({});\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/api/v1/barangays/search_all_barangays\")\r\n      .then((res) => {\r\n        // console.log(res);\r\n\r\n        let data = res.data;\r\n        setFunData(data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }, []);\r\n\r\n  const listData = [];\r\n  for (let i = 0; i < 23; i++) {\r\n    listData.push({\r\n      href: \"https://ant.design\",\r\n      title: `ant design part ${i}`,\r\n      avatar:\r\n        \"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\",\r\n      description:\r\n        \"Ant Design, a design language for background applications, is refined by Ant UED Team.\",\r\n      content:\r\n        \"We supply a series of design principles, practical patterns and high quality design resources (Sketch and Axure), to help people create their product prototypes beautifully and efficiently.\",\r\n    });\r\n  }\r\n\r\n  const IconText = ({ icon, text }) => (\r\n    <Space>\r\n      {React.createElement(icon)}\r\n      {text}\r\n    </Space>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Divider>Fun Facts</Divider>\r\n      <Row>\r\n        <Col flex=\"500x\">\r\n          <Card>\r\n            <Table>New</Table>\r\n          </Card>\r\n        </Col>\r\n        <Col flex=\"600px\">\r\n          <Card>\r\n            <List\r\n              itemLayout=\"vertical\"\r\n              size=\"large\"\r\n              pagination={{\r\n                onChange: (page) => {\r\n                  console.log(page);\r\n                },\r\n                pageSize: 3,\r\n              }}\r\n              dataSource={listData}\r\n              footer={\r\n                <div>\r\n                  <b>ant design</b> footer part\r\n                </div>\r\n              }\r\n              renderItem={(item) => (\r\n                <List.Item\r\n                  key={item.title}\r\n                  actions={[\r\n                    <IconText\r\n                      icon={StarOutlined}\r\n                      text=\"156\"\r\n                      key=\"list-vertical-star-o\"\r\n                    />,\r\n                    <IconText\r\n                      icon={LikeOutlined}\r\n                      text=\"156\"\r\n                      key=\"list-vertical-like-o\"\r\n                    />,\r\n                    <IconText\r\n                      icon={MessageOutlined}\r\n                      text=\"2\"\r\n                      key=\"list-vertical-message\"\r\n                    />,\r\n                  ]}\r\n                  extra={\r\n                    <img\r\n                      width={272}\r\n                      alt=\"logo\"\r\n                      src=\"https://gw.alipayobjects.com/zos/rmsportal/mqaQswcyDLcXyDKnZfES.png\"\r\n                    />\r\n                  }\r\n                >\r\n                  <List.Item.Meta\r\n                    avatar={<Avatar src={item.avatar} />}\r\n                    title={<a href={item.href}>{item.title}</a>}\r\n                    description={item.description}\r\n                  />\r\n                  {item.content}\r\n                </List.Item>\r\n              )}\r\n            />\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FunFactsTableList;\r\n",{"ruleId":"372","replacedBy":"373"},{"ruleId":"374","replacedBy":"375"},{"ruleId":"376","severity":1,"message":"377","line":1,"column":17,"nodeType":"378","messageId":"379","endLine":1,"endColumn":25},{"ruleId":"376","severity":1,"message":"380","line":1,"column":27,"nodeType":"378","messageId":"379","endLine":1,"endColumn":36},{"ruleId":"376","severity":1,"message":"381","line":1,"column":50,"nodeType":"378","messageId":"379","endLine":1,"endColumn":59},{"ruleId":"376","severity":1,"message":"382","line":2,"column":8,"nodeType":"378","messageId":"379","endLine":2,"endColumn":12},{"ruleId":"376","severity":1,"message":"383","line":8,"column":3,"nodeType":"378","messageId":"379","endLine":8,"endColumn":17},{"ruleId":"376","severity":1,"message":"384","line":9,"column":3,"nodeType":"378","messageId":"379","endLine":9,"endColumn":7},{"ruleId":"376","severity":1,"message":"385","line":13,"column":8,"nodeType":"378","messageId":"379","endLine":13,"endColumn":28},{"ruleId":"376","severity":1,"message":"386","line":18,"column":10,"nodeType":"378","messageId":"379","endLine":18,"endColumn":15},{"ruleId":"376","severity":1,"message":"387","line":12,"column":20,"nodeType":"378","messageId":"379","endLine":12,"endColumn":32},{"ruleId":"388","severity":1,"message":"389","line":13,"column":5,"nodeType":"390","messageId":"391","endLine":21,"endColumn":6},{"ruleId":"392","severity":1,"message":"393","line":10,"column":38,"nodeType":"394","messageId":"395","endLine":10,"endColumn":40},{"ruleId":"392","severity":1,"message":"393","line":16,"column":38,"nodeType":"394","messageId":"395","endLine":16,"endColumn":40},{"ruleId":"392","severity":1,"message":"393","line":10,"column":68,"nodeType":"394","messageId":"395","endLine":10,"endColumn":70},{"ruleId":"396","severity":1,"message":"397","line":1,"column":1,"nodeType":"398","endLine":20,"endColumn":3},{"ruleId":"376","severity":1,"message":"399","line":21,"column":10,"nodeType":"378","messageId":"379","endLine":21,"endColumn":18},{"ruleId":"376","severity":1,"message":"400","line":22,"column":9,"nodeType":"378","messageId":"379","endLine":22,"endColumn":21},{"ruleId":"376","severity":1,"message":"401","line":27,"column":12,"nodeType":"378","messageId":"379","endLine":27,"endColumn":22},{"ruleId":"376","severity":1,"message":"402","line":14,"column":3,"nodeType":"378","messageId":"379","endLine":14,"endColumn":8},{"ruleId":"376","severity":1,"message":"403","line":18,"column":10,"nodeType":"378","messageId":"379","endLine":18,"endColumn":22},{"ruleId":"376","severity":1,"message":"404","line":22,"column":10,"nodeType":"378","messageId":"379","endLine":22,"endColumn":14},{"ruleId":"376","severity":1,"message":"405","line":23,"column":10,"nodeType":"378","messageId":"379","endLine":23,"endColumn":17},{"ruleId":"376","severity":1,"message":"406","line":23,"column":19,"nodeType":"378","messageId":"379","endLine":23,"endColumn":29},{"ruleId":"376","severity":1,"message":"407","line":25,"column":10,"nodeType":"378","messageId":"379","endLine":25,"endColumn":24},{"ruleId":"376","severity":1,"message":"408","line":25,"column":26,"nodeType":"378","messageId":"379","endLine":25,"endColumn":43},{"ruleId":"376","severity":1,"message":"409","line":27,"column":10,"nodeType":"378","messageId":"379","endLine":27,"endColumn":24},{"ruleId":"376","severity":1,"message":"410","line":27,"column":26,"nodeType":"378","messageId":"379","endLine":27,"endColumn":43},{"ruleId":"376","severity":1,"message":"411","line":28,"column":10,"nodeType":"378","messageId":"379","endLine":28,"endColumn":21},{"ruleId":"376","severity":1,"message":"412","line":30,"column":11,"nodeType":"378","messageId":"379","endLine":30,"endColumn":17},{"ruleId":"376","severity":1,"message":"413","line":31,"column":11,"nodeType":"378","messageId":"379","endLine":31,"endColumn":15},{"ruleId":"376","severity":1,"message":"414","line":5,"column":10,"nodeType":"378","messageId":"379","endLine":5,"endColumn":17},{"ruleId":"376","severity":1,"message":"415","line":8,"column":10,"nodeType":"378","messageId":"379","endLine":8,"endColumn":14},{"ruleId":"376","severity":1,"message":"416","line":8,"column":16,"nodeType":"378","messageId":"379","endLine":8,"endColumn":23},{"ruleId":"376","severity":1,"message":"417","line":9,"column":10,"nodeType":"378","messageId":"379","endLine":9,"endColumn":21},{"ruleId":"376","severity":1,"message":"418","line":9,"column":23,"nodeType":"378","messageId":"379","endLine":9,"endColumn":37},{"ruleId":"376","severity":1,"message":"419","line":13,"column":10,"nodeType":"378","messageId":"379","endLine":13,"endColumn":20},{"ruleId":"376","severity":1,"message":"420","line":13,"column":22,"nodeType":"378","messageId":"379","endLine":13,"endColumn":35},{"ruleId":"376","severity":1,"message":"421","line":14,"column":10,"nodeType":"378","messageId":"379","endLine":14,"endColumn":16},{"ruleId":"376","severity":1,"message":"422","line":14,"column":18,"nodeType":"378","messageId":"379","endLine":14,"endColumn":27},{"ruleId":"376","severity":1,"message":"404","line":15,"column":10,"nodeType":"378","messageId":"379","endLine":15,"endColumn":14},{"ruleId":"376","severity":1,"message":"423","line":15,"column":16,"nodeType":"378","messageId":"379","endLine":15,"endColumn":23},{"ruleId":"376","severity":1,"message":"424","line":16,"column":10,"nodeType":"378","messageId":"379","endLine":16,"endColumn":20},{"ruleId":"376","severity":1,"message":"425","line":33,"column":9,"nodeType":"378","messageId":"379","endLine":33,"endColumn":17},{"ruleId":"376","severity":1,"message":"426","line":36,"column":9,"nodeType":"378","messageId":"379","endLine":36,"endColumn":17},{"ruleId":"388","severity":1,"message":"389","line":37,"column":5,"nodeType":"390","messageId":"391","endLine":53,"endColumn":6},{"ruleId":"427","severity":1,"message":"428","line":39,"column":9,"nodeType":"429","messageId":"430","endLine":51,"endColumn":10},{"ruleId":"376","severity":1,"message":"431","line":56,"column":9,"nodeType":"378","messageId":"379","endLine":56,"endColumn":17},{"ruleId":"392","severity":1,"message":"393","line":75,"column":27,"nodeType":"394","messageId":"395","endLine":75,"endColumn":29},{"ruleId":"376","severity":1,"message":"432","line":97,"column":9,"nodeType":"378","messageId":"379","endLine":97,"endColumn":23},{"ruleId":"376","severity":1,"message":"433","line":8,"column":10,"nodeType":"378","messageId":"379","endLine":8,"endColumn":20},{"ruleId":"376","severity":1,"message":"434","line":8,"column":22,"nodeType":"378","messageId":"379","endLine":8,"endColumn":35},{"ruleId":"376","severity":1,"message":"435","line":11,"column":10,"nodeType":"378","messageId":"379","endLine":11,"endColumn":17},{"ruleId":"376","severity":1,"message":"436","line":11,"column":19,"nodeType":"378","messageId":"379","endLine":11,"endColumn":29},{"ruleId":"376","severity":1,"message":"437","line":13,"column":10,"nodeType":"378","messageId":"379","endLine":13,"endColumn":19},{"ruleId":"376","severity":1,"message":"438","line":13,"column":21,"nodeType":"378","messageId":"379","endLine":13,"endColumn":33},{"ruleId":"376","severity":1,"message":"439","line":8,"column":3,"nodeType":"378","messageId":"379","endLine":8,"endColumn":6},{"ruleId":"376","severity":1,"message":"402","line":11,"column":3,"nodeType":"378","messageId":"379","endLine":11,"endColumn":8},{"ruleId":"376","severity":1,"message":"440","line":12,"column":3,"nodeType":"378","messageId":"379","endLine":12,"endColumn":8},{"ruleId":"376","severity":1,"message":"414","line":17,"column":10,"nodeType":"378","messageId":"379","endLine":17,"endColumn":17},{"ruleId":"376","severity":1,"message":"415","line":20,"column":10,"nodeType":"378","messageId":"379","endLine":20,"endColumn":14},{"ruleId":"376","severity":1,"message":"416","line":20,"column":16,"nodeType":"378","messageId":"379","endLine":20,"endColumn":23},{"ruleId":"376","severity":1,"message":"417","line":21,"column":10,"nodeType":"378","messageId":"379","endLine":21,"endColumn":21},{"ruleId":"376","severity":1,"message":"418","line":21,"column":23,"nodeType":"378","messageId":"379","endLine":21,"endColumn":37},{"ruleId":"376","severity":1,"message":"419","line":25,"column":10,"nodeType":"378","messageId":"379","endLine":25,"endColumn":20},{"ruleId":"376","severity":1,"message":"420","line":25,"column":22,"nodeType":"378","messageId":"379","endLine":25,"endColumn":35},{"ruleId":"376","severity":1,"message":"421","line":26,"column":10,"nodeType":"378","messageId":"379","endLine":26,"endColumn":16},{"ruleId":"376","severity":1,"message":"422","line":26,"column":18,"nodeType":"378","messageId":"379","endLine":26,"endColumn":27},{"ruleId":"376","severity":1,"message":"404","line":27,"column":10,"nodeType":"378","messageId":"379","endLine":27,"endColumn":14},{"ruleId":"376","severity":1,"message":"423","line":27,"column":16,"nodeType":"378","messageId":"379","endLine":27,"endColumn":23},{"ruleId":"376","severity":1,"message":"424","line":28,"column":10,"nodeType":"378","messageId":"379","endLine":28,"endColumn":20},{"ruleId":"376","severity":1,"message":"425","line":45,"column":9,"nodeType":"378","messageId":"379","endLine":45,"endColumn":17},{"ruleId":"376","severity":1,"message":"426","line":48,"column":9,"nodeType":"378","messageId":"379","endLine":48,"endColumn":17},{"ruleId":"388","severity":1,"message":"389","line":49,"column":5,"nodeType":"390","messageId":"391","endLine":65,"endColumn":6},{"ruleId":"427","severity":1,"message":"428","line":51,"column":9,"nodeType":"429","messageId":"430","endLine":63,"endColumn":10},{"ruleId":"376","severity":1,"message":"431","line":68,"column":9,"nodeType":"378","messageId":"379","endLine":68,"endColumn":17},{"ruleId":"392","severity":1,"message":"393","line":87,"column":27,"nodeType":"394","messageId":"395","endLine":87,"endColumn":29},{"ruleId":"376","severity":1,"message":"432","line":109,"column":9,"nodeType":"378","messageId":"379","endLine":109,"endColumn":23},{"ruleId":"376","severity":1,"message":"380","line":1,"column":27,"nodeType":"378","messageId":"379","endLine":1,"endColumn":36},{"ruleId":"376","severity":1,"message":"431","line":27,"column":9,"nodeType":"378","messageId":"379","endLine":27,"endColumn":17},{"ruleId":"388","severity":1,"message":"389","line":63,"column":9,"nodeType":"390","messageId":"391","endLine":71,"endColumn":10},{"ruleId":"376","severity":1,"message":"439","line":8,"column":3,"nodeType":"378","messageId":"379","endLine":8,"endColumn":6},{"ruleId":"376","severity":1,"message":"402","line":11,"column":3,"nodeType":"378","messageId":"379","endLine":11,"endColumn":8},{"ruleId":"376","severity":1,"message":"440","line":12,"column":3,"nodeType":"378","messageId":"379","endLine":12,"endColumn":8},{"ruleId":"376","severity":1,"message":"414","line":17,"column":10,"nodeType":"378","messageId":"379","endLine":17,"endColumn":17},{"ruleId":"376","severity":1,"message":"415","line":20,"column":10,"nodeType":"378","messageId":"379","endLine":20,"endColumn":14},{"ruleId":"376","severity":1,"message":"416","line":20,"column":16,"nodeType":"378","messageId":"379","endLine":20,"endColumn":23},{"ruleId":"376","severity":1,"message":"417","line":21,"column":10,"nodeType":"378","messageId":"379","endLine":21,"endColumn":21},{"ruleId":"376","severity":1,"message":"418","line":21,"column":23,"nodeType":"378","messageId":"379","endLine":21,"endColumn":37},{"ruleId":"376","severity":1,"message":"419","line":25,"column":10,"nodeType":"378","messageId":"379","endLine":25,"endColumn":20},{"ruleId":"376","severity":1,"message":"420","line":25,"column":22,"nodeType":"378","messageId":"379","endLine":25,"endColumn":35},{"ruleId":"376","severity":1,"message":"421","line":26,"column":10,"nodeType":"378","messageId":"379","endLine":26,"endColumn":16},{"ruleId":"376","severity":1,"message":"422","line":26,"column":18,"nodeType":"378","messageId":"379","endLine":26,"endColumn":27},{"ruleId":"376","severity":1,"message":"404","line":27,"column":10,"nodeType":"378","messageId":"379","endLine":27,"endColumn":14},{"ruleId":"376","severity":1,"message":"423","line":27,"column":16,"nodeType":"378","messageId":"379","endLine":27,"endColumn":23},{"ruleId":"376","severity":1,"message":"424","line":28,"column":10,"nodeType":"378","messageId":"379","endLine":28,"endColumn":20},{"ruleId":"376","severity":1,"message":"425","line":45,"column":9,"nodeType":"378","messageId":"379","endLine":45,"endColumn":17},{"ruleId":"376","severity":1,"message":"426","line":48,"column":9,"nodeType":"378","messageId":"379","endLine":48,"endColumn":17},{"ruleId":"388","severity":1,"message":"389","line":49,"column":5,"nodeType":"390","messageId":"391","endLine":65,"endColumn":6},{"ruleId":"427","severity":1,"message":"428","line":51,"column":9,"nodeType":"429","messageId":"430","endLine":63,"endColumn":10},{"ruleId":"376","severity":1,"message":"431","line":68,"column":9,"nodeType":"378","messageId":"379","endLine":68,"endColumn":17},{"ruleId":"392","severity":1,"message":"393","line":87,"column":27,"nodeType":"394","messageId":"395","endLine":87,"endColumn":29},{"ruleId":"376","severity":1,"message":"432","line":109,"column":9,"nodeType":"378","messageId":"379","endLine":109,"endColumn":23},{"ruleId":"376","severity":1,"message":"441","line":2,"column":38,"nodeType":"378","messageId":"379","endLine":2,"endColumn":44},{"ruleId":"376","severity":1,"message":"442","line":2,"column":46,"nodeType":"378","messageId":"379","endLine":2,"endColumn":51},{"ruleId":"376","severity":1,"message":"435","line":10,"column":10,"nodeType":"378","messageId":"379","endLine":10,"endColumn":17},{"ruleId":"376","severity":1,"message":"436","line":10,"column":19,"nodeType":"378","messageId":"379","endLine":10,"endColumn":29},{"ruleId":"376","severity":1,"message":"415","line":11,"column":10,"nodeType":"378","messageId":"379","endLine":11,"endColumn":14},{"ruleId":"376","severity":1,"message":"416","line":11,"column":16,"nodeType":"378","messageId":"379","endLine":11,"endColumn":23},{"ruleId":"376","severity":1,"message":"443","line":13,"column":10,"nodeType":"378","messageId":"379","endLine":13,"endColumn":27},{"ruleId":"376","severity":1,"message":"425","line":15,"column":9,"nodeType":"378","messageId":"379","endLine":15,"endColumn":17},{"ruleId":"376","severity":1,"message":"444","line":19,"column":9,"nodeType":"378","messageId":"379","endLine":19,"endColumn":19},{"ruleId":"376","severity":1,"message":"426","line":23,"column":9,"nodeType":"378","messageId":"379","endLine":23,"endColumn":17},{"ruleId":"392","severity":1,"message":"393","line":24,"column":18,"nodeType":"394","messageId":"395","endLine":24,"endColumn":20},{"ruleId":"376","severity":1,"message":"433","line":8,"column":10,"nodeType":"378","messageId":"379","endLine":8,"endColumn":20},{"ruleId":"376","severity":1,"message":"434","line":8,"column":22,"nodeType":"378","messageId":"379","endLine":8,"endColumn":35},{"ruleId":"376","severity":1,"message":"437","line":13,"column":10,"nodeType":"378","messageId":"379","endLine":13,"endColumn":19},{"ruleId":"376","severity":1,"message":"438","line":13,"column":21,"nodeType":"378","messageId":"379","endLine":13,"endColumn":33},{"ruleId":"376","severity":1,"message":"431","line":42,"column":9,"nodeType":"378","messageId":"379","endLine":42,"endColumn":17},{"ruleId":"388","severity":1,"message":"389","line":75,"column":9,"nodeType":"390","messageId":"391","endLine":83,"endColumn":10},{"ruleId":"376","severity":1,"message":"441","line":2,"column":38,"nodeType":"378","messageId":"379","endLine":2,"endColumn":44},{"ruleId":"376","severity":1,"message":"445","line":3,"column":10,"nodeType":"378","messageId":"379","endLine":3,"endColumn":24},{"ruleId":"376","severity":1,"message":"415","line":11,"column":10,"nodeType":"378","messageId":"379","endLine":11,"endColumn":14},{"ruleId":"376","severity":1,"message":"416","line":11,"column":16,"nodeType":"378","messageId":"379","endLine":11,"endColumn":23},{"ruleId":"376","severity":1,"message":"446","line":12,"column":10,"nodeType":"378","messageId":"379","endLine":12,"endColumn":18},{"ruleId":"376","severity":1,"message":"447","line":13,"column":29,"nodeType":"378","messageId":"379","endLine":13,"endColumn":49},{"ruleId":"376","severity":1,"message":"425","line":32,"column":9,"nodeType":"378","messageId":"379","endLine":32,"endColumn":17},{"ruleId":"376","severity":1,"message":"441","line":2,"column":38,"nodeType":"378","messageId":"379","endLine":2,"endColumn":44},{"ruleId":"376","severity":1,"message":"433","line":8,"column":10,"nodeType":"378","messageId":"379","endLine":8,"endColumn":20},{"ruleId":"376","severity":1,"message":"434","line":8,"column":22,"nodeType":"378","messageId":"379","endLine":8,"endColumn":35},{"ruleId":"376","severity":1,"message":"448","line":11,"column":10,"nodeType":"378","messageId":"379","endLine":11,"endColumn":19},{"ruleId":"376","severity":1,"message":"449","line":11,"column":21,"nodeType":"378","messageId":"379","endLine":11,"endColumn":33},{"ruleId":"376","severity":1,"message":"415","line":12,"column":10,"nodeType":"378","messageId":"379","endLine":12,"endColumn":14},{"ruleId":"376","severity":1,"message":"416","line":12,"column":16,"nodeType":"378","messageId":"379","endLine":12,"endColumn":23},{"ruleId":"376","severity":1,"message":"446","line":13,"column":10,"nodeType":"378","messageId":"379","endLine":13,"endColumn":18},{"ruleId":"376","severity":1,"message":"443","line":14,"column":10,"nodeType":"378","messageId":"379","endLine":14,"endColumn":27},{"ruleId":"376","severity":1,"message":"447","line":14,"column":29,"nodeType":"378","messageId":"379","endLine":14,"endColumn":49},{"ruleId":"376","severity":1,"message":"425","line":21,"column":9,"nodeType":"378","messageId":"379","endLine":21,"endColumn":17},{"ruleId":"376","severity":1,"message":"380","line":1,"column":27,"nodeType":"378","messageId":"379","endLine":1,"endColumn":36},{"ruleId":"376","severity":1,"message":"450","line":2,"column":55,"nodeType":"378","messageId":"379","endLine":2,"endColumn":65},{"ruleId":"376","severity":1,"message":"437","line":12,"column":10,"nodeType":"378","messageId":"379","endLine":12,"endColumn":19},{"ruleId":"376","severity":1,"message":"438","line":12,"column":21,"nodeType":"378","messageId":"379","endLine":12,"endColumn":33},{"ruleId":"376","severity":1,"message":"433","line":8,"column":10,"nodeType":"378","messageId":"379","endLine":8,"endColumn":20},{"ruleId":"376","severity":1,"message":"434","line":8,"column":22,"nodeType":"378","messageId":"379","endLine":8,"endColumn":35},{"ruleId":"376","severity":1,"message":"448","line":11,"column":10,"nodeType":"378","messageId":"379","endLine":11,"endColumn":19},{"ruleId":"376","severity":1,"message":"449","line":11,"column":21,"nodeType":"378","messageId":"379","endLine":11,"endColumn":33},{"ruleId":"376","severity":1,"message":"437","line":13,"column":10,"nodeType":"378","messageId":"379","endLine":13,"endColumn":19},{"ruleId":"376","severity":1,"message":"438","line":13,"column":21,"nodeType":"378","messageId":"379","endLine":13,"endColumn":33},{"ruleId":"376","severity":1,"message":"380","line":1,"column":27,"nodeType":"378","messageId":"379","endLine":1,"endColumn":36},{"ruleId":"376","severity":1,"message":"448","line":12,"column":10,"nodeType":"378","messageId":"379","endLine":12,"endColumn":19},{"ruleId":"376","severity":1,"message":"449","line":12,"column":21,"nodeType":"378","messageId":"379","endLine":12,"endColumn":33},{"ruleId":"376","severity":1,"message":"431","line":25,"column":9,"nodeType":"378","messageId":"379","endLine":25,"endColumn":17},{"ruleId":"388","severity":1,"message":"389","line":58,"column":9,"nodeType":"390","messageId":"391","endLine":66,"endColumn":10},{"ruleId":"372","replacedBy":"451"},{"ruleId":"374","replacedBy":"452"},{"ruleId":"376","severity":1,"message":"453","line":7,"column":10,"nodeType":"378","messageId":"379","endLine":7,"endColumn":17},"no-native-reassign",["454"],"no-negated-in-lhs",["455"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Component' is defined but never used.","'logo' is defined but never used.","'ProtectedRoute' is defined but never used.","'Link' is defined but never used.","'AdminProtectedRoutes' is defined but never used.","'Admin' is defined but never used.","'errorMessage' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'selected' is assigned a value but never used.","'clickSideBar' is assigned a value but never used.","'getContent' is defined but never used.","'Radio' is defined but never used.","'triggerFocus' is defined but never used.","'info' is assigned a value but never used.","'counter' is assigned a value but never used.","'setCounter' is assigned a value but never used.","'assignedJeepId' is assigned a value but never used.","'setAssignedJeepId' is assigned a value but never used.","'jeepneyDrivers' is assigned a value but never used.","'setJeepneyDrivers' is assigned a value but never used.","'selectedKey' is assigned a value but never used.","'Search' is assigned a value but never used.","'Text' is assigned a value but never used.","'Content' is defined but never used.","'file' is assigned a value but never used.","'setFile' is assigned a value but never used.","'imageStatus' is assigned a value but never used.","'setImageStatus' is assigned a value but never used.","'fetchImage' is assigned a value but never used.","'setFetchImage' is assigned a value but never used.","'images' is assigned a value but never used.","'setImages' is assigned a value but never used.","'setInfo' is assigned a value but never used.","'ifCanceled' is assigned a value but never used.","'checking' is assigned a value but never used.","'viewFile' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'handleOk' is assigned a value but never used.","'onFinishFailed' is assigned a value but never used.","'modalValue' is assigned a value but never used.","'setModalValue' is assigned a value but never used.","'drivers' is assigned a value but never used.","'setDrivers' is assigned a value but never used.","'imagePath' is assigned a value but never used.","'setImagePath' is assigned a value but never used.","'Col' is defined but never used.","'Input' is defined but never used.","'Upload' is defined but never used.","'Space' is defined but never used.","'uploadedImagePath' is assigned a value but never used.","'unchecking' is assigned a value but never used.","'UploadOutlined' is defined but never used.","'filename' is assigned a value but never used.","'setUploadedImagePath' is assigned a value but never used.","'barangays' is assigned a value but never used.","'setBarangays' is assigned a value but never used.","'Typography' is defined but never used.",["454"],["455"],"'funData' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]