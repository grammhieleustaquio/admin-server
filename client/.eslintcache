[{"D:\\rex\\ReTrackAdmin\\admin-ui\\admin-server\\client\\src\\index.js":"1","D:\\rex\\ReTrackAdmin\\admin-ui\\admin-server\\client\\src\\App.js":"2","D:\\rex\\ReTrackAdmin\\admin-ui\\admin-server\\client\\src\\reportWebVitals.js":"3","D:\\rex\\ReTrackAdmin\\admin-ui\\admin-server\\client\\src\\components\\GlobalContext\\AuthContext.js":"4","D:\\rex\\ReTrackAdmin\\admin-ui\\admin-server\\client\\src\\views\\Login.js":"5","D:\\rex\\ReTrackAdmin\\admin-ui\\admin-server\\client\\src\\views\\Register.js":"6","D:\\rex\\ReTrackAdmin\\admin-ui\\admin-server\\client\\src\\components\\ProtectedRoutes\\LoginProtectedRoutes.js":"7","D:\\rex\\ReTrackAdmin\\admin-ui\\admin-server\\client\\src\\components\\ProtectedRoutes\\AdminProtectedRoutes.js":"8","D:\\rex\\ReTrackAdmin\\admin-ui\\admin-server\\client\\src\\components\\ProtectedRoutes\\MainProtectedRoutes.js":"9","D:\\rex\\ReTrackAdmin\\admin-ui\\admin-server\\client\\src\\components\\GlobalReducer\\AuthReducer.js":"10","D:\\rex\\ReTrackAdmin\\admin-ui\\admin-server\\client\\src\\views\\index.js":"11","D:\\rex\\ReTrackAdmin\\admin-ui\\admin-server\\client\\src\\views\\Imaged.js":"12","D:\\rex\\ReTrackAdmin\\admin-ui\\admin-server\\client\\src\\views\\Admin.js":"13","D:\\rex\\ReTrackAdmin\\admin-ui\\admin-server\\client\\src\\views\\UploadDashboard.js":"14","D:\\rex\\ReTrackAdmin\\admin-ui\\admin-server\\client\\src\\views\\BarangaysTableListContent.js":"15","D:\\rex\\ReTrackAdmin\\admin-ui\\admin-server\\client\\src\\views\\JeepneyDasboard.js":"16","D:\\rex\\ReTrackAdmin\\admin-ui\\admin-server\\client\\src\\views\\DriversTableListContent.js":"17","D:\\rex\\ReTrackAdmin\\admin-ui\\admin-server\\client\\src\\views\\JeepneysTableListContent.js":"18","D:\\rex\\ReTrackAdmin\\admin-ui\\admin-server\\client\\src\\components\\dashboard2\\index.js":"19","D:\\rex\\ReTrackAdmin\\admin-ui\\admin-server\\client\\src\\components\\DriversTableList\\index.js":"20","D:\\rex\\ReTrackAdmin\\admin-ui\\admin-server\\client\\src\\components\\JeepneysTableList\\index.js":"21","D:\\rex\\ReTrackAdmin\\admin-ui\\admin-server\\client\\src\\components\\dashboard5\\index.js":"22","D:\\rex\\ReTrackAdmin\\admin-ui\\admin-server\\client\\src\\components\\BarangaysTableList\\index.js":"23","D:\\rex\\ReTrackAdmin\\admin-ui\\admin-server\\client\\src\\components\\dashboard2\\JeepneysChartShit.js":"24","D:\\rex\\ReTrackAdmin\\admin-ui\\admin-server\\client\\src\\components\\JeepneysTableList\\JeepneysTableList.js":"25","D:\\rex\\ReTrackAdmin\\admin-ui\\admin-server\\client\\src\\components\\DriversTableList\\DriversTableList.js":"26","D:\\rex\\ReTrackAdmin\\admin-ui\\admin-server\\client\\src\\components\\dashboard5\\ImageUpload.js":"27","D:\\rex\\ReTrackAdmin\\admin-ui\\admin-server\\client\\src\\components\\BarangaysTableList\\BarangaysTableList.js":"28","D:\\rex\\ReTrackAdmin\\admin-ui\\admin-server\\client\\src\\components\\DriversTableList\\AddDriverModal.js":"29","D:\\rex\\ReTrackAdmin\\admin-ui\\admin-server\\client\\src\\components\\JeepneysTableList\\AddJeepneyModal.js":"30","D:\\rex\\ReTrackAdmin\\admin-ui\\admin-server\\client\\src\\components\\dashboard5\\ImageUploadDashboard.js":"31","D:\\rex\\ReTrackAdmin\\admin-ui\\admin-server\\client\\src\\components\\BarangaysTableList\\AddBarangayModal.js":"32","D:\\rex\\ReTrackAdmin\\admin-ui\\admin-server\\client\\src\\components\\BarangaysTableList\\BarangaysInfoModal.js":"33","D:\\rex\\ReTrackAdmin\\admin-ui\\admin-server\\client\\src\\components\\dashboard4\\index.js":"34","D:\\rex\\ReTrackAdmin\\admin-ui\\admin-server\\client\\src\\components\\DriversTableList\\DriversInfoModal.js":"35","D:\\rex\\ReTrackAdmin\\admin-ui\\admin-server\\client\\src\\components\\JeepneysTableList\\JeepneysInfoModal.js":"36","D:\\rex\\ReTrackAdmin\\admin-ui\\admin-server\\client\\src\\components\\dashboard4\\ImageUploadChartShit.js":"37","D:\\rex\\ReTrackAdmin\\admin-ui\\admin-server\\client\\src\\components\\BarangaysTableList\\EditBarangayModal.js":"38","D:\\rex\\ReTrackAdmin\\admin-ui\\admin-server\\client\\src\\components\\BarangaysTableList\\AddBarangayImageModal.js":"39"},{"size":653,"mtime":1612008031359,"results":"40","hashOfConfig":"41"},{"size":1461,"mtime":1612008030905,"results":"42","hashOfConfig":"41"},{"size":375,"mtime":1612008031359,"results":"43","hashOfConfig":"41"},{"size":1925,"mtime":1612008030999,"results":"44","hashOfConfig":"41"},{"size":2913,"mtime":1612008031421,"results":"45","hashOfConfig":"41"},{"size":4155,"mtime":1612013045123,"results":"46","hashOfConfig":"41"},{"size":609,"mtime":1612008031122,"results":"47","hashOfConfig":"41"},{"size":636,"mtime":1612008031122,"results":"48","hashOfConfig":"41"},{"size":634,"mtime":1612008031215,"results":"49","hashOfConfig":"41"},{"size":447,"mtime":1612008030999,"results":"50","hashOfConfig":"41"},{"size":48,"mtime":1612008031421,"results":"51","hashOfConfig":"41"},{"size":264,"mtime":1612008031421,"results":"52","hashOfConfig":"41"},{"size":4351,"mtime":1612418903963,"results":"53","hashOfConfig":"41"},{"size":302,"mtime":1612008031421,"results":"54","hashOfConfig":"41"},{"size":427,"mtime":1612008031359,"results":"55","hashOfConfig":"41"},{"size":330,"mtime":1612008031421,"results":"56","hashOfConfig":"41"},{"size":417,"mtime":1612008031359,"results":"57","hashOfConfig":"41"},{"size":457,"mtime":1612008031421,"results":"58","hashOfConfig":"41"},{"size":135,"mtime":1612008031215,"results":"59","hashOfConfig":"41"},{"size":192,"mtime":1612008030983,"results":"60","hashOfConfig":"41"},{"size":199,"mtime":1612008031014,"results":"61","hashOfConfig":"41"},{"size":169,"mtime":1612008031289,"results":"62","hashOfConfig":"41"},{"size":202,"mtime":1612008030921,"results":"63","hashOfConfig":"41"},{"size":3236,"mtime":1612008031215,"results":"64","hashOfConfig":"41"},{"size":3418,"mtime":1612419419641,"results":"65","hashOfConfig":"41"},{"size":3434,"mtime":1612008030983,"results":"66","hashOfConfig":"41"},{"size":4548,"mtime":1612323645028,"results":"67","hashOfConfig":"41"},{"size":3578,"mtime":1612321380861,"results":"68","hashOfConfig":"41"},{"size":5681,"mtime":1612008030936,"results":"69","hashOfConfig":"41"},{"size":5195,"mtime":1612009836701,"results":"70","hashOfConfig":"41"},{"size":333,"mtime":1612008031288,"results":"71","hashOfConfig":"41"},{"size":4457,"mtime":1612240294081,"results":"72","hashOfConfig":"41"},{"size":4739,"mtime":1612419838101,"results":"73","hashOfConfig":"41"},{"size":214,"mtime":1612008031231,"results":"74","hashOfConfig":"41"},{"size":4089,"mtime":1612008030936,"results":"75","hashOfConfig":"41"},{"size":4010,"mtime":1612008030999,"results":"76","hashOfConfig":"41"},{"size":2741,"mtime":1612323688887,"results":"77","hashOfConfig":"41"},{"size":4338,"mtime":1612246366145,"results":"78","hashOfConfig":"41"},{"size":6149,"mtime":1612420155888,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"cqpp1q",{"filePath":"83","messages":"84","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"82"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"82"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"82"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"82"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"82"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"82"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"82"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"82"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"82"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"82"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"82"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"82"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"82"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"82"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"82"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"82"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"82"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"82"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\rex\\ReTrackAdmin\\admin-ui\\admin-server\\client\\src\\index.js",[],["177","178"],"D:\\rex\\ReTrackAdmin\\admin-ui\\admin-server\\client\\src\\App.js",["179","180","181","182","183","184","185"],"import React, { useState, useEffect, useContext, Component } from \"react\";\r\nimport logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  ProtectedRoute,\r\n  Link,\r\n} from \"react-router-dom\";\r\n\r\nimport LoginProtectedRoutes from \"./components/ProtectedRoutes/LoginProtectedRoutes\";\r\nimport AdminProtectedRoutes from \"./components/ProtectedRoutes/AdminProtectedRoutes\";\r\nimport MainProtectedRoutes from \"./components/ProtectedRoutes/MainProtectedRoutes\";\r\n\r\nimport { AuthContext } from \"./components/GlobalContext/AuthContext\";\r\n\r\nimport { Admin } from \"./views\";\r\nimport Login from \"./views/Login\";\r\nimport Register from \"./views/Register\";\r\n\r\nfunction App() {\r\n  let Auth = useContext(AuthContext);\r\n  console.log(Auth);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {!Auth.state.isLoading && (\r\n        <Router>\r\n          <Switch>\r\n            <LoginProtectedRoutes\r\n              Auth={Auth}\r\n              path=\"/login\"\r\n              component={Login}\r\n              exact\r\n            />\r\n            <MainProtectedRoutes Auth={Auth} path=\"/\" component={Admin} exact />\r\n            <LoginProtectedRoutes\r\n              Auth={Auth}\r\n              path=\"/register\"\r\n              component={Register}\r\n              exact\r\n            />\r\n            <Route component={() => <h1>URL NOT FOUND</h1>} />\r\n          </Switch>\r\n        </Router>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\rex\\ReTrackAdmin\\admin-ui\\admin-server\\client\\src\\reportWebVitals.js",[],"D:\\rex\\ReTrackAdmin\\admin-ui\\admin-server\\client\\src\\components\\GlobalContext\\AuthContext.js",[],"D:\\rex\\ReTrackAdmin\\admin-ui\\admin-server\\client\\src\\views\\Login.js",["186","187","188"],"import React, { useState, useContext } from \"react\";\r\nimport { Form, Input, Button, Checkbox, Card, Row, Col } from \"antd\";\r\n\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { AuthContext } from \".././components/GlobalContext/AuthContext\";\r\nimport Imaged from \"./Imaged\";\r\n\r\nconst layout = {\r\n  labelCol: { span: 8 },\r\n  wrapperCol: { span: 16 },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: { offset: 8, span: 16 },\r\n};\r\n\r\nfunction Login({ history }) {\r\n  let Auth = useContext(AuthContext);\r\n\r\n  const onFinish = async (values) => {\r\n    console.log(\"Success:\", values);\r\n\r\n    console.log(values);\r\n    let { success, errorMessage } = await Auth.authenticate(values);\r\n    console.log(success);\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  return (\r\n    <div className = \"loginCard\">\r\n       <Row type=\"flex\" justify=\"center\" align=\"middle\" style={{minHeight: '80vh'}}>\r\n        <Col>\r\n        \r\n          <Card title=\"Retrack ADMIN\" className=\"loginCardStyle\"\r\n          >\r\n            \r\n            <cardBody>\r\n            <Imaged/>\r\n              <Form\r\n                {...layout}\r\n                name=\"basic\"\r\n                initialValues={{ remember: true }}\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n              >\r\n                <Form.Item\r\n                  label=\"Email\"\r\n                  name=\"email\"\r\n                  rules={[\r\n                    {\r\n                      type: \"email\",\r\n                      message: \"The input is not valid E-mail!\",\r\n                    },\r\n                    { required: true, message: \"Please input your Email!\" },\r\n                  ]}\r\n                >\r\n                  <Input />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                  label=\"Password\"\r\n                  name=\"password\"\r\n                  rules={[\r\n                    { required: true, message: \"Please input your password!\" },\r\n                  ]}\r\n                >\r\n                  <Input.Password />\r\n                  \r\n                </Form.Item>\r\n                <a  style={{ float: 'right' }} href=\"/register\">Need Account?</a>\r\n                \r\n\r\n                {/* <Form.Item\r\n                  {...tailLayout}\r\n                  name=\"remember\"\r\n                  valuePropName=\"checked\"\r\n                >\r\n                  <Checkbox>Remember me</Checkbox>\r\n                </Form.Item> */}\r\n\r\n                  <Form.Item {...tailLayout}>\r\n                    <Button type=\"primary\" htmlType=\"submit\" shape=\"round\"  className=\"form-button\">\r\n                      LOGIN\r\n                    </Button>\r\n                     \r\n                  </Form.Item>\r\n              </Form>\r\n             \r\n            </cardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Login);\r\n","D:\\rex\\ReTrackAdmin\\admin-ui\\admin-server\\client\\src\\views\\Register.js",["189","190","191","192","193","194","195"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Typography,\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Checkbox,\r\n} from \"antd\";\r\nimport axios from \"axios\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Content } from \"antd/lib/layout/layout\";\r\nimport Imaged from \"./Imaged\";\r\n\r\nconst { Title, Text } = Typography;\r\n\r\nfunction Register({ history }) {\r\n  const onFinish = (values) => {\r\n    console.log(values);\r\n    console.log(values);\r\n    axios\r\n      .post(\"/api/v1/users/register\", values)\r\n      .then((res) => {\r\n        history.push(\"/login\");\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"fail\");\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  const checking = () => {\r\n    console.log(\"check\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"registerCard\">\r\n      <Row\r\n        type=\"flex\"\r\n        justify=\"center\"\r\n        align=\"middle\"\r\n        style={{ minHeight: \"90vh\" }}\r\n      >\r\n        <Col>\r\n          <Card title=\"Retrack ADMIN\" className=\"loginCardStyle\">\r\n            <Imaged />\r\n            <Form\r\n              name=\"basic\"\r\n              initialValues={{ remember: true }}\r\n              onFinish={onFinish}\r\n              onFinishFailed={onFinishFailed}\r\n            >\r\n              <h4>Admin Account Registration</h4>\r\n              <Form.Item\r\n                label=\"First Name\"\r\n                name=\"firstName\"\r\n                rules={[\r\n                  { required: true, message: \"Please input your First Name!\" },\r\n                ]}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                label=\"Last Name\"\r\n                name=\"lastName\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please input your Last Name!\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                label=\"Email\"\r\n                name=\"email\"\r\n                rules={[\r\n                  {\r\n                    type: \"email\",\r\n                    message: \"The input is not valid E-mail!\",\r\n                  },\r\n                  { required: true, message: \"Please input your email!\" },\r\n                ]}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please input your password!\",\r\n                  },\r\n                ]}\r\n                hasFeedback\r\n              >\r\n                <Input.Password />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                name=\"confirm\"\r\n                label=\"Confirm Password\"\r\n                dependencies={[\"password\"]}\r\n                hasFeedback\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please confirm your password!\",\r\n                  },\r\n                  ({ getFieldValue }) => ({\r\n                    validator(_, value) {\r\n                      if (!value || getFieldValue(\"password\") === value) {\r\n                        return Promise.resolve();\r\n                      }\r\n                      return Promise.reject(\r\n                        \"The two passwords that you entered do not match!\"\r\n                      );\r\n                    },\r\n                  }),\r\n                ]}\r\n              >\r\n                <Input.Password />\r\n              </Form.Item>\r\n\r\n              <Form.Item>\r\n                <Button\r\n                  type=\"primary\"\r\n                  htmlType=\"submit\"\r\n                  shape=\"round\"\r\n                  className=\"form-button\"\r\n                >\r\n                  REGISTER\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Register);\r\n","D:\\rex\\ReTrackAdmin\\admin-ui\\admin-server\\client\\src\\components\\ProtectedRoutes\\LoginProtectedRoutes.js",["196"],"import React from \"react\";\r\nimport { Route, Redirect, withRouter } from \"react-router-dom\";\r\n\r\nfunction LoginProtectedRoutes({ component: Component, Auth, history, res }) {\r\n  return (\r\n    <Route\r\n      {...res}\r\n      render={(props) =>\r\n        Auth.state.isAuthenticated &&\r\n        Auth.state.userData.myStatus == \"admin\" ? (\r\n          <Redirect\r\n            to={{\r\n              pathname: `/`,\r\n              state: { from: props.location },\r\n            }}\r\n          />\r\n        ) : (\r\n          <Component />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default withRouter(LoginProtectedRoutes);\r\n","D:\\rex\\ReTrackAdmin\\admin-ui\\admin-server\\client\\src\\components\\ProtectedRoutes\\AdminProtectedRoutes.js",["197"],"import React from \"react\";\r\nimport { Route, Redirect, withRouter } from \"react-router-dom\";\r\n\r\nfunction AdminProtectedRoute({ component: Component, Auth, history, res }) {\r\n  console.log(Auth);\r\n  return (\r\n    <Route\r\n      {...res}\r\n      render={(props) =>\r\n        Auth.state.isAuthenticated && Auth.state.userData.myStatus == \"home\" ? (\r\n          <Component Auth={Auth} />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/login\",\r\n              state: { from: props.location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default withRouter(AdminProtectedRoute);\r\n","D:\\rex\\ReTrackAdmin\\admin-ui\\admin-server\\client\\src\\components\\ProtectedRoutes\\MainProtectedRoutes.js",["198"],"import React from \"react\";\r\nimport { Route, Redirect, withRouter } from \"react-router-dom\";\r\n\r\nfunction MainProtectedRoutes({ component: Component, Auth, history, res }) {\r\n  console.log(Auth);\r\n  return (\r\n    <Route\r\n      {...res}\r\n      render={(props) =>\r\n        Auth.state.isAuthenticated &&\r\n        Auth.state.userData.myStatus == \"admin\" ? (\r\n          <Component />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/login\",\r\n              state: { from: props.location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default withRouter(MainProtectedRoutes);\r\n","D:\\rex\\ReTrackAdmin\\admin-ui\\admin-server\\client\\src\\components\\GlobalReducer\\AuthReducer.js",["199"],"export default (state, action) => {\r\n  switch (action.type) {\r\n    case \"LOAD_TOKEN\":\r\n      return {\r\n        ...state,\r\n        secureToken: action.secureToken,\r\n        userData: action.userData,\r\n        isAuthenticated: true,\r\n        isLoading: false,\r\n      };\r\n\r\n    case \"LOADING\":\r\n      return { ...state, isLoading: false };\r\n\r\n    case \"LOAD_USER_DATA\":\r\n      return { ...state };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n","D:\\rex\\ReTrackAdmin\\admin-ui\\admin-server\\client\\src\\views\\index.js",[],"D:\\rex\\ReTrackAdmin\\admin-ui\\admin-server\\client\\src\\views\\Imaged.js",[],"D:\\rex\\ReTrackAdmin\\admin-ui\\admin-server\\client\\src\\views\\Admin.js",["200","201","202","203"],"D:\\rex\\ReTrackAdmin\\admin-ui\\admin-server\\client\\src\\views\\UploadDashboard.js",[],"D:\\rex\\ReTrackAdmin\\admin-ui\\admin-server\\client\\src\\views\\BarangaysTableListContent.js",[],"D:\\rex\\ReTrackAdmin\\admin-ui\\admin-server\\client\\src\\views\\JeepneyDasboard.js",[],"D:\\rex\\ReTrackAdmin\\admin-ui\\admin-server\\client\\src\\views\\DriversTableListContent.js",[],"D:\\rex\\ReTrackAdmin\\admin-ui\\admin-server\\client\\src\\views\\JeepneysTableListContent.js",[],"D:\\rex\\ReTrackAdmin\\admin-ui\\admin-server\\client\\src\\components\\dashboard2\\index.js",[],"D:\\rex\\ReTrackAdmin\\admin-ui\\admin-server\\client\\src\\components\\DriversTableList\\index.js",[],"D:\\rex\\ReTrackAdmin\\admin-ui\\admin-server\\client\\src\\components\\JeepneysTableList\\index.js",[],"D:\\rex\\ReTrackAdmin\\admin-ui\\admin-server\\client\\src\\components\\dashboard5\\index.js",[],"D:\\rex\\ReTrackAdmin\\admin-ui\\admin-server\\client\\src\\components\\BarangaysTableList\\index.js",[],"D:\\rex\\ReTrackAdmin\\admin-ui\\admin-server\\client\\src\\components\\dashboard2\\JeepneysChartShit.js",["204","205"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Typography,\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Checkbox,\r\n} from \"antd\";\r\nimport axios from \"axios\";\r\nimport { Content } from \"antd/lib/layout/layout\";\r\n\r\nconst { Title, Text } = Typography;\r\n\r\nfunction JeepneysChartShit() {\r\n  const [jeepneys, setJeepneys] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/api/v1/jeepneys/search_all_jeepneys\")\r\n      .then((res) => {\r\n        //console.log(res);\r\n\r\n        let data = res.data;\r\n        setJeepneys(data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }, []);\r\n\r\n  const onFinish = (values) => {\r\n    console.log(values);\r\n    axios\r\n      .post(\"/api/v1/jeepneys/add_jeep\", values)\r\n      .then((res) => {\r\n        let jeepneysCopy = [...jeepneys];\r\n\r\n        jeepneysCopy = [...jeepneysCopy, res.data];\r\n        //console.log(jeepneysCopy);\r\n        setJeepneys(jeepneysCopy);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"fail\");\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  const checking = () => {\r\n    console.log(\"check\");\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    axios\r\n      .delete(\"/api/v1/jeepneys/delete_jeep\", {\r\n        params: {\r\n          id,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        let jeepneysCopy = [...jeepneys];\r\n\r\n        jeepneysCopy = jeepneysCopy.filter((jeepney) => jeepney.id !== id);\r\n        setJeepneys(jeepneysCopy);\r\n\r\n        console.log(jeepneysCopy);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  return (\r\n    <Row gutter={[16, 16]}>\r\n      <Form\r\n        name=\"basic\"\r\n        initialValues={{ remember: true }}\r\n        onFinish={onFinish}\r\n        onFinishFailed={onFinishFailed}\r\n      >\r\n        <Form.Item\r\n          label=\"Barangay ID\"\r\n          name=\"barangayId\"\r\n          rules={[{ required: true, message: \"Please input the Barangay ID!\" }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Plate Number\"\r\n          name=\"plateNumber\"\r\n          rules={[\r\n            { required: true, message: \"Please input jeepney's Plate Number!\" },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Jeep Capacity\"\r\n          name=\"jeepCapacity\"\r\n          rules={[\r\n            { required: true, message: \"Please input the Jeep's Capacity!\" },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Button onClick={() => checking()} type=\"primary\" htmlType=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n\r\n      {jeepneys.map((jeepney, index) => (\r\n        <Col key={index} md={{ span: 6 }}>\r\n          <Card className=\"shadow-sm\">\r\n            <Title>{jeepney.driverId}</Title>\r\n            <Content>{jeepney.plateNumber}</Content>\r\n            <Content>{jeepney.jeepneyCapacity}</Content>\r\n            <Button onClick={() => handleDelete(jeepney.id)} danger>\r\n              Delete\r\n            </Button>\r\n          </Card>\r\n        </Col>\r\n      ))}\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default JeepneysChartShit;\r\n","D:\\rex\\ReTrackAdmin\\admin-ui\\admin-server\\client\\src\\components\\JeepneysTableList\\JeepneysTableList.js",["206","207","208"],"D:\\rex\\ReTrackAdmin\\admin-ui\\admin-server\\client\\src\\components\\DriversTableList\\DriversTableList.js",["209","210","211"],"import React, { Suspense, useEffect, useState} from \"react\";\r\nimport { Table, Tag, Space, Input, Row, Col, Button, Divider } from \"antd\";\r\nimport axios from \"axios\";\r\nimport Column from \"antd/lib/table/Column\";\r\nimport ColumnGroup from \"antd/lib/table/ColumnGroup\";\r\nimport DriversInfoModal from \"./DriversInfoModal\";\r\nimport AddDriverModal from \"./AddDriverModal\";\r\n\r\nfunction DriversTableList() {\r\n  const [drivers, setDrivers] = useState([]);\r\n  const { Search } = Input;\r\n  const [dataFromModal, setDataFromModal] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/api/v1/drivers/\")\r\n      .then((res) => {\r\n        console.log(res);\r\n        let data = res.data;\r\n        setDrivers(data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }, []);\r\n\r\n\r\n\r\n  const onSearch = (value) => {\r\n    axios\r\n      .post(\"/api/v1/drivers/search_drivers\", { value: value })\r\n      .then((_res) => {\r\n        console.log(_res);\r\n        let data = _res.data;\r\n        setDrivers(data);\r\n        console.log(\"success\");\r\n      });\r\n\r\n    console.log(value);\r\n  };\r\n\r\n  const modalClosed = () => {\r\n    console.log(\"Passed data from modal\", dataFromModal);\r\n    axios\r\n    .get(\"/api/v1/drivers/\")\r\n    .then((res) => {\r\n      console.log(res);\r\n     \r\n      let data = res.data;\r\n      setDrivers(data);\r\n    })\r\n    \r\n    \r\n  };\r\n\r\n  return (\r\n    \r\n    <div>\r\n      <Row justify=\"space-between\">\r\n        <Col span={4}>\r\n          <Space direction=\"vertical\">\r\n          <Search\r\n              placeholder=\"Search Drivers\"\r\n              onSearch={onSearch}\r\n              allowClear={true}\r\n              enterButton\r\n            />\r\n          </Space>\r\n        </Col>\r\n        <Col span={4}>\r\n            <AddDriverModal\r\n                  info={\"\"}\r\n                  passedData={setDataFromModal}\r\n                  afterClosing={modalClosed}\r\n                />\r\n        </Col>\r\n      </Row>\r\n      <Divider orientation=\"center\">List of Drivers</Divider>\r\n      <Row>\r\n        <Table dataSource={drivers} scroll={{ x: 1000, y: 500 }} sticky>\r\n          {/* <ColumnGroup title=\"Id\" dataIndex=\"id\" key=\"id\"></ColumnGroup> */}\r\n          {/* <ColumnGroup title=\"Name\" key=\"name\"> */}\r\n            <Column title=\"Firstname\" dataIndex=\"firstName\" key=\"firstName\"></Column>\r\n            <Column title=\"Middlename\" dataIndex=\"middleName\" key=\"middleName\"></Column>\r\n            <Column title=\"Lastname\" dataIndex=\"lastName\" key=\"lastName\"></Column>\r\n          {/* </ColumnGroup> */}\r\n          <ColumnGroup\r\n            title=\"Contact\"\r\n            dataIndex=\"contactNumber\"\r\n            key=\"contactNumber\"\r\n          ></ColumnGroup>\r\n          <ColumnGroup\r\n            title=\"Address\"\r\n            dataIndex=\"address\"\r\n            key=\"address\"\r\n          ></ColumnGroup>\r\n          <ColumnGroup\r\n            title=\"Email\"\r\n            dataIndex=\"email\"\r\n            key=\"email\"\r\n          ></ColumnGroup>\r\n          <ColumnGroup\r\n            title=\"Actions\"\r\n            key=\"actions\"\r\n            fixed=\"right\"\r\n            render={(value) => (\r\n              <Space>\r\n                <DriversInfoModal\r\n                  info={value}\r\n                  passedData={setDataFromModal}\r\n                  afterClosing={modalClosed}\r\n                />\r\n              </Space>\r\n            )}\r\n          ></ColumnGroup>\r\n        </Table>\r\n      </Row>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DriversTableList;\r\n","D:\\rex\\ReTrackAdmin\\admin-ui\\admin-server\\client\\src\\components\\dashboard5\\ImageUpload.js",["212","213","214","215","216","217","218","219"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport \"./ImageUpload.css\";\r\nimport logo from \"././logo.png\";\r\nimport {\r\n  Upload,\r\n  Button,\r\n  Space,\r\n  Row,\r\n  Col,\r\n  Image,\r\n  Form,\r\n  Radio,\r\n  Input,\r\n} from \"antd\";\r\nimport { UploadOutlined } from \"@ant-design/icons\";\r\nimport ImageUploadDashboard from \"./ImageUploadDashboard\";\r\n\r\nimport axios from \"axios\";\r\n\r\nfunction ImageUpload(props) {\r\n  const [file, setFile] = useState({});\r\n  const [filename, setFilename] = useState(\"Choose file\");\r\n  const [uploadedImagePath, setUploadedImagePath] = useState(\"\");\r\n  const [fetchImage, setFetchImage] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/api/v1/images/\")\r\n      .then((res) => {\r\n        console.log(res);\r\n\r\n        let data = res.data;\r\n        setImages(data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }, []);\r\n\r\n  const checking = (file) => {\r\n    setFilename(file);\r\n  };\r\n  const viewFile = () => {\r\n    if (filename == \"Choose file\") {\r\n      console.log(\"No image selected\");\r\n    } else {\r\n      setUploadedImagePath(filename.file.response.filePath);\r\n      console.log(filename.file.response);\r\n    }\r\n  };\r\n\r\n  const [images, setImages] = useState([]);\r\n\r\n  const onFinish = (values) => {\r\n    console.log(values);\r\n    axios\r\n      .post(\"/api/v1/images/save_image\", {\r\n        imageOwnerId: values.imageOwnerId,\r\n        imageReferenceId: values.imageReferenceId,\r\n        imagePath: uploadedImagePath,\r\n      })\r\n      .then((res) => {})\r\n      .catch((error) => console.log(error));\r\n  };\r\n  const removeImage = (val) => {\r\n    console.log(\"Remove image\", val);\r\n    axios\r\n      .delete(\"/api/v1/images/delete_folder_image\", {\r\n        params: {\r\n          filePath: val.response.filePath,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        console.log(\"image remove from folder\");\r\n      })\r\n      .catch((error) => console.log(error));\r\n    console.log(file);\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"fail\");\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  const checkingValues = () => {\r\n    console.log(\"check\");\r\n    console.log(uploadedImagePath);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Row gutter={[16, 16]}>\r\n        <Col>\r\n          <Space style={{ width: \"100%\" }} size=\"large\">\r\n            <Upload\r\n              action=\"/api/v1/images/add_image\"\r\n              listType=\"picture\"\r\n              onRemove={removeImage}\r\n              maxCount={1}\r\n              file={file}\r\n              onChange={checking}\r\n            >\r\n              <Button icon={<UploadOutlined />}>Upload Image (Max: 1)</Button>\r\n            </Upload>\r\n          </Space>\r\n        </Col>\r\n      </Row>\r\n      <Row gutter={[16, 16]}>\r\n        <Button onClick={viewFile}>Check Uploaded Image</Button>\r\n      </Row>\r\n      <Row gutter={[16, 16]}>\r\n        <Image\r\n          width={250}\r\n          height={250}\r\n          src={`/api/v1/images/${\r\n            uploadedImagePath ? uploadedImagePath : \"logo.png\"\r\n          }`}\r\n          style={{ borderColor: \"white\", border: \"10px\" }}\r\n        />\r\n      </Row>\r\n      <Row gutter={[16, 16]}>\r\n        <Form\r\n          name=\"basic\"\r\n          initialValues={{ remember: true }}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n        >\r\n          <Form.Item\r\n            label=\"Image Owner ID\"\r\n            name=\"imageOwnerId\"\r\n            rules={[\r\n              { required: true, message: \"Please input the Image owner Id!\" },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Image Reference ID\"\r\n            name=\"imageReferenceId\"\r\n            rules={[{ required: true, message: \"Please select image owner!\" }]}\r\n          >\r\n            <Radio.Group>\r\n              <Radio.Button value=\"1\">Driver</Radio.Button>\r\n              <Radio.Button value=\"2\">Jeepney</Radio.Button>\r\n              <Radio.Button value=\"3\">Barangay</Radio.Button>\r\n            </Radio.Group>\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <Button\r\n              disabled={uploadedImagePath.length === 0}\r\n              onClick={onFinish}\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n            >\r\n              {uploadedImagePath ? \"Save Image\" : \"Choose an image\"}\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <ImageUploadDashboard />\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImageUpload;\r\n","D:\\rex\\ReTrackAdmin\\admin-ui\\admin-server\\client\\src\\components\\BarangaysTableList\\BarangaysTableList.js",["220","221","222"],"import React, { Suspense, useEffect, useState } from \"react\";\r\nimport { Table, Tag, Space, Input, Row, Col, Button, Divider } from \"antd\";\r\nimport axios from \"axios\";\r\nimport Column from \"antd/lib/table/Column\";\r\nimport ColumnGroup from \"antd/lib/table/ColumnGroup\";\r\nimport BarangaysInfoModal from \"./BarangaysInfoModal\";\r\nimport AddBarangayModal from \"./AddBarangayModal\";\r\nimport EditBarangayModal from \"./EditBarangayModal\";\r\nimport AddBarangayImageModal from \"./AddBarangayImageModal\";\r\n\r\nfunction BarangaysTableList() {\r\n  const [barangays, setBarangays] = useState([]);\r\n  const { Search } = Input;\r\n  const [dataFromModal, setDataFromModal] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/api/v1/barangays/search_all_barangays\")\r\n      .then((res) => {\r\n        console.log(res);\r\n\r\n        let data = res.data;\r\n        setBarangays(data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }, []);\r\n\r\n  const onSearch = (value) => {\r\n    axios\r\n      .post(\"/api/v1/barangays/search_barangays\", { value: value })\r\n      .then((_res) => {\r\n        console.log(_res);\r\n        let data = _res.data;\r\n        setBarangays(data);\r\n        console.log(\"success\");\r\n      });\r\n\r\n    console.log(value);\r\n  };\r\n\r\n  const modalClosed = () => {\r\n    console.log(\"Passed data from modal\", dataFromModal);\r\n    axios.get(\"/api/v1/barangays/search_all_barangays\").then((res) => {\r\n      console.log(res);\r\n      let data = res.data;\r\n      setBarangays(data);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Row justify=\"space-between\">\r\n        <Col span={4}>\r\n          <Space direction=\"vertical\">\r\n            <Search\r\n              placeholder=\"Search Barangay\"\r\n              onSearch={onSearch}\r\n              allowClear={true}\r\n              enterButton\r\n            />\r\n          </Space>\r\n        </Col>\r\n        <Col span={4}>\r\n          <AddBarangayModal\r\n            info={\"\"}\r\n            passedData={setDataFromModal}\r\n            afterClosing={modalClosed}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Divider orientation=\"center\">List of Barangays</Divider>\r\n      <Row>\r\n        <Table dataSource={barangays} scroll={{ x: 1000, y: 500 }} sticky>\r\n          {/* <ColumnGroup title=\"Id\" dataIndex=\"id\" key=\"id\"></ColumnGroup> */}\r\n          {/* <ColumnGroup title=\"Name\" key=\"name\"> */}\r\n          <Column\r\n            title=\"Barangay Name\"\r\n            dataIndex=\"barangayName\"\r\n            key=\"barangayName\"\r\n          ></Column>\r\n          {/* </ColumnGroup> */}\r\n          <ColumnGroup\r\n            title=\"Location\"\r\n            dataIndex=\"location\"\r\n            key=\"location\"\r\n          ></ColumnGroup>\r\n          <ColumnGroup\r\n            title=\"Barangay Description\"\r\n            dataIndex=\"barangayDescription\"\r\n            key=\"barangayDescription\"\r\n          ></ColumnGroup>\r\n          <ColumnGroup\r\n            title=\"Actions\"\r\n            key=\"actions\"\r\n            fixed=\"right\"\r\n            render={(value) => (\r\n              <Space>\r\n                <BarangaysInfoModal\r\n                  info={value}\r\n                  passedData={setDataFromModal}\r\n                  afterClosing={modalClosed}\r\n                />\r\n                <EditBarangayModal\r\n                  info={value}\r\n                  passedData={setDataFromModal}\r\n                  afterClosing={modalClosed}\r\n                />\r\n                <AddBarangayImageModal info={value} />\r\n              </Space>\r\n            )}\r\n          ></ColumnGroup>\r\n        </Table>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BarangaysTableList;\r\n","D:\\rex\\ReTrackAdmin\\admin-ui\\admin-server\\client\\src\\components\\DriversTableList\\AddDriverModal.js",["223","224","225","226"],"import React, { useState} from \"react\";\r\nimport { Form, Input, Modal, Button, Upload, Space } from \"antd\";\r\nimport { UploadOutlined } from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\n\r\n\r\nfunction AddDriverModal(props) {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [modalValue, setModalValue] = useState(\"\");\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n  const [ifCanceled, setIfCanceled] = useState(false);\r\n  const [drivers, setDrivers] = useState([]);\r\n  const [file, setFile] = useState({});\r\n  const [filename, setFilename] = useState(\"Choose file\");\r\n  const [uploadedImagePath, setUploadedImagePath] = useState();\r\n  \r\n  \r\n\r\n  const checking = (file) => {\r\n    setFilename(file);\r\n    console.log(filename);\r\n  };\r\n  const unchecking = () => {\r\n    setFilename(\"Choose file\");\r\n    console.log(filename);\r\n  };\r\n  const viewFile = () => {\r\n    if (filename == \"Choose file\") {\r\n      console.log(\"No image selected\");\r\n    } else {\r\n      setUploadedImagePath(filename.file.response.filePath);\r\n      console.log(filename.file.response);\r\n    }\r\n  };\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n    console.log(props.info);\r\n    \r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIfCanceled(true);\r\n    setIsModalVisible(false);\r\n  };\r\n  const handleClose = () => {\r\n    if (ifCanceled) {\r\n    } else {\r\n      props.afterClosing();\r\n    }\r\n  };\r\n\r\n  const onFinish = (values) => {\r\n    console.log(values);\r\n    props.passedData(props.info);\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n    setTimeout(() => {\r\n      setIsModalVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n    \r\n    axios\r\n      .post(\"/api/v1/drivers/add_driver\", values)\r\n      .then((res) => {\r\n        let driversCopy = [...drivers];\r\n        driversCopy = [...driversCopy, res.data];\r\n        console.log(driversCopy);\r\n        setDrivers(driversCopy);\r\n        setFilename(file);\r\n            Modal.success({\r\n              content: 'Successfully Added New Driver',\r\n            })\r\n            setUploadedImagePath(filename.file.response.filePath);\r\n          console.log(uploadedImagePath);\r\n      axios\r\n        .post(\"/api/v1/images/save_image\", {\r\n          imageOwnerId: res.data.id,\r\n          imageReferenceId: 1,\r\n          imagePath: uploadedImagePath,\r\n        }) \r\n        \r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    Modal.error({\r\n      content: 'Failure to Add New Driver',\r\n    });\r\n    setTimeout(() => {\r\n      setIsModalVisible(true);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button type=\"primary\" onClick={showModal}>\r\n        Add Driver\r\n      </Button>\r\n     \r\n      <Modal\r\n        title=\"Add Driver:\"\r\n        visible={isModalVisible}\r\n        confirmLoading={confirmLoading}\r\n        onOk={onFinish}\r\n        onCancel={handleCancel}\r\n        afterClose={handleClose}\r\n        destroyOnClose={true}\r\n        footer={[\r\n        <Button key=\"back\" onClick={handleCancel}>\r\n          Cancel\r\n        </Button>,\r\n        <Button form=\"myForm\" key=\"submit\" htmlType=\"submit\" type=\"primary\" loading={confirmLoading} onClick={onFinish}>\r\n          Add\r\n        </Button>\r\n          ]}\r\n      >\r\n        <Form\r\n            name=\"basic\"\r\n            initialValues={{ remember: true }}\r\n            onFinish={onFinish}\r\n            onFinishFailed={onFinishFailed}\r\n            id=\"myForm\"\r\n        >\r\n     \r\n         \r\n        <Form.Item\r\n          label=\"First Name\"\r\n          name=\"firstName\"\r\n          rules={[{ required: true, message: \"Please input your Firstname!\" }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Middle Name\"\r\n          name=\"middleName\"\r\n          rules={[\r\n            { required: true, message: \"Please input your Middlename!\" },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Last Name\"\r\n          name=\"lastName\"\r\n          rules={[{ required: true, message: \"Please input your Lastname!\" }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Address\"\r\n          name=\"address\"\r\n          rules={[{ required: true, message: \"Please input your Address!\" }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Contact Number\"\r\n          name=\"contactNumber\"\r\n          rules= {[{ required: true, message: \"Please input your Contact Number!\" }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Generate Password\"\r\n          name=\"generatePassword\"\r\n          rules={[{ required: true, message: \"Please input your password!\" }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Email\"\r\n          name=\"email\"\r\n          rules={[{ required: true, type: \"email\", message: \"Please input your Email!\" }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Upload\r\n              action=\"/api/v1/images/add_image\"\r\n              listType=\"picture\"\r\n              maxCount={1}\r\n              file={file}\r\n              onChange = {checking} \r\n              onRemove={unchecking}\r\n            >\r\n            <Button>Choose Image (Max: 1)</Button>\r\n        </Upload>\r\n            <Space>\r\n              <Button onClick={viewFile} icon={<UploadOutlined />}>Upload</Button>\r\n            </Space>\r\n        \r\n        </Form>\r\n        \r\n      </Modal>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddDriverModal;\r\n","D:\\rex\\ReTrackAdmin\\admin-ui\\admin-server\\client\\src\\components\\JeepneysTableList\\AddJeepneyModal.js",["227","228","229","230","231","232","233","234"],"import React, { useState, useEffect } from \"react\";\r\nimport { Form, Input, Menu, Modal, Button, Upload, Select } from \"antd\";\r\nimport { UploadOutlined, DownOutlined, UserOutlined } from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\n\r\nfunction AddJeepneyModal(props) {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [modalValue, setModalValue] = useState(\"\");\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n  const [ifCanceled, setIfCanceled] = useState(false);\r\n  const [jeepneys, setJeepneys] = useState([]);\r\n  const [file, setFile] = useState({});\r\n  const [filename, setFilename] = useState(\"Choose file\");\r\n  const [uploadedImagePath, setUploadedImagePath] = useState();\r\n  const [barangays, setBarangays] = useState([]);\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n    console.log(props.info);\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/api/v1/barangays/search_all_barangays\")\r\n      .then((res) => {\r\n        console.log(res);\r\n\r\n        let data = res.data;\r\n        setBarangays(data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }, []);\r\n  const { Option } = Select;\r\n\r\n  const checking = (file) => {\r\n    setFilename(file);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIfCanceled(true);\r\n    setIsModalVisible(false);\r\n  };\r\n  const handleClose = () => {\r\n    if (ifCanceled) {\r\n    } else {\r\n      props.afterClosing();\r\n    }\r\n  };\r\n\r\n  const onFinish = (values) => {\r\n    console.log(values);\r\n    props.passedData(props.info);\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n    setTimeout(() => {\r\n      setIsModalVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n    // setUploadedImagePath(filename.file.response.filePath);\r\n    axios\r\n      .post(\"/api/v1/jeepneys/add_jeep\", values)\r\n      .then((res) => {\r\n        let jeepneysCopy = [...jeepneys];\r\n        jeepneysCopy = [...jeepneysCopy, res.data];\r\n        console.log(jeepneysCopy);\r\n        setJeepneys(jeepneysCopy);\r\n        // console.log(filename.file.response);\r\n        Modal.success({\r\n          content: \"Successfully Added New Jeepney\",\r\n        });\r\n\r\n        axios.post(\"/api/v1/images/save_image\", {\r\n          imageOwnerId: res.data.id,\r\n          imageReferenceId: 3,\r\n          imagePath: uploadedImagePath,\r\n        });\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    Modal.error({\r\n      content: \"Failure to Add New Jeepney\",\r\n    });\r\n    setTimeout(() => {\r\n      setIsModalVisible(true);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n    console.log(\"fail\");\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  const handleChange = (value) => {\r\n    console.log(`selected ${value}`);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button type=\"primary\" onClick={showModal}>\r\n        Add Jeepney\r\n      </Button>\r\n\r\n      <Modal\r\n        title=\"Add Jeepney:\"\r\n        visible={isModalVisible}\r\n        confirmLoading={confirmLoading}\r\n        onOk={onFinish}\r\n        onCancel={handleCancel}\r\n        afterClose={handleClose}\r\n        destroyOnClose={true}\r\n        footer={[\r\n          <Button key=\"back\" onClick={handleCancel}>\r\n            Cancel\r\n          </Button>,\r\n          <Button\r\n            form=\"myForm\"\r\n            key=\"submit\"\r\n            htmlType=\"submit\"\r\n            type=\"primary\"\r\n            loading={confirmLoading}\r\n            onClick={onFinish}\r\n          >\r\n            Add\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <Form\r\n          name=\"basic\"\r\n          initialValues={{ remember: true }}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n          id=\"myForm\"\r\n        >\r\n          <Form.Item\r\n            label=\"Barangay\"\r\n            name=\"barangayId\"\r\n            rules={[\r\n              { required: true, message: \"Please input the Barangay's ID!\" },\r\n            ]}\r\n          >\r\n            <Select\r\n              defaultValue=\"-Select-\"\r\n              style={{ width: 120 }}\r\n              onChange={handleChange}\r\n            >\r\n              {barangays.map((barangay, index) => (\r\n                <Option value={barangay.id}>{barangay.barangayName}</Option>\r\n              ))}\r\n            </Select>\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Plate Number\"\r\n            name=\"plateNumber\"\r\n            rules={[\r\n              { required: true, message: \"Please input the Plate Number!\" },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Jeep Capacity\"\r\n            name=\"jeepCapacity\"\r\n            rules={[\r\n              { required: true, message: \"Please input the Jeep Capacity!\" },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Upload\r\n            action=\"/api/v1/images/add_image\"\r\n            listType=\"picture\"\r\n            maxCount={1}\r\n            file={file}\r\n            onChange={checking}\r\n          >\r\n            <Button icon={<UploadOutlined />}>Upload Image (Max: 1)</Button>\r\n          </Upload>\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddJeepneyModal;\r\n","D:\\rex\\ReTrackAdmin\\admin-ui\\admin-server\\client\\src\\components\\dashboard5\\ImageUploadDashboard.js",[],"D:\\rex\\ReTrackAdmin\\admin-ui\\admin-server\\client\\src\\components\\BarangaysTableList\\AddBarangayModal.js",["235","236","237","238","239"],"import React, { useState } from \"react\";\r\nimport { Form, Input, Modal, Button, Upload } from \"antd\";\r\nimport { UploadOutlined } from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\n\r\nfunction AddBarangayModal(props) {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [modalValue, setModalValue] = useState(\"\");\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n  const [ifCanceled, setIfCanceled] = useState(false);\r\n  const [barangays, setBarangays] = useState([]);\r\n  const [file, setFile] = useState({});\r\n  const [filename, setFilename] = useState(\"Choose file\");\r\n  const [uploadedImagePath, setUploadedImagePath] = useState();\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n    console.log(props.info);\r\n  };\r\n\r\n  const checking = (file) => {\r\n    setFilename(file);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIfCanceled(true);\r\n    setIsModalVisible(false);\r\n  };\r\n  const handleClose = () => {\r\n    if (ifCanceled) {\r\n    } else {\r\n      props.afterClosing();\r\n    }\r\n  };\r\n\r\n  const onFinish = (values) => {\r\n    console.log(values);\r\n    props.passedData(props.info);\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n    setTimeout(() => {\r\n      setIsModalVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n    // setUploadedImagePath(filename.file.response.filePath);\r\n    axios\r\n      .post(\"/api/v1/barangays/add_barangay\", values)\r\n      .then((res) => {\r\n        let barangaysCopy = [...barangays];\r\n        barangaysCopy = [...barangaysCopy, res.data];\r\n        console.log(barangaysCopy);\r\n        setBarangays(barangaysCopy);\r\n        Modal.success({\r\n          content: \"Successfully Added New Barangay\",\r\n        });\r\n\r\n        axios.post(\"/api/v1/images/save_image\", {\r\n          imageOwnerId: res.data.id,\r\n          imageReferenceId: 2,\r\n          imagePath: uploadedImagePath,\r\n        });\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    Modal.error({\r\n      content: \"Failure to Add New Barangay\",\r\n    });\r\n    setTimeout(() => {\r\n      setIsModalVisible(true);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n    console.log(\"fail\");\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button type=\"primary\" onClick={showModal}>\r\n        Add Barangay\r\n      </Button>\r\n\r\n      <Modal\r\n        title=\"Add Barangay:\"\r\n        visible={isModalVisible}\r\n        confirmLoading={confirmLoading}\r\n        onOk={onFinish}\r\n        onCancel={handleCancel}\r\n        afterClose={handleClose}\r\n        destroyOnClose={true}\r\n        footer={[\r\n          <Button key=\"back\" onClick={handleCancel}>\r\n            Cancel\r\n          </Button>,\r\n          <Button\r\n            form=\"myForm\"\r\n            key=\"submit\"\r\n            htmlType=\"submit\"\r\n            type=\"primary\"\r\n            loading={confirmLoading}\r\n            onClick={onFinish}\r\n          >\r\n            Add\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <Form\r\n          name=\"basic\"\r\n          initialValues={{ remember: true }}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n          id=\"myForm\"\r\n        >\r\n          <Form.Item\r\n            label=\"Barangay Name\"\r\n            name=\"barangayName\"\r\n            rules={[\r\n              { required: true, message: \"Please input the Barangay's Name!\" },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Location\"\r\n            name=\"location\"\r\n            rules={[\r\n              { required: true, message: \"Please input Barangay's Location!\" },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Barangay Description\"\r\n            name=\"barangayDescription\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please input the Barangay's Description!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Upload\r\n            action=\"/api/v1/images/add_image\"\r\n            listType=\"picture\"\r\n            maxCount={1}\r\n            file={file}\r\n            onChange={checking}\r\n          >\r\n            <Button icon={<UploadOutlined />}>Upload Image (Max: 1)</Button>\r\n          </Upload>\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddBarangayModal;\r\n","D:\\rex\\ReTrackAdmin\\admin-ui\\admin-server\\client\\src\\components\\BarangaysTableList\\BarangaysInfoModal.js",["240","241","242","243","244","245","246"],"D:\\rex\\ReTrackAdmin\\admin-ui\\admin-server\\client\\src\\components\\dashboard4\\index.js",[],"D:\\rex\\ReTrackAdmin\\admin-ui\\admin-server\\client\\src\\components\\DriversTableList\\DriversInfoModal.js",["247","248"],"import React, { useState,useEffect } from \"react\";\r\nimport { Modal, Button, Image, Card } from \"antd\";\r\nimport axios from \"axios\";\r\n\r\n\r\nfunction DriversInfoModal(props) {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [modalValue, setModalValue] = useState(\"\");\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n  const [ifCanceled, setIfCanceled] = useState(false);\r\n  const [drivers, setDrivers] = useState([]);\r\n  const [images, setImages] = useState([]);\r\n  const [imagePath, setImagePath] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n    .get(\"/api/v1/images/\")\r\n    .then((res) => {\r\n      let data = res.data;\r\n      setImages(data);\r\n    })\r\n    .catch((error) => console.log(error));\r\n  }, []);\r\n\r\n  \r\n  \r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n    axios\r\n    .get(\"/api/v1/images/\")\r\n    .then((res) => {\r\n      let imagesCopy = [...images];\r\n      imagesCopy = imagesCopy.find((imagesCopy) => imagesCopy.imageOwnerId === props.info.id && imagesCopy.imageReferenceId === 1);\r\n      setImagePath(imagesCopy.imagePath);\r\n    })\r\n    .catch((error) => console.log(error)); \r\n  };\r\n\r\n  const handleOk = () => {\r\n    props.passedData(props.info);\r\n\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n    setTimeout(() => {\r\n      setIsModalVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n    setTimeout(() => {\r\n      setIsModalVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n    console.log(id);\r\n    axios\r\n    .delete(\"/api/v1/images/delete_image\", {\r\n      params: {\r\n        id,\r\n        referenceId: 1,\r\n      },\r\n    })\r\n    .then((res) => {\r\n      let imagesCopy = [...images];\r\n      imagesCopy = imagesCopy.filter((imagesCopy) => imagesCopy.imageOwnerId !== id && imagesCopy.imageReferenceId === 1);\r\n      setImages(imagesCopy);\r\n      console.log(imagesCopy);\r\n      \r\n    })\r\n    .catch((error) => console.log(error));\r\n\r\n    axios\r\n      .delete(\"/api/v1/drivers/delete_driver\", {\r\n        params: {\r\n          id,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        let driversCopy = [...drivers];\r\n        driversCopy = driversCopy.filter((driver) => driver.id !== id);\r\n        setDrivers(driversCopy);\r\n        console.log(driversCopy);\r\n\r\n        Modal.success({\r\n          content: 'Driver has been Removed',\r\n        });\r\n      })\r\n      .catch((error) => console.log(error));\r\n    \r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIfCanceled(true);\r\n    setIsModalVisible(false);\r\n  };\r\n  const handleClose = () => {\r\n    if (ifCanceled) {\r\n    } else {\r\n      props.afterClosing();\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <Button type=\"primary\" onClick={showModal}>\r\n        View\r\n      </Button>\r\n      <Modal\r\n        title=\"Driver Information\"\r\n        visible={isModalVisible}\r\n        confirmLoading={confirmLoading}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        afterClose={handleClose}\r\n        footer={[\r\n          <Button loading={confirmLoading} onClick={() => handleDelete(props.info.id)} danger>\r\n              Remove\r\n          </Button>\r\n          ]}\r\n      >\r\n        <p>\r\n          <h3>ID:</h3>\r\n          {props.info.id}\r\n        </p>\r\n        <p>\r\n          <h3>Name:</h3>\r\n          {props.info.firstName} {props.info.middleName} {props.info.lastName}\r\n        </p>\r\n        <p>\r\n          <h3>Contact Number:</h3>\r\n          {props.info.contactNumber}\r\n        </p>\r\n        <p>\r\n          <h3>Address: </h3>\r\n          {props.info.address}\r\n        </p>\r\n        <p>\r\n          <h3>Email Address: </h3>\r\n          {props.info.email}\r\n        </p>\r\n      <h3>Uploaded Images: </h3>\r\n          <Card className=\"shadow-sm\">\r\n              <Image\r\n                height={100}\r\n                src={`/api/v1/images/${imagePath}`}\r\n                style={{ borderColor: \"white\", border: \"10px\" }}\r\n              />\r\n\r\n          </Card>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DriversInfoModal;\r\n","D:\\rex\\ReTrackAdmin\\admin-ui\\admin-server\\client\\src\\components\\JeepneysTableList\\JeepneysInfoModal.js",["249","250"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, Button, Card, Image, Space } from \"antd\";\r\nimport axios from \"axios\";\r\n\r\nfunction JeepneysInfoModal(props) {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [modalValue, setModalValue] = useState(\"\");\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n  const [ifCanceled, setIfCanceled] = useState(false);\r\n  const [jeepneys, setJeepneys] = useState([]);\r\n  const [images, setImages] = useState([]);\r\n  const [imagePath, setImagePath] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n    .get(\"/api/v1/images/\")\r\n    .then((res) => {\r\n      let data = res.data;\r\n      setImages(data);\r\n    })\r\n    .catch((error) => console.log(error));\r\n  }, []);\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n    axios\r\n    .get(\"/api/v1/images/\")\r\n    .then((res) => {\r\n      let imagesCopy = [...images];\r\n      imagesCopy = imagesCopy.find((imagesCopy) => imagesCopy.imageOwnerId === props.info.id && imagesCopy.imageReferenceId === 3);\r\n      setImagePath(imagesCopy.imagePath);\r\n    })\r\n    .catch((error) => console.log(error)); \r\n  };\r\n\r\n  const handleOk = () => {\r\n    props.passedData(props.info);\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n    setTimeout(() => {\r\n      setIsModalVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n    setTimeout(() => {\r\n      setIsModalVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n    axios\r\n    .delete(\"/api/v1/images/delete_image\", {\r\n      params: {\r\n        id,\r\n        referenceId: 3,\r\n      },\r\n    })\r\n    .then((res) => {\r\n      let imagesCopy = [...images];\r\n      imagesCopy = imagesCopy.filter((imagesCopy) => imagesCopy.imageOwnerId !== id && imagesCopy.imageReferenceId === 3);\r\n      setImages(imagesCopy);\r\n      console.log(imagesCopy);\r\n      \r\n    })\r\n    .catch((error) => console.log(error));\r\n\r\n    axios\r\n      .delete(\"/api/v1/jeepneys/delete_jeep\", {\r\n        params: {\r\n          id,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        let jeepneysCopy = [...jeepneys];\r\n\r\n        jeepneysCopy = jeepneysCopy.filter((jeepney) => jeepney.id !== id);\r\n        setJeepneys(jeepneysCopy);\r\n\r\n        console.log(jeepneysCopy);\r\n        Modal.success({\r\n          content: 'Jeepney has been Removed',\r\n        });\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIfCanceled(true);\r\n    setIsModalVisible(false);\r\n  };\r\n  const handleClose = () => {\r\n    if (ifCanceled) {\r\n    } else {\r\n      props.afterClosing();\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <Space>\r\n      <Button type=\"primary\" onClick={showModal}>\r\n        View\r\n      </Button>\r\n      \r\n      {/* <Button type=\"default\" onClick={showModal}>\r\n        Assign Driver\r\n      </Button> */}\r\n      </Space>\r\n      <Modal\r\n        title=\"Jeepney Information\"\r\n        visible={isModalVisible}\r\n        confirmLoading={confirmLoading}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        afterClose={handleClose}\r\n        footer={[\r\n          <Button loading={confirmLoading} onClick={() => handleDelete(props.info.id)} danger>\r\n              Remove\r\n            </Button>\r\n          ]}\r\n      >\r\n        <p>\r\n          <h3>Barangay Id:</h3>\r\n          {props.info.barangayId}\r\n        </p>\r\n        <p>\r\n          <h3>Plate Number:</h3>\r\n          {props.info.plateNumber}\r\n        </p>\r\n        <p>\r\n          <h3>Jeep Capacity:</h3>\r\n          {props.info.jeepCapacity}\r\n        </p>\r\n        <h3>Uploaded Images: </h3>\r\n          <Card className=\"shadow-sm\">\r\n              <Image\r\n                height={100}\r\n                src={`/api/v1/images/${imagePath}`}\r\n                style={{ borderColor: \"white\", border: \"10px\" }}\r\n              />\r\n\r\n          </Card>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default JeepneysInfoModal;\r\n","D:\\rex\\ReTrackAdmin\\admin-ui\\admin-server\\client\\src\\components\\dashboard4\\ImageUploadChartShit.js",["251","252","253","254","255","256","257","258","259"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Typography,\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Checkbox,\r\n  Radio,\r\n  Image,\r\n} from \"antd\";\r\nimport axios from \"axios\";\r\nimport { Content } from \"antd/lib/layout/layout\";\r\nconst { Title, Text } = Typography;\r\n\r\nfunction ImageUploadChartShit() {\r\n  const [images, setImages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/api/v1/images/\")\r\n      .then((res) => {\r\n        //console.log(res);\r\n\r\n        let data = res.data;\r\n        setImages(data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }, []);\r\n\r\n  const onFinish = (values) => {\r\n    //console.log(values);\r\n    // axios\r\n    //   .post(\"/api/v1/images/add_jeep\", values)\r\n    //   .then((res) => {\r\n    //     let imagesCopy = [...images];\r\n    //     imagesCopy = [...imagesCopy, res.data];\r\n    //     console.log(imagesCopy);\r\n    //    setImages(imagesCopy);\r\n    //   })\r\n    //   .catch((error) => console.log(error));\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"fail\");\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  const checking = () => {\r\n    console.log(\"check\");\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    axios\r\n      .delete(\"/api/v1/images/delete_image\", {\r\n        params: {\r\n          id,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        let imagesCopy = [...images];\r\n        imagesCopy = imagesCopy.filter((jeepney) => jeepney.id !== id);\r\n        setImages(imagesCopy);\r\n        //console.log(imagesCopy);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  return (\r\n    <Row gutter={[16, 16]}>\r\n      <h1>List Of Saved Images: </h1>\r\n      {images.map((image, index) => (\r\n        <Col key={index} md={{ span: 6 }}>\r\n          <Card className=\"shadow-sm\">\r\n            <Title>\r\n              <Image\r\n                height={100}\r\n                src={`/api/v1/images/${image.imagePath}`}\r\n                style={{ borderColor: \"white\", border: \"10px\" }}\r\n              />\r\n            </Title>\r\n            <Content>Owner ID : {image.imageOwnerId}</Content>\r\n            <Content>\r\n              {(() => {\r\n                switch (image.imageReferenceId) {\r\n                  case 1:\r\n                    console.log(\"case 1\");\r\n                    return \"Driver\";\r\n                  case 2:\r\n                    return \"Jeepney\";\r\n                  case 3:\r\n                    return \"Barangay\";\r\n                }\r\n              })()}\r\n            </Content>\r\n            <Button onClick={() => handleDelete(image.id)} danger>\r\n              Delete\r\n            </Button>\r\n          </Card>\r\n        </Col>\r\n      ))}\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default ImageUploadChartShit;\r\n","D:\\rex\\ReTrackAdmin\\admin-ui\\admin-server\\client\\src\\components\\BarangaysTableList\\EditBarangayModal.js",["260","261","262","263","264"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, Button, Form, Input } from \"antd\";\r\nimport axios from \"axios\";\r\n\r\nfunction EditBarangayModal(props) {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [form] = Form.useForm();\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n  const [ifCanceled, setIfCanceled] = useState(false);\r\n  const [ifChanged, setIfChanged] = useState();\r\n  const [barangays, setBarangays] = useState([]);\r\n\r\n  const showModal = () => {\r\n    form.setFieldsValue({\r\n      id: props.info.id,\r\n      barangayName: props.info.barangayName,\r\n      location: props.info.location,\r\n      barangayDescription: props.info.barangayDescription,\r\n    });\r\n    setIsModalVisible(true);\r\n    setIfChanged(false);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIfCanceled(true);\r\n    setIsModalVisible(false);\r\n  };\r\n  const handleClose = () => {\r\n    if (ifCanceled) {\r\n    } else {\r\n      props.afterClosing();\r\n    }\r\n  };\r\n\r\n  const onFinish = (values) => {\r\n    console.log(ifChanged);\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n    props.passedData(props.info);\r\n\r\n    axios\r\n      .post(\"/api/v1/barangays/update_barangay\", {\r\n        id: values.id,\r\n        barangayName: values.barangayName,\r\n        location: values.location,\r\n        barangayDescription: values.barangayDescription,\r\n      })\r\n      .then((res) => {\r\n        setTimeout(() => {\r\n          setIsModalVisible(false);\r\n          setConfirmLoading(false);\r\n        }, 2000);\r\n        {\r\n          ifChanged\r\n            ? Modal.success({\r\n                content: \"Successfully Updated Barangay\",\r\n              })\r\n            : Modal.success({\r\n                content: \"Barangay Info is up to date\",\r\n              });\r\n        }\r\n      })\r\n      .catch((error) => console.log(error));\r\n\r\n    console.log(ifChanged);\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    Modal.error({\r\n      content: \"Failure to Update Barangay Info\",\r\n    });\r\n    setTimeout(() => {\r\n      setIsModalVisible(true);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n  const onValuesChange = (changedValues, allValues) => {\r\n    console.log(\"Changed\", allValues, changedValues);\r\n    setIfChanged(true);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button type=\"primary\" onClick={showModal}>\r\n        Edit\r\n      </Button>\r\n      <Modal\r\n        title=\"Update Barangay Info\"\r\n        confirmLoading={confirmLoading}\r\n        visible={isModalVisible}\r\n        onOk={onFinish}\r\n        onCancel={handleCancel}\r\n        afterClose={handleClose}\r\n        destroyOnClose={true}\r\n        footer={[\r\n          <Button key=\"back\" onClick={handleCancel}>\r\n            Cancel\r\n          </Button>,\r\n          <Button form=\"myForm\" htmlType=\"submit\" type=\"primary\">\r\n            Update\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <Form\r\n          name=\"basic\"\r\n          form={form}\r\n          initialValues={{ remember: true }}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n          onValuesChange={onValuesChange}\r\n          id=\"myForm\"\r\n        >\r\n          <Form.Item label=\"Barangay Id\" name=\"id\">\r\n            <Input disabled={true} bordered={false} />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Barangay Name\"\r\n            name=\"barangayName\"\r\n            rules={[\r\n              { required: true, message: \"Please input the Barangay's Name!\" },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Location\"\r\n            name=\"location\"\r\n            rules={[\r\n              { required: true, message: \"Please input Barangay's Location!\" },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Barangay Description\"\r\n            name=\"barangayDescription\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please input the Barangay's Description!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input.TextArea />\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditBarangayModal;\r\n","D:\\rex\\ReTrackAdmin\\admin-ui\\admin-server\\client\\src\\components\\BarangaysTableList\\AddBarangayImageModal.js",["265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283"],{"ruleId":"284","replacedBy":"285"},{"ruleId":"286","replacedBy":"287"},{"ruleId":"288","severity":1,"message":"289","line":1,"column":17,"nodeType":"290","messageId":"291","endLine":1,"endColumn":25},{"ruleId":"288","severity":1,"message":"292","line":1,"column":27,"nodeType":"290","messageId":"291","endLine":1,"endColumn":36},{"ruleId":"288","severity":1,"message":"293","line":1,"column":50,"nodeType":"290","messageId":"291","endLine":1,"endColumn":59},{"ruleId":"288","severity":1,"message":"294","line":2,"column":8,"nodeType":"290","messageId":"291","endLine":2,"endColumn":12},{"ruleId":"288","severity":1,"message":"295","line":8,"column":3,"nodeType":"290","messageId":"291","endLine":8,"endColumn":17},{"ruleId":"288","severity":1,"message":"296","line":9,"column":3,"nodeType":"290","messageId":"291","endLine":9,"endColumn":7},{"ruleId":"288","severity":1,"message":"297","line":13,"column":8,"nodeType":"290","messageId":"291","endLine":13,"endColumn":28},{"ruleId":"288","severity":1,"message":"289","line":1,"column":17,"nodeType":"290","messageId":"291","endLine":1,"endColumn":25},{"ruleId":"288","severity":1,"message":"298","line":2,"column":31,"nodeType":"290","messageId":"291","endLine":2,"endColumn":39},{"ruleId":"288","severity":1,"message":"299","line":23,"column":20,"nodeType":"290","messageId":"291","endLine":23,"endColumn":32},{"ruleId":"288","severity":1,"message":"289","line":1,"column":17,"nodeType":"290","messageId":"291","endLine":1,"endColumn":25},{"ruleId":"288","severity":1,"message":"292","line":1,"column":27,"nodeType":"290","messageId":"291","endLine":1,"endColumn":36},{"ruleId":"288","severity":1,"message":"298","line":10,"column":3,"nodeType":"290","messageId":"291","endLine":10,"endColumn":11},{"ruleId":"288","severity":1,"message":"300","line":14,"column":10,"nodeType":"290","messageId":"291","endLine":14,"endColumn":17},{"ruleId":"288","severity":1,"message":"301","line":17,"column":9,"nodeType":"290","messageId":"291","endLine":17,"endColumn":14},{"ruleId":"288","severity":1,"message":"302","line":17,"column":16,"nodeType":"290","messageId":"291","endLine":17,"endColumn":20},{"ruleId":"288","severity":1,"message":"303","line":36,"column":9,"nodeType":"290","messageId":"291","endLine":36,"endColumn":17},{"ruleId":"304","severity":1,"message":"305","line":10,"column":38,"nodeType":"306","messageId":"307","endLine":10,"endColumn":40},{"ruleId":"304","severity":1,"message":"305","line":10,"column":68,"nodeType":"306","messageId":"307","endLine":10,"endColumn":70},{"ruleId":"304","severity":1,"message":"305","line":11,"column":38,"nodeType":"306","messageId":"307","endLine":11,"endColumn":40},{"ruleId":"308","severity":1,"message":"309","line":1,"column":1,"nodeType":"310","endLine":20,"endColumn":3},{"ruleId":"288","severity":1,"message":"292","line":1,"column":37,"nodeType":"290","messageId":"291","endLine":1,"endColumn":46},{"ruleId":"288","severity":1,"message":"311","line":3,"column":8,"nodeType":"290","messageId":"291","endLine":3,"endColumn":23},{"ruleId":"288","severity":1,"message":"312","line":4,"column":8,"nodeType":"290","messageId":"291","endLine":4,"endColumn":23},{"ruleId":"313","severity":1,"message":"314","line":121,"column":19,"nodeType":"315","messageId":"316","endLine":130,"endColumn":20},{"ruleId":"288","severity":1,"message":"298","line":10,"column":3,"nodeType":"290","messageId":"291","endLine":10,"endColumn":11},{"ruleId":"288","severity":1,"message":"302","line":15,"column":16,"nodeType":"290","messageId":"291","endLine":15,"endColumn":20},{"ruleId":"288","severity":1,"message":"317","line":1,"column":17,"nodeType":"290","messageId":"291","endLine":1,"endColumn":25},{"ruleId":"288","severity":1,"message":"318","line":2,"column":17,"nodeType":"290","messageId":"291","endLine":2,"endColumn":20},{"ruleId":"288","severity":1,"message":"319","line":2,"column":46,"nodeType":"290","messageId":"291","endLine":2,"endColumn":52},{"ruleId":"288","severity":1,"message":"317","line":1,"column":17,"nodeType":"290","messageId":"291","endLine":1,"endColumn":25},{"ruleId":"288","severity":1,"message":"318","line":2,"column":17,"nodeType":"290","messageId":"291","endLine":2,"endColumn":20},{"ruleId":"288","severity":1,"message":"319","line":2,"column":46,"nodeType":"290","messageId":"291","endLine":2,"endColumn":52},{"ruleId":"288","severity":1,"message":"320","line":1,"column":27,"nodeType":"290","messageId":"291","endLine":1,"endColumn":37},{"ruleId":"288","severity":1,"message":"294","line":3,"column":8,"nodeType":"290","messageId":"291","endLine":3,"endColumn":12},{"ruleId":"288","severity":1,"message":"321","line":21,"column":16,"nodeType":"290","messageId":"291","endLine":21,"endColumn":23},{"ruleId":"288","severity":1,"message":"322","line":24,"column":10,"nodeType":"290","messageId":"291","endLine":24,"endColumn":20},{"ruleId":"288","severity":1,"message":"323","line":24,"column":22,"nodeType":"290","messageId":"291","endLine":24,"endColumn":35},{"ruleId":"304","severity":1,"message":"305","line":42,"column":18,"nodeType":"306","messageId":"307","endLine":42,"endColumn":20},{"ruleId":"288","severity":1,"message":"324","line":50,"column":10,"nodeType":"290","messageId":"291","endLine":50,"endColumn":16},{"ruleId":"288","severity":1,"message":"325","line":83,"column":9,"nodeType":"290","messageId":"291","endLine":83,"endColumn":23},{"ruleId":"288","severity":1,"message":"317","line":1,"column":17,"nodeType":"290","messageId":"291","endLine":1,"endColumn":25},{"ruleId":"288","severity":1,"message":"318","line":2,"column":17,"nodeType":"290","messageId":"291","endLine":2,"endColumn":20},{"ruleId":"288","severity":1,"message":"319","line":2,"column":46,"nodeType":"290","messageId":"291","endLine":2,"endColumn":52},{"ruleId":"288","severity":1,"message":"326","line":9,"column":10,"nodeType":"290","messageId":"291","endLine":9,"endColumn":20},{"ruleId":"288","severity":1,"message":"327","line":9,"column":22,"nodeType":"290","messageId":"291","endLine":9,"endColumn":35},{"ruleId":"288","severity":1,"message":"321","line":13,"column":16,"nodeType":"290","messageId":"291","endLine":13,"endColumn":23},{"ruleId":"304","severity":1,"message":"305","line":28,"column":18,"nodeType":"306","messageId":"307","endLine":28,"endColumn":20},{"ruleId":"288","severity":1,"message":"328","line":2,"column":23,"nodeType":"290","messageId":"291","endLine":2,"endColumn":27},{"ruleId":"288","severity":1,"message":"329","line":3,"column":26,"nodeType":"290","messageId":"291","endLine":3,"endColumn":38},{"ruleId":"288","severity":1,"message":"330","line":3,"column":40,"nodeType":"290","messageId":"291","endLine":3,"endColumn":52},{"ruleId":"288","severity":1,"message":"326","line":8,"column":10,"nodeType":"290","messageId":"291","endLine":8,"endColumn":20},{"ruleId":"288","severity":1,"message":"327","line":8,"column":22,"nodeType":"290","messageId":"291","endLine":8,"endColumn":35},{"ruleId":"288","severity":1,"message":"321","line":12,"column":16,"nodeType":"290","messageId":"291","endLine":12,"endColumn":23},{"ruleId":"288","severity":1,"message":"331","line":13,"column":10,"nodeType":"290","messageId":"291","endLine":13,"endColumn":18},{"ruleId":"288","severity":1,"message":"332","line":14,"column":29,"nodeType":"290","messageId":"291","endLine":14,"endColumn":49},{"ruleId":"288","severity":1,"message":"326","line":8,"column":10,"nodeType":"290","messageId":"291","endLine":8,"endColumn":20},{"ruleId":"288","severity":1,"message":"327","line":8,"column":22,"nodeType":"290","messageId":"291","endLine":8,"endColumn":35},{"ruleId":"288","severity":1,"message":"321","line":12,"column":16,"nodeType":"290","messageId":"291","endLine":12,"endColumn":23},{"ruleId":"288","severity":1,"message":"331","line":13,"column":10,"nodeType":"290","messageId":"291","endLine":13,"endColumn":18},{"ruleId":"288","severity":1,"message":"332","line":14,"column":29,"nodeType":"290","messageId":"291","endLine":14,"endColumn":49},{"ruleId":"288","severity":1,"message":"292","line":1,"column":27,"nodeType":"290","messageId":"291","endLine":1,"endColumn":36},{"ruleId":"288","severity":1,"message":"326","line":7,"column":10,"nodeType":"290","messageId":"291","endLine":7,"endColumn":20},{"ruleId":"288","severity":1,"message":"327","line":7,"column":22,"nodeType":"290","messageId":"291","endLine":7,"endColumn":35},{"ruleId":"288","severity":1,"message":"333","line":10,"column":10,"nodeType":"290","messageId":"291","endLine":10,"endColumn":19},{"ruleId":"288","severity":1,"message":"334","line":10,"column":21,"nodeType":"290","messageId":"291","endLine":10,"endColumn":33},{"ruleId":"288","severity":1,"message":"335","line":12,"column":10,"nodeType":"290","messageId":"291","endLine":12,"endColumn":19},{"ruleId":"288","severity":1,"message":"336","line":12,"column":21,"nodeType":"290","messageId":"291","endLine":12,"endColumn":33},{"ruleId":"288","severity":1,"message":"326","line":8,"column":10,"nodeType":"290","messageId":"291","endLine":8,"endColumn":20},{"ruleId":"288","severity":1,"message":"327","line":8,"column":22,"nodeType":"290","messageId":"291","endLine":8,"endColumn":35},{"ruleId":"288","severity":1,"message":"326","line":7,"column":10,"nodeType":"290","messageId":"291","endLine":7,"endColumn":20},{"ruleId":"288","severity":1,"message":"327","line":7,"column":22,"nodeType":"290","messageId":"291","endLine":7,"endColumn":35},{"ruleId":"288","severity":1,"message":"337","line":7,"column":3,"nodeType":"290","messageId":"291","endLine":7,"endColumn":7},{"ruleId":"288","severity":1,"message":"338","line":8,"column":3,"nodeType":"290","messageId":"291","endLine":8,"endColumn":8},{"ruleId":"288","severity":1,"message":"298","line":10,"column":3,"nodeType":"290","messageId":"291","endLine":10,"endColumn":11},{"ruleId":"288","severity":1,"message":"339","line":11,"column":3,"nodeType":"290","messageId":"291","endLine":11,"endColumn":8},{"ruleId":"288","severity":1,"message":"302","line":16,"column":16,"nodeType":"290","messageId":"291","endLine":16,"endColumn":20},{"ruleId":"288","severity":1,"message":"340","line":33,"column":9,"nodeType":"290","messageId":"291","endLine":33,"endColumn":17},{"ruleId":"288","severity":1,"message":"341","line":46,"column":9,"nodeType":"290","messageId":"291","endLine":46,"endColumn":23},{"ruleId":"288","severity":1,"message":"303","line":51,"column":9,"nodeType":"290","messageId":"291","endLine":51,"endColumn":17},{"ruleId":"313","severity":1,"message":"314","line":87,"column":17,"nodeType":"315","messageId":"316","endLine":95,"endColumn":18},{"ruleId":"288","severity":1,"message":"292","line":1,"column":27,"nodeType":"290","messageId":"291","endLine":1,"endColumn":36},{"ruleId":"288","severity":1,"message":"333","line":11,"column":10,"nodeType":"290","messageId":"291","endLine":11,"endColumn":19},{"ruleId":"288","severity":1,"message":"334","line":11,"column":21,"nodeType":"290","messageId":"291","endLine":11,"endColumn":33},{"ruleId":"288","severity":1,"message":"342","line":24,"column":9,"nodeType":"290","messageId":"291","endLine":24,"endColumn":17},{"ruleId":"343","severity":1,"message":"344","line":57,"column":9,"nodeType":"345","messageId":"346","endLine":65,"endColumn":10},{"ruleId":"288","severity":1,"message":"347","line":8,"column":3,"nodeType":"290","messageId":"291","endLine":8,"endColumn":6},{"ruleId":"288","severity":1,"message":"339","line":11,"column":3,"nodeType":"290","messageId":"291","endLine":11,"endColumn":8},{"ruleId":"288","severity":1,"message":"338","line":12,"column":3,"nodeType":"290","messageId":"291","endLine":12,"endColumn":8},{"ruleId":"288","severity":1,"message":"348","line":19,"column":10,"nodeType":"290","messageId":"291","endLine":19,"endColumn":14},{"ruleId":"288","severity":1,"message":"321","line":19,"column":16,"nodeType":"290","messageId":"291","endLine":19,"endColumn":23},{"ruleId":"288","severity":1,"message":"349","line":20,"column":10,"nodeType":"290","messageId":"291","endLine":20,"endColumn":21},{"ruleId":"288","severity":1,"message":"350","line":20,"column":23,"nodeType":"290","messageId":"291","endLine":20,"endColumn":37},{"ruleId":"288","severity":1,"message":"322","line":24,"column":10,"nodeType":"290","messageId":"291","endLine":24,"endColumn":20},{"ruleId":"288","severity":1,"message":"323","line":24,"column":22,"nodeType":"290","messageId":"291","endLine":24,"endColumn":35},{"ruleId":"288","severity":1,"message":"324","line":25,"column":10,"nodeType":"290","messageId":"291","endLine":25,"endColumn":16},{"ruleId":"288","severity":1,"message":"351","line":25,"column":18,"nodeType":"290","messageId":"291","endLine":25,"endColumn":27},{"ruleId":"288","severity":1,"message":"352","line":26,"column":10,"nodeType":"290","messageId":"291","endLine":26,"endColumn":14},{"ruleId":"288","severity":1,"message":"353","line":26,"column":16,"nodeType":"290","messageId":"291","endLine":26,"endColumn":23},{"ruleId":"288","severity":1,"message":"354","line":27,"column":10,"nodeType":"290","messageId":"291","endLine":27,"endColumn":20},{"ruleId":"288","severity":1,"message":"303","line":44,"column":9,"nodeType":"290","messageId":"291","endLine":44,"endColumn":17},{"ruleId":"343","severity":1,"message":"344","line":48,"column":5,"nodeType":"345","messageId":"346","endLine":64,"endColumn":6},{"ruleId":"313","severity":1,"message":"314","line":50,"column":9,"nodeType":"315","messageId":"316","endLine":62,"endColumn":10},{"ruleId":"288","severity":1,"message":"342","line":67,"column":9,"nodeType":"290","messageId":"291","endLine":67,"endColumn":17},{"ruleId":"304","severity":1,"message":"305","line":86,"column":27,"nodeType":"306","messageId":"307","endLine":86,"endColumn":29},"no-native-reassign",["355"],"no-negated-in-lhs",["356"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Component' is defined but never used.","'logo' is defined but never used.","'ProtectedRoute' is defined but never used.","'Link' is defined but never used.","'AdminProtectedRoutes' is defined but never used.","'Checkbox' is defined but never used.","'errorMessage' is assigned a value but never used.","'Content' is defined but never used.","'Title' is assigned a value but never used.","'Text' is assigned a value but never used.","'checking' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'JeepneyDasboard' is defined but never used.","'UploadDashboard' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'Suspense' is defined but never used.","'Tag' is defined but never used.","'Button' is defined but never used.","'useContext' is defined but never used.","'setFile' is assigned a value but never used.","'fetchImage' is assigned a value but never used.","'setFetchImage' is assigned a value but never used.","'images' is assigned a value but never used.","'checkingValues' is assigned a value but never used.","'modalValue' is assigned a value but never used.","'setModalValue' is assigned a value but never used.","'Menu' is defined but never used.","'DownOutlined' is defined but never used.","'UserOutlined' is defined but never used.","'filename' is assigned a value but never used.","'setUploadedImagePath' is assigned a value but never used.","'barangays' is assigned a value but never used.","'setBarangays' is assigned a value but never used.","'imagePath' is assigned a value but never used.","'setImagePath' is assigned a value but never used.","'Form' is defined but never used.","'Input' is defined but never used.","'Radio' is defined but never used.","'onFinish' is assigned a value but never used.","'onFinishFailed' is assigned a value but never used.","'handleOk' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'Col' is defined but never used.","'file' is assigned a value but never used.","'imageStatus' is assigned a value but never used.","'setImageStatus' is assigned a value but never used.","'setImages' is assigned a value but never used.","'info' is assigned a value but never used.","'setInfo' is assigned a value but never used.","'ifCanceled' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]